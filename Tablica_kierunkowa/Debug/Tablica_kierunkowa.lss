
Tablica_kierunkowa.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016e  00800100  00003228  000032bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003228  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000476  0080026e  0080026e  0000342a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000342a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000345c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00002c98  00000000  00000000  0000349c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0005c9bd  00000000  00000000  00006134  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000027d0  00000000  00000000  00062af1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000ffec  00000000  00000000  000652c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00011b70  00000000  00000000  000752b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00015446  00000000  00000000  00086e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0006edbe  00000000  00000000  0009c266  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002ba8  00000000  00000000  0010b024  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__ctors_end>
       4:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
       8:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
       c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      10:	0c 94 de 17 	jmp	0x2fbc	; 0x2fbc <__vector_4>
      14:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      18:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      1c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      20:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      24:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      28:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      2c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      30:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      34:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      38:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      3c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      40:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      44:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      48:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      4c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      50:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      54:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      58:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      5c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      60:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      64:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      68:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      6c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      70:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      74:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      78:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      7c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      80:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      84:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      88:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      8c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      90:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      94:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      98:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      9c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      a0:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      a4:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      a8:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      ac:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>
      b0:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	bf 00       	.word	0x00bf	; ????
      b6:	03 02       	muls	r16, r19
      b8:	04 04       	cpc	r0, r4
      ba:	04 05       	cpc	r16, r4
      bc:	05 17       	cp	r16, r21
      be:	10 f8       	bld	r1, 0
      c0:	fd 0a       	sbc	r15, r29
      c2:	fd 0a       	sbc	r15, r29
      c4:	fd 01       	movw	r30, r26
      c6:	f3 04       	cpc	r15, r3
      c8:	45 0c       	add	r4, r5
      ca:	fc 20       	and	r15, r12
      cc:	05 00       	.word	0x0005	; ????
      ce:	18 29       	or	r17, r8
      d0:	21 0b       	sbc	r18, r17
      d2:	a4 09       	sbc	r26, r4
      d4:	a9 4c       	sbci	r26, 0xC9	; 201
      d6:	91 53       	subi	r25, 0x31	; 49
      d8:	2c 49       	sbci	r18, 0x9C	; 156
      da:	00 22       	and	r0, r16
      dc:	0b 45       	sbci	r16, 0x5B	; 91
      de:	6a 2d       	mov	r22, r10
      e0:	94 21       	and	r25, r4
      e2:	19 92       	st	Y+, r1
      e4:	29 01       	movw	r4, r18
      e6:	23 16       	cp	r2, r19
      e8:	a9 09       	sbc	r26, r9
      ea:	73 a3       	std	Z+35, r23	; 0x23
      ec:	30 4a       	sbci	r19, 0xA0	; 160
      ee:	a3 68       	ori	r26, 0x83	; 131
      f0:	18 b4       	in	r1, 0x28	; 40
      f2:	28 8c       	ldd	r2, Y+24	; 0x18
      f4:	b2 61       	ori	r27, 0x12	; 18
      f6:	90 aa       	std	Z+48, r9	; 0x30
      f8:	51 18       	sub	r5, r1
      fa:	a5 00       	.word	0x00a5	; ????
      fc:	24 15       	cp	r18, r4
      fe:	d8 ea       	ldi	r29, 0xA8	; 168
     100:	72 d3       	rcall	.+1764   	; 0x7e6 <__EEPROM_REGION_LENGTH__+0x3e6>
     102:	41 9a       	sbi	0x08, 1	; 8
     104:	2a 51       	subi	r18, 0x1A	; 26
     106:	34 eb       	ldi	r19, 0xB4	; 180
     108:	6a a2       	std	Y+34, r6	; 0x22
     10a:	44 89       	ldd	r20, Z+20	; 0x14
     10c:	12 1d       	adc	r17, r2
     10e:	d4 3c       	cpi	r29, 0xC4	; 196
     110:	05 25       	eor	r16, r5
     112:	1b aa       	std	Y+51, r1	; 0x33
     114:	09 77       	andi	r16, 0x79	; 121
     116:	86 30       	cpi	r24, 0x06	; 6
     118:	89 b2       	in	r8, 0x19	; 25
     11a:	44 2a       	or	r4, r20
     11c:	29 4a       	sbci	r18, 0xA9	; 169
     11e:	b8 e4       	ldi	r27, 0x48	; 72
     120:	48 32       	cpi	r20, 0x28	; 40
     122:	64 4a       	sbci	r22, 0xA4	; 164
     124:	14 29       	or	r17, r4
     126:	52 22       	and	r5, r18
     128:	29 43       	sbci	r18, 0x39	; 57
     12a:	b8 00       	.word	0x00b8	; ????
     12c:	26 16       	cp	r2, r22
     12e:	ab 09       	sbc	r26, r11
     130:	37 87       	std	Z+15, r19	; 0x0f
     132:	58 8a       	std	Y+16, r5	; 0x10
     134:	a5 78       	andi	r26, 0x85	; 133
     136:	88 13       	cpse	r24, r24
     138:	65 98       	cbi	0x0c, 5	; 12
     13a:	2c 9a       	sbi	0x05, 4	; 5
     13c:	12 69       	ori	r17, 0x92	; 146
     13e:	37 71       	andi	r19, 0x17	; 23
     140:	b8 00       	.word	0x00b8	; ????
     142:	27 07       	cpc	r18, r23
     144:	42 6a       	ori	r20, 0xA2	; 162
     146:	27 2e       	mov	r2, r23
     148:	01 28       	or	r0, r1
     14a:	0c d5       	rcall	.+2584   	; 0xb64 <__stack+0x265>
     14c:	d9 2a       	or	r13, r25
     14e:	b3 9a       	sbi	0x16, 3	; 22
     150:	49 f3       	breq	.-46     	; 0x124 <__trampolines_end+0x70>
     152:	31 8d       	ldd	r19, Z+25	; 0x19
     154:	00 29       	or	r16, r0
     156:	0c d5       	rcall	.+2584   	; 0xb70 <__stack+0x271>
     158:	d8 ea       	ldi	r29, 0xA8	; 168
     15a:	c2 50       	subi	r28, 0x02	; 2
     15c:	f3 2d       	mov	r31, r3
     15e:	d3 1a       	sub	r13, r19
     160:	01 2a       	or	r0, r17
     162:	0c 55       	subi	r16, 0x5C	; 92
     164:	5a ad       	ldd	r21, Y+58	; 0x3a
     166:	94 ca       	rjmp	.-2776   	; 0xfffff690 <__eeprom_end+0xff7ef690>
     168:	92 0c       	add	r9, r2
     16a:	49 94       	.word	0x9449	; ????
     16c:	00 2b       	or	r16, r16
     16e:	0c 88       	ldd	r0, Y+20	; 0x14
     170:	09 33       	cpi	r16, 0x39	; 57
     172:	f3 b6       	in	r15, 0x33	; 51
     174:	61 d0       	rcall	.+194    	; 0x238 <__trampolines_end+0x184>
     176:	f2 22       	and	r15, r18
     178:	00 2c       	mov	r0, r0
     17a:	0a 53       	subi	r16, 0x3A	; 58
     17c:	d8 68       	ori	r29, 0x88	; 136
     17e:	94 41       	sbci	r25, 0x14	; 20
     180:	49 14       	cp	r4, r9
     182:	00 2d       	mov	r16, r0
     184:	06 13       	cpse	r16, r22
     186:	49 29       	or	r20, r9
     188:	06 2e       	mov	r0, r22
     18a:	06 23       	and	r16, r22
     18c:	09 29       	or	r16, r9
     18e:	0e 2f       	mov	r16, r30
     190:	1a da       	rcall	.-3020   	; 0xfffff5c6 <__eeprom_end+0xff7ef5c6>
     192:	d8 ee       	ldi	r29, 0xE8	; 232
     194:	11 1d       	adc	r17, r1
     196:	c9 91       	ld	r28, Y+	; undefined
     198:	1c d1       	rcall	.+568    	; 0x3d2 <__trampolines_end+0x31e>
     19a:	91 1c       	adc	r9, r1
     19c:	c9 11       	cpse	r28, r9
     19e:	1d c9       	rjmp	.-3526   	; 0xfffff3da <__eeprom_end+0xff7ef3da>
     1a0:	91 1c       	adc	r9, r1
     1a2:	d1 91       	ld	r29, Z+
     1a4:	1c c9       	rjmp	.-3528   	; 0xfffff3de <__eeprom_end+0xff7ef3de>
     1a6:	11 1d       	adc	r17, r1
     1a8:	01 30       	cpi	r16, 0x01	; 1
     1aa:	15 a8       	ldd	r1, Z+53	; 0x35
     1ac:	09 f3       	breq	.-62     	; 0x170 <__trampolines_end+0xbc>
     1ae:	86 4c       	sbci	r24, 0xC6	; 198
     1b0:	52 34       	cpi	r21, 0x42	; 66
     1b2:	45 1b       	sub	r20, r21
     1b4:	c2 21       	and	r28, r2
     1b6:	1c c2       	rjmp	.+1080   	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
     1b8:	21 53       	subi	r18, 0x31	; 49
     1ba:	24 6d       	ori	r18, 0xD4	; 212
     1bc:	c8 00       	.word	0x00c8	; ????
     1be:	31 0c       	add	r3, r1
     1c0:	a6 0a       	sbc	r10, r22
     1c2:	b3 86       	std	Z+11, r11	; 0x0b
     1c4:	50 13       	cpse	r21, r16
     1c6:	bd 89       	ldd	r27, Y+21	; 0x15
     1c8:	d2 30       	cpi	r29, 0x02	; 2
     1ca:	32 12       	cpse	r3, r18
     1cc:	a8 09       	sbc	r26, r8
     1ce:	f3 86       	std	Z+11, r15	; 0x0b
     1d0:	2c 9a       	sbi	0x05, 4	; 5
     1d2:	32 59       	subi	r19, 0x92	; 146
     1d4:	1c d5       	rcall	.+2616   	; 0xc0e <__stack+0x30f>
     1d6:	38 1e       	adc	r3, r24
     1d8:	86 64       	ori	r24, 0x46	; 70
     1da:	98 00       	.word	0x0098	; ????
     1dc:	33 13       	cpse	r19, r19
     1de:	a8 09       	sbc	r26, r8
     1e0:	b3 06       	cpc	r11, r19
     1e2:	2d 93       	st	X+, r18
     1e4:	32 55       	subi	r19, 0x52	; 82
     1e6:	db 11       	cpse	r29, r11
     1e8:	59 09       	sbc	r21, r9
     1ea:	95 6c       	ori	r25, 0xC5	; 197
     1ec:	19 34       	cpi	r17, 0x49	; 73
     1ee:	00 34       	cpi	r16, 0x40	; 64
     1f0:	13 a8       	ldd	r1, Z+51	; 0x33
     1f2:	09 b3       	in	r16, 0x19	; 25
     1f4:	d5 31       	cpi	r29, 0x15	; 21
     1f6:	09 13       	cpse	r16, r25
     1f8:	2d 92       	st	X+, r2
     1fa:	32 65       	ori	r19, 0x52	; 82
     1fc:	18 44       	sbci	r17, 0x48	; 72
     1fe:	59 1d       	adc	r21, r9
     200:	12 00       	.word	0x0012	; ????
     202:	35 11       	cpse	r19, r5
     204:	a8 0a       	sbc	r10, r24
     206:	b3 86       	std	Z+11, r11	; 0x0b
     208:	29 8f       	std	Y+25, r18	; 0x19
     20a:	87 dc       	rcall	.-1778   	; 0xfffffb1a <__eeprom_end+0xff7efb1a>
     20c:	ac 84       	ldd	r10, Y+12	; 0x0c
     20e:	4a 26       	eor	r4, r26
     210:	0d 1a       	sub	r0, r29
     212:	00 36       	cpi	r16, 0x60	; 96
     214:	14 a8       	ldd	r1, Z+52	; 0x34
     216:	0a 33       	cpi	r16, 0x3A	; 58
     218:	87 48       	sbci	r24, 0x87	; 135
     21a:	4b c4       	rjmp	.+2198   	; 0xab2 <__stack+0x1b3>
     21c:	44 1d       	adc	r20, r4
     21e:	86 64       	ori	r24, 0x46	; 70
     220:	52 c4       	rjmp	.+2212   	; 0xac6 <__stack+0x1c7>
     222:	21 93       	st	Z+, r18
     224:	32 6d       	ori	r19, 0xD2	; 210
     226:	03 37       	cpi	r16, 0x73	; 115
     228:	0e a8       	ldd	r0, Y+54	; 0x36
     22a:	0a 73       	andi	r16, 0x3A	; 58
     22c:	86 21       	and	r24, r6
     22e:	19 86       	std	Y+9, r1	; 0x09
     230:	b8 b3       	in	r27, 0x18	; 24
     232:	6a 96       	adiw	r28, 0x1a	; 26
     234:	01 38       	cpi	r16, 0x81	; 129
     236:	12 a8       	ldd	r1, Z+50	; 0x32
     238:	09 f3       	breq	.-62     	; 0x1fc <__trampolines_end+0x148>
     23a:	86 4c       	sbci	r24, 0xC6	; 198
     23c:	f2 14       	cp	r15, r2
     23e:	6e ca       	rjmp	.-2852   	; 0xfffff71c <__eeprom_end+0xff7ef71c>
     240:	22 0e       	add	r2, r18
     242:	e1 20       	and	r14, r1
     244:	49 83       	std	Y+1, r20	; 0x01
     246:	04 39       	cpi	r16, 0x94	; 148
     248:	14 a8       	ldd	r1, Z+52	; 0x34
     24a:	09 f3       	breq	.-62     	; 0x20e <__trampolines_end+0x15a>
     24c:	86 4c       	sbci	r24, 0xC6	; 198
     24e:	52 34       	cpi	r21, 0x42	; 66
     250:	45 53       	subi	r20, 0x35	; 53
     252:	a4 8b       	std	Z+20, r26	; 0x14
     254:	3a 84       	ldd	r3, Y+10	; 0x0a
     256:	4a 26       	eor	r4, r26
     258:	0d 1a       	sub	r0, r29
     25a:	00 3a       	cpi	r16, 0xA0	; 160
     25c:	0a 74       	andi	r16, 0x4A	; 74
     25e:	09 a9       	ldd	r16, Y+49	; 0x31
     260:	94 1d       	adc	r25, r4
     262:	5d 24       	eor	r5, r13
     264:	00 3b       	cpi	r16, 0xB0	; 176
     266:	0b a4       	ldd	r0, Y+43	; 0x2b
     268:	d8 a8       	ldd	r13, Y+48	; 0x30
     26a:	ec b0       	in	r14, 0x0c	; 12
     26c:	a4 4c       	sbci	r26, 0xC4	; 196
     26e:	91 04       	cpc	r9, r1
     270:	3c 0f       	add	r19, r28
     272:	89 09       	sbc	r24, r9
     274:	f3 91       	.word	0x91f3	; ????
     276:	58 dc       	rcall	.-1872   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
     278:	76 1d       	adc	r23, r6
     27a:	d2 21       	and	r29, r2
     27c:	1d 51       	subi	r17, 0x1D	; 29
     27e:	00 3d       	cpi	r16, 0xD0	; 208
     280:	09 49       	sbci	r16, 0x99	; 153
     282:	29 33       	cpi	r18, 0x39	; 57
     284:	de 89       	ldd	r29, Y+22	; 0x16
     286:	c3 01       	movw	r24, r6
     288:	3e 0f       	add	r19, r30
     28a:	89 08       	sbc	r8, r9
     28c:	73 74       	andi	r23, 0x43	; 67
     28e:	44 87       	std	Z+12, r20	; 0x0c
     290:	74 48       	sbci	r23, 0x84	; 132
     292:	df 46       	sbci	r29, 0x6F	; 111
     294:	39 47       	sbci	r19, 0x79	; 121
     296:	00 3f       	cpi	r16, 0xF0	; 240
     298:	0e a6       	std	Y+46, r0	; 0x2e
     29a:	0a 6f       	ori	r16, 0xFA	; 250
     29c:	86 44       	sbci	r24, 0x46	; 70
     29e:	da c4       	rjmp	.+2484   	; 0xc54 <__stack+0x355>
     2a0:	46 1d       	adc	r20, r6
     2a2:	12 45       	sbci	r17, 0x52	; 82
     2a4:	00 40       	sbci	r16, 0x00	; 0
     2a6:	19 ab       	std	Y+49, r17	; 0x31
     2a8:	09 39       	cpi	r16, 0x99	; 153
     2aa:	07 51       	subi	r16, 0x17	; 23
     2ac:	55 32       	cpi	r21, 0x25	; 37
     2ae:	2d 89       	ldd	r18, Y+21	; 0x15
     2b0:	22 45       	sbci	r18, 0x52	; 82
     2b2:	ca 22       	and	r12, r26
     2b4:	29 32       	cpi	r18, 0x29	; 41
     2b6:	25 93       	las	Z, r18
     2b8:	b4 4c       	sbci	r27, 0xC4	; 196
     2ba:	61 3c       	cpi	r22, 0xC1	; 193
     2bc:	a4 00       	.word	0x00a4	; ????
     2be:	41 16       	cp	r4, r17
     2c0:	ab 08       	sbc	r10, r11
     2c2:	f7 73       	andi	r31, 0x37	; 55
     2c4:	48 47       	sbci	r20, 0x78	; 120
     2c6:	12 3d       	cpi	r17, 0xD2	; 210
     2c8:	91 23       	and	r25, r17
     2ca:	35 53       	subi	r19, 0x35	; 53
     2cc:	87 21       	and	r24, r7
     2ce:	4b a5       	ldd	r20, Y+43	; 0x2b
     2d0:	58 19       	sub	r21, r8
     2d2:	87 00       	.word	0x0087	; ????
     2d4:	42 16       	cp	r4, r18
     2d6:	a9 09       	sbc	r26, r9
     2d8:	b3 86       	std	Z+11, r11	; 0x0b
     2da:	21 93       	st	Z+, r18
     2dc:	b4 4c       	sbci	r27, 0xC4	; 196
     2de:	b2 0d       	add	r27, r2
     2e0:	a2 14       	cp	r10, r2
     2e2:	4a 5a       	subi	r20, 0xAA	; 170
     2e4:	26 49       	sbci	r18, 0x96	; 150
     2e6:	cb 30       	cpi	r28, 0x0B	; 11
     2e8:	44 00       	.word	0x0044	; ????
     2ea:	43 13       	cpse	r20, r19
     2ec:	aa 09       	sbc	r26, r10
     2ee:	35 87       	std	Z+13, r19	; 0x0d
     2f0:	69 53       	subi	r22, 0x39	; 57
     2f2:	54 45       	sbci	r21, 0x54	; 84
     2f4:	df 75       	andi	r29, 0x5F	; 95
     2f6:	44 47       	sbci	r20, 0x74	; 116
     2f8:	76 44       	sbci	r23, 0x46	; 70
     2fa:	0c 07       	cpc	r16, r28
     2fc:	0d 44       	sbci	r16, 0x4D	; 77
     2fe:	16 ab       	std	Z+54, r17	; 0x36
     300:	09 b7       	in	r16, 0x39	; 57
     302:	86 21       	and	r24, r6
     304:	d5 44       	sbci	r29, 0x45	; 69
     306:	93 2a       	or	r9, r19
     308:	a9 92       	st	Y+, r10
     30a:	2a 89       	ldd	r18, Y+18	; 0x12
     30c:	9a 28       	or	r9, r10
     30e:	69 d3       	rcall	.+1746   	; 0x9e2 <__stack+0xe3>
     310:	30 84       	ldd	r3, Z+8	; 0x08
     312:	00 45       	sbci	r16, 0x50	; 80
     314:	14 a9       	ldd	r17, Z+52	; 0x34
     316:	09 b3       	in	r16, 0x19	; 25
     318:	86 21       	and	r24, r6
     31a:	d3 32       	cpi	r29, 0x23	; 35
     31c:	59 0a       	sbc	r5, r25
     31e:	07 51       	subi	r16, 0x17	; 23
     320:	0a 65       	ori	r16, 0x5A	; 90
     322:	5d 4c       	sbci	r21, 0xCD	; 205
     324:	86 21       	and	r24, r6
     326:	02 46       	sbci	r16, 0x62	; 98
     328:	12 a9       	ldd	r17, Z+50	; 0x32
     32a:	09 b1       	in	r16, 0x09	; 9
     32c:	86 21       	and	r24, r6
     32e:	d3 ea       	ldi	r29, 0xA3	; 163
     330:	52 38       	cpi	r21, 0x82	; 130
     332:	88 52       	subi	r24, 0x28	; 40
     334:	a8 e7       	ldi	r26, 0x78	; 120
     336:	f2 90       	ld	r15, -Z
     338:	02 47       	sbci	r16, 0x72	; 114
     33a:	14 aa       	std	Z+52, r1	; 0x34
     33c:	09 37       	cpi	r16, 0x79	; 121
     33e:	87 69       	ori	r24, 0x97	; 151
     340:	53 d6       	rcall	.+3238   	; 0xfe8 <u8g2_font_crox1hb_tf+0x21b>
     342:	44 df       	rcall	.-376    	; 0x1cc <__trampolines_end+0x118>
     344:	b5 61       	ori	r27, 0x15	; 21
     346:	48 15       	cp	r20, r8
     348:	71 d2       	rcall	.+1250   	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     34a:	c4 61       	ori	r28, 0x14	; 20
     34c:	02 48       	sbci	r16, 0x82	; 130
     34e:	17 ad       	ldd	r17, Z+63	; 0x3f
     350:	08 b9       	out	0x08, r16	; 8
     352:	06 65       	ori	r16, 0x56	; 86
     354:	d0 c4       	rjmp	.+2464   	; 0xcf6 <__stack+0x3f7>
     356:	d1 2a       	or	r13, r17
     358:	8a c3       	rjmp	.+1812   	; 0xa6e <__stack+0x16f>
     35a:	51 15       	cp	r21, r1
     35c:	ad a2       	std	Y+37, r10	; 0x25
     35e:	38 6a       	ori	r19, 0xA8	; 168
     360:	83 32       	cpi	r24, 0x23	; 35
     362:	48 00       	.word	0x0048	; ????
     364:	49 0e       	add	r4, r25
     366:	a6 09       	sbc	r26, r6
     368:	ab 86       	std	Y+11, r10	; 0x0b
     36a:	4c db       	rcall	.-2408   	; 0xfffffa04 <__eeprom_end+0xff7efa04>
     36c:	44 37       	cpi	r20, 0x74	; 116
     36e:	51 1b       	sub	r21, r17
     370:	22 00       	.word	0x0022	; ????
     372:	4a 11       	cpse	r20, r10
     374:	d9 d8       	rcall	.-3662   	; 0xfffff528 <__eeprom_end+0xff7ef528>
     376:	2e 07       	cpc	r18, r30
     378:	75 d6       	rcall	.+3306   	; 0x1064 <u8g2_font_crox1hb_tf+0x297>
     37a:	9d 67       	ori	r25, 0x7D	; 125
     37c:	dd a6       	std	Y+45, r13	; 0x2d
     37e:	6c 91       	ld	r22, X
     380:	38 a4       	ldd	r3, Y+40	; 0x28
     382:	00 4b       	sbci	r16, 0xB0	; 176
     384:	16 ab       	std	Z+54, r17	; 0x36
     386:	08 b5       	in	r16, 0x28	; 40
     388:	86 68       	ori	r24, 0x86	; 134
     38a:	33 4a       	sbci	r19, 0xA3	; 163
     38c:	e9 12       	cpse	r14, r25
     38e:	0f f9       	.word	0xf90f	; ????
     390:	20 2b       	or	r18, r16
     392:	ab 24       	eor	r10, r11
     394:	9a 86       	std	Y+10, r9	; 0x0a
     396:	68 48       	sbci	r22, 0x88	; 136
     398:	00 4c       	sbci	r16, 0xC0	; 192
     39a:	0d a8       	ldd	r0, Y+53	; 0x35
     39c:	09 b3       	in	r16, 0x19	; 25
     39e:	86 54       	subi	r24, 0x46	; 70
     3a0:	56 65       	ori	r21, 0x56	; 86
     3a2:	6f 89       	ldd	r22, Y+23	; 0x17
     3a4:	38 1c       	adc	r3, r8
     3a6:	4d 1b       	sub	r20, r29
     3a8:	ae 08       	sbc	r10, r14
     3aa:	bb e6       	ldi	r27, 0x6B	; 107
     3ac:	4d 1d       	adc	r20, r13
     3ae:	b7 31       	cpi	r27, 0x17	; 23
     3b0:	91 12       	cpse	r9, r17
     3b2:	31 91       	ld	r19, Z+
     3b4:	12 31       	cpi	r17, 0x12	; 18
     3b6:	19 22       	and	r1, r25
     3b8:	31 d2       	rcall	.+1122   	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     3ba:	c4 c8       	rjmp	.-3704   	; 0xfffff544 <__eeprom_end+0xff7ef544>
     3bc:	98 6b       	ori	r25, 0xB8	; 184
     3be:	eb 10       	cpse	r14, r11
     3c0:	01 4e       	sbci	r16, 0xE1	; 225
     3c2:	18 ac       	ldd	r1, Y+56	; 0x38
     3c4:	09 b7       	in	r16, 0x39	; 57
     3c6:	c6 4d       	sbci	r28, 0xD6	; 214
     3c8:	0d 37       	cpi	r16, 0x7D	; 125
     3ca:	2d d1       	rcall	.+602    	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
     3cc:	c2 48       	sbci	r28, 0x82	; 130
     3ce:	0a 23       	and	r16, r26
     3d0:	29 cc       	rjmp	.-1966   	; 0xfffffc24 <__eeprom_end+0xff7efc24>
     3d2:	94 30       	cpi	r25, 0x04	; 4
     3d4:	1b 53       	subi	r17, 0x3B	; 59
     3d6:	6d cd       	rjmp	.-1318   	; 0xfffffeb2 <__eeprom_end+0xff7efeb2>
     3d8:	00 4f       	sbci	r16, 0xF0	; 240
     3da:	14 ab       	std	Z+52, r17	; 0x34
     3dc:	0a 39       	cpi	r16, 0x9A	; 154
     3de:	07 71       	andi	r16, 0x17	; 23
     3e0:	93 46       	sbci	r25, 0x63	; 99
     3e2:	49 1d       	adc	r20, r9
     3e4:	d6 41       	sbci	r29, 0x16	; 22
     3e6:	56 64       	ori	r21, 0x46	; 70
     3e8:	45 d5       	rcall	.+2698   	; 0xe74 <u8g2_font_crox1hb_tf+0xa7>
     3ea:	ac 43       	sbci	r26, 0x3C	; 60
     3ec:	0a 50       	subi	r16, 0x0A	; 10
     3ee:	12 a9       	ldd	r17, Z+50	; 0x32
     3f0:	09 b3       	in	r16, 0x19	; 25
     3f2:	86 51       	subi	r24, 0x16	; 22
     3f4:	d2 32       	cpi	r29, 0x22	; 34
     3f6:	49 93       	st	Y+, r20
     3f8:	6c 83       	std	Y+4, r22	; 0x04
     3fa:	28 eb       	ldi	r18, 0xB8	; 184
     3fc:	f2 90       	ld	r15, -Z
     3fe:	02 51       	subi	r16, 0x12	; 18
     400:	19 dc       	rcall	.-1998   	; 0xfffffc34 <__eeprom_end+0xff7efc34>
     402:	da 38       	cpi	r29, 0x8A	; 138
     404:	07 75       	andi	r16, 0x57	; 87
     406:	d3 46       	sbci	r29, 0x63	; 99
     408:	4d 5d       	subi	r20, 0xDD	; 221
     40a:	d6 45       	sbci	r29, 0x56	; 86
     40c:	96 64       	ori	r25, 0x46	; 70
     40e:	49 dd       	rcall	.-1390   	; 0xfffffea2 <__eeprom_end+0xff7efea2>
     410:	b4 75       	andi	r27, 0x54	; 84
     412:	d8 a1       	ldd	r29, Y+32	; 0x20
     414:	1c d5       	rcall	.+2616   	; 0xe4e <u8g2_font_crox1hb_tf+0x81>
     416:	d1 21       	and	r29, r1
     418:	52 13       	cpse	r21, r18
     41a:	aa 08       	sbc	r10, r10
     41c:	b5 86       	std	Z+13, r11	; 0x0d
     41e:	41 f3       	breq	.-48     	; 0x3f0 <__trampolines_end+0x33c>
     420:	49 1b       	sub	r20, r25
     422:	46 45       	sbci	r20, 0x56	; 86
     424:	95 44       	sbci	r25, 0x45	; 69
     426:	49 db       	rcall	.-2414   	; 0xfffffaba <__eeprom_end+0xff7efaba>
     428:	94 21       	and	r25, r4
     42a:	1b 53       	subi	r17, 0x3B	; 59
     42c:	12 a8       	ldd	r1, Z+50	; 0x32
     42e:	09 f1       	breq	.+66     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     430:	06 49       	sbci	r16, 0x96	; 150
     432:	4b b6       	in	r4, 0x3b	; 59
     434:	48 3e       	cpi	r20, 0xE8	; 232
     436:	c4 4a       	sbci	r28, 0xA4	; 164
     438:	a8 64       	ori	r26, 0x48	; 72
     43a:	cb a0       	ldd	r12, Y+35	; 0x23
     43c:	01 54       	subi	r16, 0x41	; 65
     43e:	12 aa       	std	Z+50, r1	; 0x32
     440:	0a 35       	cpi	r16, 0x5A	; 90
     442:	1e 34       	cpi	r17, 0x4E	; 78
     444:	2d d4       	rcall	.+2138   	; 0xca0 <__stack+0x3a1>
     446:	77 1d       	adc	r23, r7
     448:	d1 11       	cpse	r29, r1
     44a:	1d d1       	rcall	.+570    	; 0x686 <__EEPROM_REGION_LENGTH__+0x286>
     44c:	e7 41       	sbci	r30, 0x17	; 23
     44e:	04 55       	subi	r16, 0x54	; 84
     450:	16 aa       	std	Z+54, r1	; 0x36
     452:	0a 37       	cpi	r16, 0x7A	; 122
     454:	06 69       	ori	r16, 0x96	; 150
     456:	51 23       	and	r21, r17
     458:	35 52       	subi	r19, 0x25	; 37
     45a:	93 31       	cpi	r25, 0x13	; 19
     45c:	52 23       	and	r21, r18
     45e:	35 52       	subi	r19, 0x25	; 37
     460:	a3 2d       	mov	r26, r3
     462:	1c 44       	sbci	r17, 0x4C	; 76
     464:	00 56       	subi	r16, 0x60	; 96
     466:	16 ab       	std	Z+54, r17	; 0x36
     468:	0a 35       	cpi	r16, 0x5A	; 90
     46a:	86 70       	andi	r24, 0x06	; 6
     46c:	91 23       	and	r25, r17
     46e:	35 db       	rcall	.-2454   	; 0xfffffada <__eeprom_end+0xff7efada>
     470:	44 2d       	mov	r20, r4
     472:	95 62       	ori	r25, 0x25	; 37
     474:	45 1e       	adc	r4, r21
     476:	72 44       	sbci	r23, 0x42	; 66
     478:	87 64       	ori	r24, 0x47	; 71
     47a:	00 57       	subi	r16, 0x70	; 112
     47c:	1c ad       	ldd	r17, Y+60	; 0x3c
     47e:	0a 3b       	cpi	r16, 0xBA	; 186
     480:	86 28       	or	r8, r6
     482:	5b 34       	cpi	r21, 0x4B	; 75
     484:	2d 92       	st	X+, r2
     486:	a6 4c       	sbci	r26, 0xC6	; 198
     488:	9a 32       	cpi	r25, 0x2A	; 42
     48a:	25 51       	subi	r18, 0x15	; 21
     48c:	42 25       	eor	r20, r2
     48e:	51 c2       	rjmp	.+1186   	; 0x932 <__stack+0x33>
     490:	69 9d       	mul	r22, r9
     492:	56 4d       	sbci	r21, 0xD6	; 214
     494:	d6 54       	subi	r29, 0x46	; 70
     496:	00 58       	subi	r16, 0x80	; 128
     498:	15 ab       	std	Z+53, r17	; 0x35
     49a:	08 b3       	in	r16, 0x18	; 24
     49c:	86 68       	ori	r24, 0x86	; 134
     49e:	13 53       	subi	r17, 0x33	; 51
     4a0:	29 56       	subi	r18, 0x69	; 105
     4a2:	f2 1d       	adc	r31, r2
     4a4:	d9 93       	st	Y+, r29	; undefined
     4a6:	35 13       	cpse	r19, r21
     4a8:	c3 e9       	ldi	r28, 0x93	; 147
     4aa:	10 01       	movw	r2, r0
     4ac:	59 14       	cp	r5, r9
     4ae:	aa 0a       	sbc	r10, r26
     4b0:	33 86       	std	Z+11, r3	; 0x0b
     4b2:	6c 51       	subi	r22, 0x1C	; 28
     4b4:	a3 2d       	mov	r26, r3
     4b6:	94 d2       	rcall	.+1320   	; 0x9e0 <__stack+0xe1>
     4b8:	21 d7       	rcall	.+3650   	; 0x12fc <u8g2_font_crox1hb_tf+0x52f>
     4ba:	11 5d       	subi	r17, 0xD1	; 209
     4bc:	47 f4       	brid	.+16     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     4be:	21 05       	cpc	r18, r1
     4c0:	5a 10       	cpse	r5, r10
     4c2:	aa 09       	sbc	r26, r10
     4c4:	b5 86       	std	Z+13, r11	; 0x0d
     4c6:	41 0a       	sbc	r4, r17
     4c8:	75 7d       	andi	r23, 0xD5	; 213
     4ca:	7e 37       	cpi	r23, 0x7E	; 126
     4cc:	2a c3       	rjmp	.+1620   	; 0xb22 <__stack+0x223>
     4ce:	20 01       	movw	r4, r0
     4d0:	5b 0d       	add	r21, r11
     4d2:	d6 d8       	rcall	.-3668   	; 0xfffff680 <__eeprom_end+0xff7ef680>
     4d4:	ea 26       	eor	r14, r26
     4d6:	d1 31       	cpi	r29, 0x11	; 17
     4d8:	74 4c       	sbci	r23, 0xC4	; 196
     4da:	43 71       	andi	r20, 0x13	; 19
     4dc:	03 5c       	subi	r16, 0xC3	; 195
     4de:	0c d4       	rcall	.+2072   	; 0xcf8 <__stack+0x3f9>
     4e0:	da 2e       	mov	r13, r26
     4e2:	b2 30       	cpi	r27, 0x02	; 2
     4e4:	6b d3       	rcall	.+1750   	; 0xbbc <__stack+0x2bd>
     4e6:	3a 66       	ori	r19, 0x6A	; 106
     4e8:	01 5d       	subi	r16, 0xD1	; 209
     4ea:	0c d6       	rcall	.+3096   	; 0x1104 <u8g2_font_crox1hb_tf+0x337>
     4ec:	d8 ea       	ldi	r29, 0xA8	; 168
     4ee:	46 31       	cpi	r20, 0x16	; 22
     4f0:	f4 18       	sub	r15, r4
     4f2:	7a da       	rcall	.-2828   	; 0xfffff9e8 <__eeprom_end+0xff7ef9e8>
     4f4:	00 5e       	subi	r16, 0xE0	; 224
     4f6:	0e 88       	ldd	r0, Y+22	; 0x16
     4f8:	29 73       	andi	r18, 0x39	; 57
     4fa:	f3 58       	subi	r31, 0x83	; 131
     4fc:	8d 32       	cpi	r24, 0x2D	; 45
     4fe:	29 2b       	or	r18, r25
     500:	85 73       	andi	r24, 0x35	; 53
     502:	00 5f       	subi	r16, 0xF0	; 240
     504:	06 16       	cp	r0, r22
     506:	e8 2e       	mov	r14, r24
     508:	0e 60       	ori	r16, 0x0E	; 14
     50a:	07 23       	and	r16, r23
     50c:	8c 31       	cpi	r24, 0x1C	; 28
     50e:	b4 00       	.word	0x00b4	; ????
     510:	61 10       	cpse	r6, r1
     512:	78 09       	sbc	r23, r8
     514:	f3 06       	cpc	r15, r19
     516:	29 53       	subi	r18, 0x39	; 57
     518:	b4 44       	sbci	r27, 0x44	; 68
     51a:	53 a4       	ldd	r5, Z+43	; 0x2b
     51c:	45 49       	sbci	r20, 0x95	; 149
     51e:	94 69       	ori	r25, 0x94	; 148
     520:	62 13       	cpse	r22, r18
     522:	a8 09       	sbc	r26, r8
     524:	73 66       	ori	r23, 0x63	; 99
     526:	ab b4       	in	r10, 0x2b	; 43
     528:	0c 89       	ldd	r16, Y+20	; 0x14
     52a:	32 29       	or	r19, r2
     52c:	9a 92       	st	-Y, r9
     52e:	29 5a       	subi	r18, 0xA9	; 169
     530:	34 68       	ori	r19, 0x84	; 132
     532:	00 63       	ori	r16, 0x30	; 48
     534:	0e 77       	andi	r16, 0x7E	; 126
     536:	09 ef       	ldi	r16, 0xF9	; 249
     538:	86 28       	or	r8, r6
     53a:	4b b4       	in	r4, 0x2b	; 43
     53c:	d5 16       	cp	r13, r21
     53e:	0d 11       	cpse	r16, r13
     540:	00 64       	ori	r16, 0x40	; 64
     542:	14 a9       	ldd	r17, Z+52	; 0x34
     544:	09 b3       	in	r16, 0x19	; 25
     546:	77 59       	subi	r23, 0x97	; 151
     548:	1c b4       	in	r1, 0x2c	; 44
     54a:	4c d2       	rcall	.+1176   	; 0x9e4 <__stack+0xe5>
     54c:	14 6d       	ori	r17, 0xD4	; 212
     54e:	91 26       	eor	r9, r17
     550:	65 88       	ldd	r6, Z+21	; 0x15
     552:	86 64       	ori	r24, 0x46	; 70
     554:	01 65       	ori	r16, 0x51	; 81
     556:	0e 77       	andi	r16, 0x7E	; 126
     558:	09 f1       	breq	.+66     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
     55a:	26 4b       	sbci	r18, 0xB6	; 182
     55c:	a4 0c       	add	r10, r4
     55e:	92 aa       	std	Z+50, r9	; 0x32
     560:	29 83       	std	Y+1, r18	; 0x01
     562:	02 66       	ori	r16, 0x62	; 98
     564:	12 e8       	ldi	r17, 0x82	; 130
     566:	d9 2c       	mov	r13, r9
     568:	87 4c       	sbci	r24, 0xC7	; 199
     56a:	ca a4       	ldd	r12, Y+42	; 0x2a
     56c:	48 1d       	adc	r20, r8
     56e:	44 59       	subi	r20, 0x94	; 148
     570:	5d 65       	ori	r21, 0x5D	; 93
     572:	57 59       	subi	r21, 0x97	; 151
     574:	06 67       	ori	r16, 0x76	; 118
     576:	16 a9       	ldd	r17, Z+54	; 0x36
     578:	d8 32       	cpi	r29, 0x28	; 40
     57a:	07 49       	sbci	r16, 0x97	; 151
     57c:	93 32       	cpi	r25, 0x23	; 35
     57e:	49 53       	subi	r20, 0x39	; 57
     580:	a6 49       	sbci	r26, 0x96	; 150
     582:	49 a4       	ldd	r4, Y+41	; 0x29
     584:	65 09       	sbc	r22, r5
     586:	25 4d       	sbci	r18, 0xD5	; 213
     588:	1a 44       	sbci	r17, 0x4A	; 74
     58a:	00 68       	ori	r16, 0x80	; 128
     58c:	12 a8       	ldd	r1, Z+50	; 0x32
     58e:	09 73       	andi	r16, 0x39	; 57
     590:	66 ab       	std	Z+54, r22	; 0x36
     592:	b4 28       	or	r11, r4
     594:	89 32       	cpi	r24, 0x29	; 41
     596:	29 d2       	rcall	.+1106   	; 0x9ea <__stack+0xeb>
     598:	22 29       	or	r18, r2
     59a:	9a a2       	std	Y+34, r9	; 0x22
     59c:	0d 69       	ori	r16, 0x9D	; 157
     59e:	0b a4       	ldd	r0, Y+43	; 0x2b
     5a0:	09 a9       	ldd	r16, Y+49	; 0x31
     5a2:	8c 93       	st	X, r24
     5a4:	cb 22       	and	r12, r27
     5a6:	2d 00       	.word	0x002d	; ????
     5a8:	6a 10       	cpse	r6, r10
     5aa:	d8 d8       	rcall	.-3664   	; 0xfffff75c <__eeprom_end+0xff7ef75c>
     5ac:	aa ed       	ldi	r26, 0xDA	; 218
     5ae:	e8 6c       	ori	r30, 0xC8	; 200
     5b0:	5d 65       	ori	r21, 0x5D	; 93
     5b2:	53 a4       	ldd	r5, Z+43	; 0x2b
     5b4:	45 da       	rcall	.-2934   	; 0xfffffa40 <__eeprom_end+0xff7efa40>
     5b6:	10 02       	muls	r17, r16
     5b8:	6b 11       	cpse	r22, r11
     5ba:	a8 09       	sbc	r26, r8
     5bc:	73 66       	ori	r23, 0x63	; 99
     5be:	eb a4       	ldd	r14, Y+43	; 0x2b
     5c0:	48 16       	cp	r4, r24
     5c2:	6d 08       	sbc	r6, r13
     5c4:	15 49       	sbci	r17, 0x95	; 149
     5c6:	5a b4       	in	r5, 0x2a	; 42
     5c8:	01 6c       	ori	r16, 0xC1	; 193
     5ca:	0c a4       	ldd	r0, Y+44	; 0x2c
     5cc:	09 69       	ori	r16, 0x99	; 153
     5ce:	26 65       	ori	r18, 0x56	; 86
     5d0:	91 5c       	subi	r25, 0xC1	; 193
     5d2:	16 69       	ori	r17, 0x96	; 150
     5d4:	01 6d       	ori	r16, 0xD1	; 209
     5d6:	15 7c       	andi	r17, 0xC5	; 197
     5d8:	09 3d       	cpi	r16, 0xD9	; 217
     5da:	26 69       	ori	r18, 0x96	; 150
     5dc:	51 86       	std	Z+9, r5	; 0x09
     5de:	41 39       	cpi	r20, 0x91	; 145
     5e0:	24 a6       	std	Z+44, r2	; 0x2c
     5e2:	49 c9       	rjmp	.-3438   	; 0xfffff876 <__eeprom_end+0xff7ef876>
     5e4:	24 45       	sbci	r18, 0x54	; 84
     5e6:	93 14       	cp	r9, r3
     5e8:	e9 00       	.word	0x00e9	; ????
     5ea:	6e 11       	cpse	r22, r14
     5ec:	78 09       	sbc	r23, r8
     5ee:	33 86       	std	Z+11, r3	; 0x0b
     5f0:	64 51       	subi	r22, 0x14	; 20
     5f2:	12 65       	ori	r17, 0x52	; 82
     5f4:	52 a4       	ldd	r5, Z+42	; 0x2a
     5f6:	45 52       	subi	r20, 0x25	; 37
     5f8:	34 45       	sbci	r19, 0x54	; 84
     5fa:	1b 6f       	ori	r17, 0xFB	; 251
     5fc:	10 78       	andi	r17, 0x80	; 128
     5fe:	09 f1       	breq	.+66     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
     600:	86 2c       	mov	r8, r6
     602:	53 b4       	in	r5, 0x23	; 35
     604:	21 1c       	adc	r2, r1
     606:	32 45       	sbci	r19, 0x52	; 82
     608:	d2 86       	std	Z+10, r13	; 0x0a
     60a:	0c 70       	andi	r16, 0x0C	; 12
     60c:	14 a9       	ldd	r17, Z+52	; 0x34
     60e:	d9 72       	andi	r29, 0x29	; 41
     610:	0e d1       	rcall	.+540    	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     612:	90 48       	sbci	r25, 0x80	; 128
     614:	93 b2       	in	r9, 0x13	; 19
     616:	29 9a       	sbi	0x05, 1	; 5
     618:	a4 65       	ori	r26, 0x54	; 84
     61a:	83 28       	or	r8, r3
     61c:	eb 3a       	cpi	r30, 0xAB	; 171
     61e:	00 71       	andi	r16, 0x10	; 16
     620:	13 a8       	ldd	r1, Z+51	; 0x33
     622:	d9 f2       	breq	.-74     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
     624:	06 29       	or	r16, r6
     626:	53 b4       	in	r5, 0x23	; 35
     628:	21 53       	subi	r18, 0x31	; 49
     62a:	a4 45       	sbci	r26, 0x54	; 84
     62c:	19 92       	st	Y+, r1
     62e:	49 5d       	subi	r20, 0xD9	; 217
     630:	65 09       	sbc	r22, r5
     632:	72 0c       	add	r7, r2
     634:	77 09       	sbc	r23, r7
     636:	2f 26       	eor	r2, r31
     638:	c5 34       	cpi	r28, 0x45	; 69
     63a:	aa a2       	std	Y+34, r10	; 0x22
     63c:	aa 02       	muls	r26, r26
     63e:	73 0f       	add	r23, r19
     640:	77 09       	sbc	r23, r7
     642:	af 06       	cpc	r10, r31
     644:	45 8a       	std	Z+21, r4	; 0x15
     646:	d6 29       	or	r29, r6
     648:	5a 32       	cpi	r21, 0x2A	; 42
     64a:	65 90       	lpm	r6, Z+
     64c:	00 74       	andi	r16, 0x40	; 64
     64e:	0d 95 09 6b 	jmp	0x42d612	; 0x42d612 <__TEXT_REGION_LENGTH__+0x425612>
     652:	26 69       	ori	r18, 0x96	; 150
     654:	50 34       	cpi	r21, 0x40	; 64
     656:	93 26       	eor	r9, r19
     658:	2e 00       	.word	0x002e	; ????
     65a:	75 11       	cpse	r23, r5
     65c:	78 09       	sbc	r23, r8
     65e:	33 a6       	std	Z+43, r3	; 0x2b
     660:	45 53       	subi	r20, 0x35	; 53
     662:	24 65       	ori	r18, 0x54	; 84
     664:	52 a4       	ldd	r5, Z+42	; 0x2a
     666:	45 49       	sbci	r20, 0x95	; 149
     668:	94 43       	sbci	r25, 0x34	; 52
     66a:	00 76       	andi	r16, 0x60	; 96
     66c:	0e 78       	andi	r16, 0x8E	; 142
     66e:	09 31       	cpi	r16, 0x19	; 25
     670:	36 45       	sbci	r19, 0x56	; 86
     672:	53 b4       	in	r5, 0x23	; 35
     674:	4c 09       	sbc	r20, r12
     676:	57 39       	cpi	r21, 0x97	; 151
     678:	05 77       	andi	r16, 0x75	; 117
     67a:	13 7b       	andi	r17, 0xB3	; 179
     67c:	09 39       	cpi	r16, 0x99	; 153
     67e:	a6 4c       	sbci	r26, 0xC6	; 198
     680:	91 2c       	mov	r9, r1
     682:	92 94       	swap	r9
     684:	25 4b       	sbci	r18, 0xB5	; 181
     686:	28 8d       	ldd	r18, Y+24	; 0x18
     688:	92 9a       	sbi	0x12, 2	; 18
     68a:	85 00       	.word	0x0085	; ????
     68c:	78 0d       	add	r23, r8
     68e:	77 09       	sbc	r23, r7
     690:	6f 24       	eor	r6, r15
     692:	8b 34       	cpi	r24, 0x4B	; 75
     694:	84 e2       	ldi	r24, 0x24	; 36
     696:	64 91       	lpm	r22, Z
     698:	06 79       	andi	r16, 0x96	; 150
     69a:	13 aa       	std	Z+51, r1	; 0x33
     69c:	d8 70       	andi	r29, 0x08	; 8
     69e:	86 e8       	ldi	r24, 0x86	; 134
     6a0:	66 0b       	sbc	r22, r22
     6a2:	a5 54       	subi	r26, 0x45	; 69
     6a4:	c9 75       	andi	r28, 0x59	; 89
     6a6:	44 47       	sbci	r20, 0x74	; 116
     6a8:	72 24       	eor	r7, r2
     6aa:	de 01       	movw	r26, r28
     6ac:	7a 0d       	add	r23, r10
     6ae:	78 09       	sbc	r23, r8
     6b0:	b1 86       	std	Z+9, r11	; 0x09
     6b2:	25 53       	subi	r18, 0x35	; 53
     6b4:	bd 25       	eor	r27, r13
     6b6:	c3 90       	.word	0x90c3	; ????
     6b8:	00 7b       	andi	r16, 0xB0	; 176
     6ba:	0e d5       	rcall	.+2588   	; 0x10d8 <u8g2_font_crox1hb_tf+0x30b>
     6bc:	d9 aa       	std	Y+49, r13	; 0x31
     6be:	26 cd       	rjmp	.-1460   	; 0x10c <__trampolines_end+0x58>
     6c0:	c9 18       	sub	r12, r9
     6c2:	6a 92       	st	-Y, r6
     6c4:	26 4a       	sbci	r18, 0xA6	; 166
     6c6:	00 7c       	andi	r16, 0xC0	; 192
     6c8:	0d d4       	rcall	.+2074   	; 0xee4 <u8g2_font_crox1hb_tf+0x117>
     6ca:	d9 e8       	ldi	r29, 0x89	; 137
     6cc:	4a 59       	subi	r20, 0x9A	; 154
     6ce:	93 94       	inc	r9
     6d0:	35 65       	ori	r19, 0x55	; 85
     6d2:	19 00       	.word	0x0019	; ????
     6d4:	7d 0e       	add	r7, r29
     6d6:	d5 d8       	rcall	.-3670   	; 0xfffff882 <__eeprom_end+0xff7ef882>
     6d8:	aa 44       	sbci	r26, 0x4A	; 74
     6da:	4d d2       	rcall	.+1178   	; 0xb76 <__stack+0x277>
     6dc:	c4 50       	subi	r28, 0x04	; 4
     6de:	b2 39       	cpi	r27, 0x92	; 146
     6e0:	4d 00       	.word	0x004d	; ????
     6e2:	7e 09       	sbc	r23, r14
     6e4:	38 29       	or	r19, r8
     6e6:	73 36       	cpi	r23, 0x63	; 99
     6e8:	c9 b6       	in	r12, 0x39	; 57
     6ea:	00 a0       	ldd	r0, Z+32	; 0x20
     6ec:	05 00       	.word	0x0005	; ????
     6ee:	18 29       	or	r17, r8
     6f0:	a1 0b       	sbc	r26, r17
     6f2:	a4 d8       	rcall	.-3768   	; 0xfffff83c <__eeprom_end+0xff7ef83c>
     6f4:	a8 cc       	rjmp	.-1712   	; 0x46 <__SREG__+0x7>
     6f6:	59 94       	.word	0x9459	; ????
     6f8:	35 49       	sbci	r19, 0x95	; 149
     6fa:	00 a2       	std	Z+32, r0	; 0x20
     6fc:	13 a7       	std	Z+43, r17	; 0x2b
     6fe:	0a 73       	andi	r16, 0x3A	; 58
     700:	c3 21       	and	r28, r3
     702:	5a 12       	cpse	r5, r26
     704:	25 99       	sbic	0x04, 5	; 4
     706:	22 29       	or	r18, r2
     708:	52 32       	cpi	r21, 0x22	; 34
     70a:	25 1c       	adc	r2, r5
     70c:	b4 10       	cpse	r11, r4
     70e:	a3 11       	cpse	r26, r3
     710:	a8 0a       	sbc	r10, r24
     712:	33 87       	std	Z+11, r19	; 0x0b
     714:	4c ca       	rjmp	.-2920   	; 0xfffffbae <__eeprom_end+0xff7efbae>
     716:	54 75       	andi	r21, 0x54	; 84
     718:	10 65       	ori	r17, 0x50	; 80
     71a:	55 1d       	adc	r21, r5
     71c:	a6 61       	ori	r26, 0x16	; 22
     71e:	02 a4       	ldd	r0, Z+42	; 0x2a
     720:	13 aa       	std	Z+51, r1	; 0x33
     722:	09 73       	andi	r16, 0x39	; 57
     724:	e4 28       	or	r14, r4
     726:	0d 07       	cpc	r16, r29
     728:	35 0b       	sbc	r19, r21
     72a:	3b 4a       	sbci	r19, 0xAB	; 171
     72c:	e2 20       	and	r14, r2
     72e:	a6 51       	subi	r26, 0x16	; 22
     730:	9e 00       	.word	0x009e	; ????
     732:	a5 13       	cpse	r26, r21
     734:	aa 0a       	sbc	r10, r26
     736:	33 86       	std	Z+11, r3	; 0x0b
     738:	6c 11       	cpse	r22, r12
     73a:	35 29       	or	r19, r5
     73c:	5e 87       	std	Y+14, r21	; 0x0e
     73e:	59 1e       	adc	r5, r25
     740:	56 1d       	adc	r21, r6
     742:	d1 87       	std	Z+9, r29	; 0x09
     744:	14 a6       	std	Z+44, r1	; 0x2c
     746:	0c d4       	rcall	.+2072   	; 0xf60 <u8g2_font_crox1hb_tf+0x193>
     748:	d9 e8       	ldi	r29, 0x89	; 137
     74a:	4a 59       	subi	r20, 0x9A	; 154
     74c:	73 d6       	rcall	.+3302   	; 0x1434 <u8g2_font_crox1hb_tf+0x667>
     74e:	94 65       	ori	r25, 0x54	; 84
     750:	00 a7       	std	Z+40, r16	; 0x28
     752:	18 d8       	rcall	.-4048   	; 0xfffff784 <__eeprom_end+0xff7ef784>
     754:	d9 f2       	breq	.-74     	; 0x70c <__EEPROM_REGION_LENGTH__+0x30c>
     756:	06 49       	sbci	r16, 0x96	; 150
     758:	8b b4       	in	r8, 0x2b	; 43
     75a:	48 1e       	adc	r4, r24
     75c:	32 65       	ori	r19, 0x52	; 82
     75e:	d2 a2       	std	Z+34, r13	; 0x22
     760:	29 1b       	sub	r18, r25
     762:	e2 25       	eor	r30, r2
     764:	54 32       	cpi	r21, 0x24	; 36
     766:	69 d0       	rcall	.+210    	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     768:	00 a8       	ldd	r0, Z+48	; 0x30
     76a:	07 15       	cp	r16, r7
     76c:	9c 31       	cpi	r25, 0x1C	; 28
     76e:	14 01       	movw	r2, r8
     770:	a9 1a       	sub	r10, r25
     772:	ac 09       	sbc	r26, r12
     774:	f9 06       	cpc	r15, r25
     776:	39 d5       	rcall	.+2674   	; 0x11ea <u8g2_font_crox1hb_tf+0x41d>
     778:	a2 41       	sbci	r26, 0x12	; 18
     77a:	29 69       	ori	r18, 0x99	; 153
     77c:	49 29       	or	r20, r9
     77e:	4e a2       	std	Y+38, r4	; 0x26
     780:	78 8a       	std	Y+16, r7	; 0x10
     782:	a3 68       	ori	r26, 0x83	; 131
     784:	88 b2       	in	r8, 0x18	; 24
     786:	54 1d       	adc	r21, r4
     788:	44 00       	.word	0x0044	; ????
     78a:	aa 0e       	add	r10, r26
     78c:	66 4a       	sbci	r22, 0xA6	; 166
     78e:	af 86       	std	Y+15, r10	; 0x0f
     790:	44 19       	sub	r20, r4
     792:	a2 21       	and	r26, r2
     794:	51 96       	adiw	r26, 0x11	; 17
     796:	44 19       	sub	r20, r4
     798:	ab 0f       	add	r26, r27
     79a:	77 09       	sbc	r23, r7
     79c:	ef a2       	std	Y+39, r14	; 0x27
     79e:	48 89       	ldd	r20, Y+16	; 0x10
     7a0:	14 b7       	in	r17, 0x34	; 52
     7a2:	28 53       	subi	r18, 0x38	; 56
     7a4:	b4 28       	or	r11, r4
     7a6:	01 ac       	ldd	r0, Z+57	; 0x39
     7a8:	09 48       	sbci	r16, 0x89	; 137
     7aa:	29 33       	cpi	r18, 0x39	; 57
     7ac:	0e 7a       	andi	r16, 0xAE	; 174
     7ae:	39 01       	movw	r6, r18
     7b0:	ad 06       	cpc	r10, r29
     7b2:	13 49       	sbci	r17, 0x93	; 147
     7b4:	29 06       	cpc	r2, r25
     7b6:	ae 0f       	add	r26, r30
     7b8:	77 3a       	cpi	r23, 0xA7	; 167
     7ba:	b3 b6       	in	r11, 0x33	; 51
     7bc:	4a b2       	in	r4, 0x1a	; 26
     7be:	28 15       	cp	r18, r8
     7c0:	65 a9       	ldd	r22, Z+53	; 0x35
     7c2:	65 13       	cpse	r22, r21
     7c4:	00 af       	std	Z+56, r16	; 0x38
     7c6:	07 14       	cp	r0, r7
     7c8:	9c 31       	cpi	r25, 0x1C	; 28
     7ca:	86 00       	.word	0x0086	; ????
     7cc:	b0 07       	cpc	r27, r16
     7ce:	22 8b       	std	Z+18, r18	; 0x12
     7d0:	29 86       	std	Y+9, r2	; 0x09
     7d2:	00 b1       	in	r16, 0x00	; 0
     7d4:	11 89       	ldd	r17, Z+17	; 0x11
     7d6:	08 73       	andi	r16, 0x38	; 56
     7d8:	73 24       	eor	r7, r3
     7da:	47 c2       	rjmp	.+1166   	; 0xc6a <__stack+0x36b>
     7dc:	61 10       	cpse	r6, r1
     7de:	73 24       	eor	r7, r3
     7e0:	87 87       	std	Z+15, r24	; 0x0f
     7e2:	41 01       	movw	r8, r2
     7e4:	b2 0d       	add	r27, r2
     7e6:	65 40       	sbci	r22, 0x05	; 5
     7e8:	6b 86       	std	Y+11, r6	; 0x0b
     7ea:	24 ca       	rjmp	.-3000   	; 0xfffffc34 <__eeprom_end+0xff7efc34>
     7ec:	24 29       	or	r18, r4
     7ee:	1b 12       	cpse	r1, r27
     7f0:	00 b3       	in	r16, 0x10	; 16
     7f2:	0c 65       	ori	r16, 0x5C	; 92
     7f4:	40 6b       	ori	r20, 0xB0	; 176
     7f6:	a6 44       	sbci	r26, 0x46	; 70
     7f8:	19 93       	st	Y+, r17
     7fa:	28 99       	sbic	0x05, 0	; 5
     7fc:	00 b4       	in	r0, 0x20	; 32
     7fe:	07 24       	eor	r0, r7
     800:	8d 71       	andi	r24, 0x1D	; 29
     802:	06 09       	sbc	r16, r6
     804:	b5 12       	cpse	r11, r21
     806:	a9 d9       	rcall	.-3246   	; 0xfffffb5a <__eeprom_end+0xff7efb5a>
     808:	74 a6       	std	Z+44, r7	; 0x2c
     80a:	49 93       	st	Y+, r20
     80c:	dc 24       	eor	r13, r12
     80e:	69 52       	subi	r22, 0x29	; 41
     810:	12 69       	ori	r17, 0x92	; 146
     812:	19 92       	st	Y+, r1
     814:	dc 0e       	add	r13, r28
     816:	b6 15       	cp	r27, r6
     818:	d6 da       	rcall	.-2644   	; 0xfffffdc6 <__eeprom_end+0xff7efdc6>
     81a:	72 86       	std	Z+10, r7	; 0x0a
     81c:	cb 10       	cpse	r12, r11
     81e:	0d 49       	sbci	r16, 0x9D	; 157
     820:	a4 64       	ori	r26, 0x44	; 68
     822:	49 96       	adiw	r24, 0x19	; 25
     824:	64 49       	sbci	r22, 0x94	; 148
     826:	d4 2f       	mov	r29, r20
     828:	59 12       	cpse	r5, r25
     82a:	01 b7       	in	r16, 0x31	; 49
     82c:	07 22       	and	r0, r23
     82e:	3c 33       	cpi	r19, 0x3C	; 60
     830:	86 00       	.word	0x0086	; ????
     832:	b8 07       	cpc	r27, r24
     834:	33 da       	rcall	.-2970   	; 0xfffffc9c <__eeprom_end+0xff7efc9c>
     836:	70 a4       	ldd	r7, Z+40	; 0x28
     838:	21 b9       	out	0x01, r18	; 1
     83a:	09 63       	ori	r16, 0x39	; 57
     83c:	40 6b       	ori	r20, 0xB0	; 176
     83e:	a4 4a       	sbci	r26, 0xA4	; 164
     840:	94 0c       	add	r9, r4
     842:	ba 0e       	add	r11, r26
     844:	66 4a       	sbci	r22, 0xA6	; 166
     846:	af 86       	std	Y+15, r10	; 0x0f
     848:	44 19       	sub	r20, r4
     84a:	a2 21       	and	r26, r2
     84c:	1a a2       	std	Y+34, r1	; 0x22
     84e:	68 02       	muls	r22, r24
     850:	bb 0f       	add	r27, r27
     852:	77 09       	sbc	r23, r7
     854:	6f a2       	std	Y+39, r6	; 0x27
     856:	4c d1       	rcall	.+664    	; 0xaf0 <__stack+0x1f1>
     858:	a2 4c       	sbci	r26, 0xC2	; 194
     85a:	71 4a       	sbci	r23, 0xA1	; 161
     85c:	a4 1a       	sub	r10, r20
     85e:	00 bc       	out	0x20, r0	; 32
     860:	17 ab       	std	Z+55, r17	; 0x37
     862:	0a 77       	andi	r16, 0x7A	; 122
     864:	64 29       	or	r22, r4
     866:	d5 42       	sbci	r29, 0x25	; 37
     868:	2d 14       	cp	r2, r13
     86a:	33 45       	sbci	r19, 0x53	; 83
     86c:	59 94       	.word	0x9459	; ????
     86e:	51 29       	or	r21, r1
     870:	2a 83       	std	Y+2, r18	; 0x02
     872:	a4 46       	sbci	r26, 0x64	; 100
     874:	ea 02       	muls	r30, r26
     876:	bd 15       	cp	r27, r13
     878:	ab 0a       	sbc	r10, r27
     87a:	77 64       	ori	r23, 0x47	; 71
     87c:	29 d5       	rcall	.+2642   	; 0x12d0 <u8g2_font_crox1hb_tf+0x503>
     87e:	42 2d       	mov	r20, r2
     880:	14 b3       	in	r17, 0x14	; 20
     882:	41 39       	cpi	r20, 0x91	; 145
     884:	85 9a       	sbi	0x10, 5	; 16
     886:	b7 50       	subi	r27, 0x07	; 7
     888:	1b 22       	and	r1, r27
     88a:	00 be       	out	0x30, r0	; 48
     88c:	19 ac       	ldd	r1, Y+57	; 0x39
     88e:	0b 77       	andi	r16, 0x7B	; 123
     890:	66 25       	eor	r22, r6
     892:	11 a5       	ldd	r17, Z+41	; 0x29
     894:	51 cd       	rjmp	.-1374   	; 0x338 <__trampolines_end+0x284>
     896:	b4 28       	or	r11, r4
     898:	52 94       	swap	r5
     89a:	49 59       	subi	r20, 0x99	; 153
     89c:	95 aa       	std	Z+53, r9	; 0x35
     89e:	32 68       	ori	r19, 0x82	; 130
     8a0:	6a a6       	std	Y+42, r6	; 0x2a
     8a2:	2e 00       	.word	0x002e	; ????
     8a4:	bf 0d       	add	r27, r15
     8a6:	a6 d8       	rcall	.-3764   	; 0xfffff9f4 <__eeprom_end+0xff7ef9f4>
     8a8:	2e ed       	ldi	r18, 0xDE	; 222
     8aa:	90 d8       	rcall	.-3808   	; 0xfffff9cc <__eeprom_end+0xff7ef9cc>
     8ac:	a8 6d       	ori	r26, 0xD8	; 216
     8ae:	c9 90       	ld	r12, Y+
     8b0:	00 c0       	rjmp	.+0      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     8b2:	19 db       	rcall	.-2510   	; 0xfffffee6 <__eeprom_end+0xff7efee6>
     8b4:	08 b7       	in	r16, 0x38	; 56
     8b6:	75 30       	cpi	r23, 0x05	; 5
     8b8:	27 e7       	ldi	r18, 0x77	; 119
     8ba:	90 8e       	std	Z+24, r9	; 0x18
     8bc:	24 7a       	andi	r18, 0xA4	; 164
     8be:	22 47       	sbci	r18, 0x72	; 114
     8c0:	6a a6       	std	Y+42, r6	; 0x2a
     8c2:	0e 43       	sbci	r16, 0x3E	; 62
     8c4:	96 4a       	sbci	r25, 0xA6	; 166
     8c6:	b1 32       	cpi	r27, 0x21	; 33
     8c8:	0e 01       	movw	r0, r28
     8ca:	c1 18       	sub	r12, r1
     8cc:	db 08       	sbc	r13, r11
     8ce:	f7 77       	andi	r31, 0x77	; 119
     8d0:	9d 9e       	mul	r9, r29
     8d2:	43 3a       	cpi	r20, 0xA3	; 163
     8d4:	92 e8       	ldi	r25, 0x82	; 130
     8d6:	89 1c       	adc	r8, r9
     8d8:	a9 99       	sbic	0x15, 1	; 21
     8da:	3a 0c       	add	r3, r10
     8dc:	59 2a       	or	r5, r25
     8de:	c5 ca       	rjmp	.-2678   	; 0xfffffe6a <__eeprom_end+0xff7efe6a>
     8e0:	38 04       	cpc	r3, r8
     8e2:	c2 18       	sub	r12, r2
     8e4:	db 08       	sbc	r13, r11
     8e6:	f7 4d       	sbci	r31, 0xD7	; 215
     8e8:	39 35       	cpi	r19, 0x59	; 89
     8ea:	87 74       	andi	r24, 0x47	; 71
     8ec:	24 d1       	rcall	.+584    	; 0xb36 <__stack+0x237>
     8ee:	13 39       	cpi	r17, 0x93	; 147
     8f0:	52 33       	cpi	r21, 0x32	; 50
     8f2:	75 18       	sub	r7, r5
     8f4:	b2 54       	subi	r27, 0x42	; 66
     8f6:	8a 95       	dec	r24
     8f8:	71 08       	sbc	r7, r1
     8fa:	c3 1a       	sub	r12, r19
     8fc:	db 08       	sbc	r13, r11
     8fe:	b7 95       	ror	r27
     900:	38 d1       	rcall	.+624    	; 0xb72 <__stack+0x273>
     902:	c9 39       	cpi	r28, 0x99	; 153
     904:	a4 23       	and	r26, r20
     906:	89 9e       	mul	r8, r25
     908:	c8 91       	.word	0x91c8	; ????
     90a:	9a a9       	ldd	r25, Y+50	; 0x32
     90c:	c3 90       	.word	0x90c3	; ????
     90e:	a5 52       	subi	r26, 0x25	; 37
     910:	ac 8c       	ldd	r10, Y+28	; 0x1c
     912:	43 00       	.word	0x0043	; ????
     914:	c4 18       	sub	r12, r4
     916:	cb 08       	sbc	r12, r11
     918:	77 15       	cp	r23, r7
     91a:	9d 9a       	sbi	0x13, 5	; 19
     91c:	43 3a       	cpi	r20, 0xA3	; 163
     91e:	92 e8       	ldi	r25, 0x82	; 130
     920:	89 1c       	adc	r8, r9
     922:	a9 99       	sbic	0x15, 1	; 21
     924:	3a 0c       	add	r3, r10
     926:	59 2a       	or	r5, r25
     928:	c5 ca       	rjmp	.-2678   	; 0xfffffeb4 <__eeprom_end+0xff7efeb4>
     92a:	38 04       	cpc	r3, r8
     92c:	c5 19       	sub	r28, r5
     92e:	db 08       	sbc	r13, r11
     930:	f7 75       	andi	r31, 0x57	; 87
     932:	48 27       	eor	r20, r24
     934:	e7 90       	elpm	r14, Z+
     936:	8e 24       	eor	r8, r14
     938:	7a 22       	and	r7, r26
     93a:	47 6a       	ori	r20, 0xA7	; 167
     93c:	a6 0e       	add	r10, r22
     93e:	43 96       	adiw	r24, 0x13	; 19
     940:	4a b1       	in	r20, 0x0a	; 10
     942:	32 0e       	add	r3, r18
     944:	01 c6       	rjmp	.+3074   	; 0x1548 <u8g2_font_crox1hb_tf+0x77b>
     946:	1c af       	std	Y+60, r17	; 0x3c
     948:	08 fb       	.word	0xfb08	; ????
     94a:	91 61       	ori	r25, 0x11	; 17
     94c:	c8 c7       	rjmp	.+3984   	; 0x18de <u8g2_UpdateDisplayArea>
     94e:	38 d1       	rcall	.+624    	; 0xbc0 <__stack+0x2c1>
     950:	b1 48       	sbci	r27, 0x81	; 129
     952:	ca a3       	std	Y+34, r28	; 0x22
     954:	41 8e       	std	Z+25, r4	; 0x19
     956:	74 68       	ori	r23, 0x84	; 132
     958:	d8 91       	.word	0x91d8	; ????
     95a:	50 4f       	sbci	r21, 0xF0	; 240
     95c:	35 65       	ori	r19, 0x55	; 85
     95e:	1a 06       	cpc	r1, r26
     960:	09 c7       	rjmp	.+3602   	; 0x1774 <u8g2_DrawHXBM+0xcc>
     962:	16 da       	rcall	.-3028   	; 0xfffffd90 <__eeprom_end+0xff7efd90>
     964:	d9 34       	cpi	r29, 0x49	; 73
     966:	87 69       	ori	r24, 0x97	; 151
     968:	53 54       	subi	r21, 0x43	; 67
     96a:	45 df       	rcall	.-374    	; 0x7f6 <__EEPROM_REGION_LENGTH__+0x3f6>
     96c:	75 44       	sbci	r23, 0x45	; 69
     96e:	47 76       	andi	r20, 0x67	; 103
     970:	44 0c       	add	r4, r4
     972:	07 39       	cpi	r16, 0x97	; 151
     974:	c7 f2       	brie	.-80     	; 0x926 <__stack+0x27>
     976:	15 c8       	rjmp	.-4054   	; 0xfffff9a2 <__eeprom_end+0xff7ef9a2>
     978:	17 d9       	rcall	.-3538   	; 0xfffffba8 <__eeprom_end+0xff7efba8>
     97a:	09 33       	cpi	r16, 0x39	; 57
     97c:	75 28       	or	r7, r5
     97e:	87 87       	std	Z+15, r24	; 0x0f
     980:	21 d3       	rcall	.+1602   	; 0xfc4 <u8g2_font_crox1hb_tf+0x1f7>
     982:	32 59       	subi	r19, 0x92	; 146
     984:	0a 07       	cpc	r16, r26
     986:	51 0a       	sbc	r5, r17
     988:	65 5d       	subi	r22, 0xD5	; 213
     98a:	4c 86       	std	Y+12, r4	; 0x0c
     98c:	21 02       	muls	r18, r17
     98e:	c9 16       	cp	r12, r25
     990:	d9 09       	sbc	r29, r9
     992:	b3 57       	subi	r27, 0x73	; 115
     994:	1d 1e       	adc	r1, r29
     996:	86 4c       	sbci	r24, 0xC6	; 198
     998:	cb 64       	ori	r28, 0x4B	; 75
     99a:	29 1c       	adc	r2, r9
     99c:	44 29       	or	r20, r4
     99e:	94 75       	andi	r25, 0x54	; 84
     9a0:	31 19       	sub	r19, r1
     9a2:	86 08       	sbc	r8, r6
     9a4:	ca 17       	cp	r28, r26
     9a6:	d9 09       	sbc	r29, r9
     9a8:	73 4d       	sbci	r23, 0xD3	; 211
     9aa:	39 3a       	cpi	r19, 0xA9	; 169
     9ac:	0c 99       	sbic	0x01, 4	; 1
     9ae:	96 c9       	rjmp	.-3284   	; 0xfffffcdc <__eeprom_end+0xff7efcdc>
     9b0:	52 38       	cpi	r21, 0x82	; 130
     9b2:	88 52       	subi	r24, 0x28	; 40
     9b4:	28 eb       	ldi	r18, 0xB8	; 184
     9b6:	62 32       	cpi	r22, 0x22	; 34
     9b8:	0c 11       	cpse	r16, r12
     9ba:	00 cb       	rjmp	.-2560   	; 0xffffffbc <__eeprom_end+0xff7effbc>
     9bc:	16 c9       	rjmp	.-3540   	; 0xfffffbea <__eeprom_end+0xff7efbea>
     9be:	09 33       	cpi	r16, 0x39	; 57
     9c0:	15 1d       	adc	r17, r5
     9c2:	1c 86       	std	Y+12, r1	; 0x0c
     9c4:	4c cb       	rjmp	.-2408   	; 0x5e <__SREG__+0x1f>
     9c6:	64 29       	or	r22, r4
     9c8:	1c 44       	sbci	r17, 0x4C	; 76
     9ca:	29 94       	.word	0x9429	; ????
     9cc:	75 31       	cpi	r23, 0x15	; 21
     9ce:	19 86       	std	Y+9, r1	; 0x09
     9d0:	08 cc       	rjmp	.-2032   	; 0x1e2 <__trampolines_end+0x12e>
     9d2:	10 d6       	rcall	.+3104   	; 0x15f4 <u8g2_font_crox1hb_tf+0x827>
     9d4:	09 ab       	std	Y+49, r16	; 0x31
     9d6:	e4 1c       	adc	r14, r4
     9d8:	1a 32       	cpi	r17, 0x2A	; 42
     9da:	6d 13       	cpse	r22, r29
     9dc:	dd 44       	sbci	r29, 0x4D	; 77
     9de:	6d 88       	ldd	r6, Y+21	; 0x15
     9e0:	00 cd       	rjmp	.-1536   	; 0x3e2 <__trampolines_end+0x32e>
     9e2:	10 d7       	rcall	.+3616   	; 0x1804 <u8g2_DrawXBM+0x7e>
     9e4:	09 2b       	or	r16, r25
     9e6:	37 1d       	adc	r19, r7
     9e8:	1c 42       	sbci	r17, 0x2C	; 44
     9ea:	71 54       	subi	r23, 0x41	; 65
     9ec:	1d 55       	subi	r17, 0x5D	; 93
     9ee:	71 c8       	rjmp	.-3870   	; 0xfffffad2 <__eeprom_end+0xff7efad2>
     9f0:	00 ce       	rjmp	.-1024   	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
     9f2:	11 d7       	rcall	.+3618   	; 0x1816 <u8g2_DrawXBM+0x90>
     9f4:	09 2b       	or	r16, r25
     9f6:	35 29       	or	r19, r5
     9f8:	87 86       	std	Z+15, r8	; 0x0f
     9fa:	50 1c       	adc	r5, r0
     9fc:	55 47       	sbci	r21, 0x75	; 117
     9fe:	55 1c       	adc	r5, r5
     a00:	32 00       	.word	0x0032	; ????
     a02:	cf 10       	cpse	r12, r15
     a04:	c7 09       	sbc	r28, r7
     a06:	ab 14       	cp	r10, r11
     a08:	1d 1a       	sub	r1, r29
     a0a:	42 71       	andi	r20, 0x12	; 18
     a0c:	54 1d       	adc	r21, r4
     a0e:	55 71       	andi	r21, 0x15	; 21
     a10:	c8 00       	.word	0x00c8	; ????
     a12:	d0 17       	cp	r29, r16
     a14:	ab 09       	sbc	r26, r11
     a16:	b7 86       	std	Z+15, r11	; 0x0f
     a18:	21 d5       	rcall	.+2626   	; 0x145c <u8g2_font_crox1hb_tf+0x68f>
     a1a:	b4 51       	subi	r27, 0x14	; 20
     a1c:	52 95       	swap	r21
     a1e:	41 93       	st	Z+, r20
     a20:	54 49       	sbci	r21, 0x94	; 148
     a22:	94 46       	sbci	r25, 0x64	; 100
     a24:	49 9b       	sbis	0x09, 1	; 9
     a26:	86 21       	and	r24, r6
     a28:	04 d1       	rcall	.+520    	; 0xc32 <__stack+0x333>
     a2a:	1c dc       	rcall	.-1992   	; 0x264 <__trampolines_end+0x1b0>
     a2c:	09 b7       	in	r16, 0x39	; 57
     a2e:	95 3c       	cpi	r25, 0xC5	; 197
     a30:	d1 69       	ori	r29, 0x91	; 145
     a32:	e3 a6       	std	Z+43, r14	; 0x2b
     a34:	86 9b       	sbis	0x10, 6	; 16
     a36:	96 68       	ori	r25, 0x86	; 134
     a38:	61 24       	eor	r6, r1
     a3a:	85 91       	lpm	r24, Z+
     a3c:	14 66       	ori	r17, 0x64	; 100
     a3e:	4a 98       	cbi	0x09, 2	; 9
     a40:	8d a9       	ldd	r24, Y+53	; 0x35
     a42:	b6 66       	ori	r27, 0x66	; 102
     a44:	00 d2       	rcall	.+1024   	; 0xe46 <u8g2_font_crox1hb_tf+0x79>
     a46:	17 db       	rcall	.-2514   	; 0x76 <__SREG__+0x37>
     a48:	0a 79       	andi	r16, 0x9A	; 154
     a4a:	75 30       	cpi	r23, 0x05	; 5
     a4c:	27 0e       	add	r2, r23
     a4e:	e2 26       	eor	r14, r18
     a50:	8d 92       	st	X+, r8
     a52:	3a ac       	ldd	r3, Y+58	; 0x3a
     a54:	83 ac       	ldd	r8, Z+59	; 0x3b
     a56:	c8 8a       	std	Y+16, r12	; 0x10
     a58:	aa 59       	subi	r26, 0x9A	; 154
     a5a:	87 14       	cp	r8, r7
     a5c:	d3 17       	cp	r29, r19
     a5e:	db 0a       	sbc	r13, r27
     a60:	b9 77       	andi	r27, 0x79	; 121
     a62:	9d 3a       	cpi	r25, 0xAD	; 173
     a64:	88 9b       	sbis	0x11, 0	; 17
     a66:	34 4a       	sbci	r19, 0xA4	; 164
     a68:	ea b0       	in	r14, 0x0a	; 10
     a6a:	0e b2       	in	r0, 0x1e	; 30
     a6c:	22 2b       	or	r18, r18
     a6e:	aa 66       	ori	r26, 0x6A	; 106
     a70:	1d 52       	subi	r17, 0x2D	; 45
     a72:	00 d4       	rcall	.+2048   	; 0x1274 <u8g2_font_crox1hb_tf+0x4a7>
     a74:	17 db       	rcall	.-2514   	; 0xa4 <__SREG__+0x65>
     a76:	0a b9       	out	0x0a, r16	; 10
     a78:	75 29       	or	r23, r5
     a7a:	a7 0d       	add	r26, r7
     a7c:	e2 26       	eor	r14, r18
     a7e:	8d 92       	st	X+, r8
     a80:	3a ac       	ldd	r3, Y+58	; 0x3a
     a82:	83 ac       	ldd	r8, Z+59	; 0x3b
     a84:	c8 8a       	std	Y+16, r12	; 0x10
     a86:	aa 59       	subi	r26, 0x9A	; 154
     a88:	87 14       	cp	r8, r7
     a8a:	d5 18       	sub	r13, r5
     a8c:	db 0a       	sbc	r13, r27
     a8e:	79 95       	.word	0x9579	; ????
     a90:	38 d1       	rcall	.+624    	; 0xd02 <__stack+0x403>
     a92:	89 83       	std	Y+1, r24	; 0x01
     a94:	b8 49       	sbci	r27, 0x98	; 152
     a96:	a3 a4       	ldd	r10, Z+43	; 0x2b
     a98:	0e eb       	ldi	r16, 0xBE	; 190
     a9a:	20 2b       	or	r18, r16
     a9c:	b2 a2       	std	Z+34, r11	; 0x22
     a9e:	6a d6       	rcall	.+3284   	; 0x1774 <u8g2_DrawHXBM+0xcc>
     aa0:	21 05       	cpc	r18, r1
     aa2:	d6 17       	cp	r29, r22
     aa4:	cb 0a       	sbc	r12, r27
     aa6:	39 15       	cp	r19, r9
     aa8:	9d 36       	cpi	r25, 0x6D	; 109
     aaa:	88 9b       	sbis	0x11, 0	; 17
     aac:	34 4a       	sbci	r19, 0xA4	; 164
     aae:	ea b0       	in	r14, 0x0a	; 10
     ab0:	0e b2       	in	r0, 0x1e	; 30
     ab2:	22 2b       	or	r18, r18
     ab4:	aa 66       	ori	r26, 0x6A	; 106
     ab6:	1d 52       	subi	r17, 0x2D	; 45
     ab8:	00 d7       	rcall	.+3584   	; 0x18ba <u8g2_ClearBuffer+0x1e>
     aba:	0f 89       	ldd	r16, Y+23	; 0x17
     abc:	09 73       	andi	r16, 0x39	; 57
     abe:	d4 28       	or	r13, r4
     ac0:	2c a5       	ldd	r18, Y+44	; 0x2c
     ac2:	f3 1a       	sub	r15, r19
     ac4:	85 a5       	ldd	r24, Z+45	; 0x2d
     ac6:	54 01       	movw	r10, r8
     ac8:	d8 18       	sub	r13, r8
     aca:	ad 09       	sbc	r26, r13
     acc:	79 07       	cpc	r23, r25
     ace:	45 13       	cpse	r20, r21
     ad0:	ad a2       	std	Y+37, r10	; 0x25
     ad2:	36 64       	ori	r19, 0x46	; 70
     ad4:	96 49       	sbci	r25, 0x96	; 150
     ad6:	ca 2c       	mov	r12, r10
     ad8:	a1 36       	cpi	r26, 0x61	; 97
     ada:	8a 9b       	sbis	0x11, 2	; 17
     adc:	a8 0c       	add	r10, r8
     ade:	31 00       	.word	0x0031	; ????
     ae0:	d9 19       	sub	r29, r9
     ae2:	da 0a       	sbc	r13, r26
     ae4:	37 75       	andi	r19, 0x57	; 87
     ae6:	2c 87       	std	Y+12, r18	; 0x0c
     ae8:	07 69       	ori	r16, 0x97	; 151
     aea:	51 23       	and	r21, r17
     aec:	35 52       	subi	r19, 0x25	; 37
     aee:	93 31       	cpi	r25, 0x13	; 19
     af0:	52 23       	and	r21, r18
     af2:	35 52       	subi	r19, 0x25	; 37
     af4:	a3 2d       	mov	r26, r3
     af6:	1c 44       	sbci	r17, 0x4C	; 76
     af8:	00 da       	rcall	.-3072   	; 0xfffffefa <__eeprom_end+0xff7efefa>
     afa:	18 da       	rcall	.-3024   	; 0xffffff2c <__eeprom_end+0xff7eff2c>
     afc:	0a 77       	andi	r16, 0x7A	; 122
     afe:	67 1d       	adc	r22, r7
     b00:	1f a4       	ldd	r1, Y+47	; 0x2f
     b02:	45 8d       	ldd	r20, Z+29	; 0x1d
     b04:	d4 48       	sbci	r29, 0x84	; 132
     b06:	4d c6       	rjmp	.+3226   	; 0x17a2 <u8g2_DrawXBM+0x1c>
     b08:	48 8d       	ldd	r20, Y+24	; 0x18
     b0a:	d4 48       	sbci	r29, 0x84	; 132
     b0c:	8d b6       	in	r8, 0x3d	; 61
     b0e:	70 10       	cpse	r7, r0
     b10:	01 db       	rcall	.-2558   	; 0x114 <__trampolines_end+0x60>
     b12:	19 da       	rcall	.-3022   	; 0xffffff46 <__eeprom_end+0xff7eff46>
     b14:	0a 77       	andi	r16, 0x7A	; 122
     b16:	65 29       	or	r22, r5
     b18:	47 07       	cpc	r20, r23
     b1a:	69 51       	subi	r22, 0x19	; 25
     b1c:	23 35       	cpi	r18, 0x53	; 83
     b1e:	52 93       	st	-Z, r21
     b20:	31 52       	subi	r19, 0x21	; 33
     b22:	23 35       	cpi	r18, 0x53	; 83
     b24:	52 a3       	std	Z+34, r21	; 0x22
     b26:	2d 1c       	adc	r2, r13
     b28:	44 00       	.word	0x0044	; ????
     b2a:	dc 18       	sub	r13, r12
     b2c:	ca 0a       	sbc	r12, r26
     b2e:	f7 14       	cp	r15, r7
     b30:	1d 1d       	adc	r17, r13
     b32:	a4 45       	sbci	r26, 0x54	; 84
     b34:	8d d4       	rcall	.+2330   	; 0x1450 <u8g2_font_crox1hb_tf+0x683>
     b36:	48 4d       	sbci	r20, 0xD8	; 216
     b38:	c6 48       	sbci	r28, 0x86	; 134
     b3a:	8d d4       	rcall	.+2330   	; 0x1456 <u8g2_font_crox1hb_tf+0x689>
     b3c:	48 8d       	ldd	r20, Y+24	; 0x18
     b3e:	b6 70       	andi	r27, 0x06	; 6
     b40:	10 01       	movw	r2, r0
     b42:	dd 16       	cp	r13, r29
     b44:	da 0a       	sbc	r13, r26
     b46:	73 67       	ori	r23, 0x73	; 115
     b48:	1d 1f       	adc	r17, r29
     b4a:	b2 45       	sbci	r27, 0x52	; 82
     b4c:	8d b6       	in	r8, 0x3d	; 61
     b4e:	50 4a       	sbci	r21, 0xA0	; 160
     b50:	87 5c       	subi	r24, 0xC7	; 199
     b52:	47 74       	andi	r20, 0x47	; 71
     b54:	1d d1       	rcall	.+570    	; 0xd90 <__stack+0x491>
     b56:	87 14       	cp	r8, r7
     b58:	de 12       	cpse	r13, r30
     b5a:	a9 09       	sbc	r26, r9
     b5c:	b3 86       	std	Z+11, r11	; 0x0b
     b5e:	58 1f       	adc	r21, r24
     b60:	34 93       	xch	Z, r19
     b62:	26 69       	ori	r18, 0x96	; 150
     b64:	92 6d       	ori	r25, 0xD2	; 210
     b66:	d0 e4       	ldi	r29, 0x40	; 64
     b68:	21 05       	cpc	r18, r1
     b6a:	df 18       	sub	r13, r15
     b6c:	e8 d9       	rcall	.-3120   	; 0xffffff3e <__eeprom_end+0xff7eff3e>
     b6e:	f2 86       	std	Z+10, r15	; 0x0a
     b70:	30 32       	cpi	r19, 0x20	; 32
     b72:	65 4a       	sbci	r22, 0xA5	; 165
     b74:	a8 84       	ldd	r10, Y+8	; 0x08
     b76:	43 26       	eor	r4, r19
     b78:	99 16       	cp	r9, r25
     b7a:	4d 51       	subi	r20, 0x1D	; 29
     b7c:	12 65       	ori	r17, 0x52	; 82
     b7e:	58 64       	ori	r21, 0x48	; 72
     b80:	33 00       	.word	0x0033	; ????
     b82:	e0 13       	cpse	r30, r16
     b84:	a8 09       	sbc	r26, r8
     b86:	33 75       	andi	r19, 0x53	; 83
     b88:	24 47       	sbci	r18, 0x74	; 116
     b8a:	07 29       	or	r16, r7
     b8c:	53 b4       	in	r5, 0x23	; 35
     b8e:	44 53       	subi	r20, 0x34	; 52
     b90:	a4 45       	sbci	r26, 0x54	; 84
     b92:	49 94       	.word	0x9449	; ????
     b94:	69 e1       	ldi	r22, 0x19	; 25
     b96:	13 a8       	ldd	r1, Z+51	; 0x33
     b98:	09 73       	andi	r16, 0x39	; 57
     b9a:	47 1d       	adc	r20, r7
     b9c:	1e a4       	ldd	r1, Y+46	; 0x2e
     b9e:	4c d1       	rcall	.+664    	; 0xe38 <u8g2_font_crox1hb_tf+0x6b>
     ba0:	12 4d       	sbci	r17, 0xD2	; 210
     ba2:	91 16       	cp	r9, r17
     ba4:	25 51       	subi	r18, 0x15	; 21
     ba6:	a6 01       	movw	r20, r12
     ba8:	e2 13       	cpse	r30, r18
     baa:	a8 09       	sbc	r26, r8
     bac:	73 45       	sbci	r23, 0x53	; 83
     bae:	29 07       	cpc	r18, r25
     bb0:	07 29       	or	r16, r7
     bb2:	53 b4       	in	r5, 0x23	; 35
     bb4:	44 53       	subi	r20, 0x34	; 52
     bb6:	a4 45       	sbci	r26, 0x54	; 84
     bb8:	49 94       	.word	0x9449	; ????
     bba:	69 e3       	ldi	r22, 0x39	; 57
     bbc:	14 a8       	ldd	r1, Z+52	; 0x34
     bbe:	09 33       	cpi	r16, 0x39	; 57
     bc0:	95 2c       	mov	r9, r5
     bc2:	d1 d1       	rcall	.+930    	; 0xf66 <u8g2_font_crox1hb_tf+0x199>
     bc4:	41 ca       	rjmp	.-2942   	; 0x48 <__SREG__+0x9>
     bc6:	14 2d       	mov	r17, r4
     bc8:	d1 14       	cp	r13, r1
     bca:	69 51       	subi	r22, 0x19	; 25
     bcc:	12 65       	ori	r17, 0x52	; 82
     bce:	1a e4       	ldi	r17, 0x4A	; 74
     bd0:	13 98       	cbi	0x02, 3	; 2
     bd2:	09 f3       	breq	.-62     	; 0xb96 <__stack+0x297>
     bd4:	14 1d       	adc	r17, r4
     bd6:	1c a4       	ldd	r1, Y+44	; 0x2c
     bd8:	4c d1       	rcall	.+664    	; 0xe72 <u8g2_font_crox1hb_tf+0xa5>
     bda:	12 4d       	sbci	r17, 0xD2	; 210
     bdc:	91 16       	cp	r9, r17
     bde:	25 51       	subi	r18, 0x15	; 21
     be0:	a6 01       	movw	r20, r12
     be2:	e5 13       	cpse	r30, r21
     be4:	a8 09       	sbc	r26, r8
     be6:	73 65       	ori	r23, 0x53	; 83
     be8:	1d 1d       	adc	r17, r13
     bea:	a4 4c       	sbci	r26, 0xC4	; 196
     bec:	d1 12       	cpse	r13, r17
     bee:	4d 91       	ld	r20, X+
     bf0:	16 25       	eor	r17, r6
     bf2:	51 a6       	std	Z+41, r5	; 0x29
     bf4:	01 e6       	ldi	r16, 0x61	; 97
     bf6:	15 7c       	andi	r17, 0xC5	; 197
     bf8:	09 fb       	.word	0xfb09	; ????
     bfa:	86 53       	subi	r24, 0x36	; 54
     bfc:	26 29       	or	r18, r6
     bfe:	9a 34       	cpi	r25, 0x4A	; 74
     c00:	64 83       	std	Z+4, r22	; 0x04
     c02:	24 ad       	ldd	r18, Z+60	; 0x3c
     c04:	4a a4       	ldd	r4, Y+42	; 0x2a
     c06:	0d d9       	rcall	.-3558   	; 0xfffffe22 <__eeprom_end+0xff7efe22>
     c08:	a0 00       	.word	0x00a0	; ????
     c0a:	e7 10       	cpse	r14, r7
     c0c:	a7 d9       	rcall	.-3250   	; 0xffffff5c <__eeprom_end+0xff7eff5c>
     c0e:	ee 86       	std	Y+14, r14	; 0x0e
     c10:	28 4b       	sbci	r18, 0xB8	; 184
     c12:	b4 d5       	rcall	.+2920   	; 0x177c <u8g2_DrawHXBM+0xd4>
     c14:	16 0d       	add	r17, r6
     c16:	61 1e       	adc	r6, r17
     c18:	6e 00       	.word	0x006e	; ????
     c1a:	e8 11       	cpse	r30, r8
     c1c:	a7 09       	sbc	r26, r7
     c1e:	f1 f4       	brne	.+60     	; 0xc5c <__stack+0x35d>
     c20:	1c 9c       	mul	r1, r12
     c22:	2c 91       	ld	r18, X
     c24:	32 48       	sbci	r19, 0x82	; 130
     c26:	aa a6       	std	Y+42, r10	; 0x2a
     c28:	0c 0a       	sbc	r0, r28
     c2a:	00 e9       	ldi	r16, 0x90	; 144
     c2c:	11 a7       	std	Z+41, r17	; 0x29
     c2e:	09 31       	cpi	r16, 0x19	; 25
     c30:	37 1d       	adc	r19, r7
     c32:	9d 2c       	mov	r9, r13
     c34:	91 32       	cpi	r25, 0x21	; 33
     c36:	48 aa       	std	Y+48, r4	; 0x30
     c38:	a6 0c       	add	r10, r6
     c3a:	0a 00       	.word	0x000a	; ????
     c3c:	ea 11       	cpse	r30, r10
     c3e:	a7 09       	sbc	r26, r7
     c40:	31 35       	cpi	r19, 0x51	; 81
     c42:	29 c7       	rjmp	.+3666   	; 0x1a96 <u8g2_read_font_info+0x90>
     c44:	26 4b       	sbci	r18, 0xB6	; 182
     c46:	a4 0c       	add	r10, r4
     c48:	92 aa       	std	Z+50, r9	; 0x32
     c4a:	29 83       	std	Y+1, r18	; 0x01
     c4c:	02 eb       	ldi	r16, 0xB2	; 178
     c4e:	11 97       	sbiw	r26, 0x01	; 1
     c50:	09 b1       	in	r16, 0x09	; 9
     c52:	14 1d       	adc	r17, r4
     c54:	9b 2c       	mov	r9, r11
     c56:	91 32       	cpi	r25, 0x21	; 33
     c58:	48 aa       	std	Y+48, r4	; 0x30
     c5a:	a6 0c       	add	r10, r6
     c5c:	0a 00       	.word	0x000a	; ????
     c5e:	ec 0d       	add	r30, r12
     c60:	a5 09       	sbc	r26, r5
     c62:	a9 d4       	rcall	.+2386   	; 0x15b6 <u8g2_font_crox1hb_tf+0x7e9>
     c64:	74 88       	ldd	r7, Z+20	; 0x14
     c66:	26 cd       	rjmp	.-1460   	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
     c68:	74 48       	sbci	r23, 0x84	; 132
     c6a:	00 ed       	ldi	r16, 0xD0	; 208
     c6c:	0e a6       	std	Y+46, r0	; 0x2e
     c6e:	09 e9       	ldi	r16, 0x99	; 153
     c70:	26 1d       	adc	r18, r6
     c72:	19 b2       	in	r1, 0x19	; 25
     c74:	4d b4       	in	r4, 0x2d	; 45
     c76:	1d 22       	and	r1, r29
     c78:	00 ee       	ldi	r16, 0xE0	; 224
     c7a:	0e a6       	std	Y+46, r0	; 0x2e
     c7c:	09 e9       	ldi	r16, 0x99	; 153
     c7e:	24 29       	or	r18, r4
     c80:	1e b2       	in	r1, 0x1e	; 30
     c82:	4d b4       	in	r4, 0x2d	; 45
     c84:	1d 22       	and	r1, r29
     c86:	00 ef       	ldi	r16, 0xF0	; 240
     c88:	0c 96       	adiw	r24, 0x0c	; 12
     c8a:	09 69       	ori	r16, 0x99	; 153
     c8c:	cc 43       	sbci	r28, 0x3C	; 60
     c8e:	b6 89       	ldd	r27, Z+22	; 0x16
     c90:	b6 43       	sbci	r27, 0x36	; 54
     c92:	04 f0       	brlt	.+0      	; 0xc94 <__stack+0x395>
     c94:	15 b8       	out	0x05, r1	; 5
     c96:	09 b3       	in	r16, 0x19	; 25
     c98:	b3 21       	and	r27, r3
     c9a:	1e 13       	cpse	r17, r30
     c9c:	71 90       	ld	r7, Z+
     c9e:	a2 45       	sbci	r26, 0x52	; 82
     ca0:	1b c2       	rjmp	.+1078   	; 0x10d8 <u8g2_font_crox1hb_tf+0x30b>
     ca2:	44 53       	subi	r20, 0x34	; 52
     ca4:	a6 6c       	ori	r26, 0xC6	; 198
     ca6:	c8 00       	.word	0x00c8	; ????
     ca8:	f1 15       	cp	r31, r1
     caa:	a8 09       	sbc	r26, r8
     cac:	33 95       	inc	r19
     cae:	2c d1       	rcall	.+600    	; 0xf08 <u8g2_font_crox1hb_tf+0x13b>
     cb0:	a1 21       	and	r26, r1
     cb2:	59 94       	.word	0x9459	; ????
     cb4:	44 99       	sbic	0x08, 4	; 8
     cb6:	14 69       	ori	r17, 0x94	; 148
     cb8:	91 14       	cp	r9, r1
     cba:	4d d1       	rcall	.+666    	; 0xf56 <u8g2_font_crox1hb_tf+0x189>
     cbc:	06 f2       	brts	.-128    	; 0xc3e <__stack+0x33f>
     cbe:	13 a8       	ldd	r1, Z+51	; 0x33
     cc0:	09 f1       	breq	.+66     	; 0xd04 <__stack+0x405>
     cc2:	74 24       	eor	r7, r4
     cc4:	87 87       	std	Z+15, r24	; 0x0f
     cc6:	2c 53       	subi	r18, 0x3C	; 60
     cc8:	b4 21       	and	r27, r4
     cca:	1c 32       	cpi	r17, 0x2C	; 44
     ccc:	45 d2       	rcall	.+1162   	; 0x1158 <u8g2_font_crox1hb_tf+0x38b>
     cce:	86 0c       	add	r8, r6
     cd0:	f3 13       	cpse	r31, r19
     cd2:	a8 09       	sbc	r26, r8
     cd4:	71 47       	sbci	r23, 0x71	; 113
     cd6:	1d 1e       	adc	r1, r29
     cd8:	b2 4c       	sbci	r27, 0xC2	; 194
     cda:	d1 86       	std	Z+9, r13	; 0x09
     cdc:	70 c8       	rjmp	.-3872   	; 0xfffffdbe <__eeprom_end+0xff7efdbe>
     cde:	14 49       	sbci	r17, 0x94	; 148
     ce0:	1b 32       	cpi	r17, 0x2B	; 43
     ce2:	00 f4       	brcc	.+0      	; 0xce4 <__stack+0x3e5>
     ce4:	13 a8       	ldd	r1, Z+51	; 0x33
     ce6:	09 71       	andi	r16, 0x19	; 25
     ce8:	45 29       	or	r20, r5
     cea:	07 87       	std	Z+15, r16	; 0x0f
     cec:	2c 53       	subi	r18, 0x3C	; 60
     cee:	b4 21       	and	r27, r4
     cf0:	1c 32       	cpi	r17, 0x2C	; 44
     cf2:	45 d2       	rcall	.+1162   	; 0x117e <u8g2_font_crox1hb_tf+0x3b1>
     cf4:	86 0c       	add	r8, r6
     cf6:	f5 14       	cp	r15, r5
     cf8:	a8 09       	sbc	r26, r8
     cfa:	31 95       	neg	r19
     cfc:	2c d1       	rcall	.+600    	; 0xf56 <u8g2_font_crox1hb_tf+0x189>
     cfe:	d1 21       	and	r29, r1
     d00:	cb 14       	cp	r12, r11
     d02:	6d 08       	sbc	r6, r13
     d04:	87 4c       	sbci	r24, 0xC7	; 199
     d06:	91 b4       	in	r9, 0x21	; 33
     d08:	21 03       	mulsu	r18, r17
     d0a:	f6 13       	cpse	r31, r22
     d0c:	98 09       	sbc	r25, r8
     d0e:	f1 14       	cp	r15, r1
     d10:	1d 1c       	adc	r1, r13
     d12:	b2 4c       	sbci	r27, 0xC2	; 194
     d14:	d1 86       	std	Z+9, r13	; 0x09
     d16:	70 c8       	rjmp	.-3872   	; 0xfffffdf8 <__eeprom_end+0xff7efdf8>
     d18:	14 49       	sbci	r17, 0x94	; 148
     d1a:	1b 32       	cpi	r17, 0x2B	; 43
     d1c:	00 f7       	brcc	.-64     	; 0xcde <__stack+0x3df>
     d1e:	0b 78       	andi	r16, 0x8B	; 139
     d20:	09 33       	cpi	r16, 0x39	; 57
     d22:	73 ea       	ldi	r23, 0xA3	; 163
     d24:	30 e8       	ldi	r19, 0x80	; 128
     d26:	d4 10       	cpse	r13, r4
     d28:	f8 0f       	add	r31, r24
     d2a:	79 09       	sbc	r23, r9
     d2c:	31 97       	sbiw	r30, 0x01	; 1
     d2e:	c8 69       	ori	r28, 0x98	; 152
     d30:	52 12       	cpse	r5, r18
     d32:	69 72       	andi	r22, 0x29	; 41
     d34:	1a 44       	sbci	r17, 0x4A	; 74
     d36:	00 f9       	bld	r16, 0
     d38:	13 a8       	ldd	r1, Z+51	; 0x33
     d3a:	09 33       	cpi	r16, 0x39	; 57
     d3c:	75 24       	eor	r7, r5
     d3e:	87 2e       	mov	r8, r23
     d40:	9a 22       	and	r9, r26
     d42:	29 93       	st	Y+, r18
     d44:	22 2d       	mov	r18, r2
     d46:	4a a2       	std	Y+34, r4	; 0x22
     d48:	1c 02       	muls	r17, r28
     d4a:	fa 13       	cpse	r31, r26
     d4c:	a8 09       	sbc	r26, r8
     d4e:	73 47       	sbci	r23, 0x73	; 115
     d50:	1d 9b       	sbis	0x03, 5	; 3
     d52:	16 4d       	sbci	r17, 0xD6	; 214
     d54:	91 94       	neg	r9
     d56:	49 91       	ld	r20, Y+
     d58:	16 25       	eor	r17, r6
     d5a:	51 0e       	add	r5, r17
     d5c:	01 fb       	bst	r16, 1
     d5e:	14 a8       	ldd	r1, Z+52	; 0x34
     d60:	09 73       	andi	r16, 0x39	; 57
     d62:	45 29       	or	r20, r5
     d64:	47 a6       	std	Z+47, r4	; 0x2f
     d66:	45 53       	subi	r20, 0x35	; 53
     d68:	24 65       	ori	r18, 0x54	; 84
     d6a:	52 a4       	ldd	r5, Z+42	; 0x2a
     d6c:	45 49       	sbci	r20, 0x95	; 149
     d6e:	94 43       	sbci	r25, 0x34	; 52
     d70:	00 fc       	sbrc	r0, 0
     d72:	13 98       	cbi	0x02, 3	; 2
     d74:	09 f3       	breq	.-62     	; 0xd38 <__stack+0x439>
     d76:	14 1d       	adc	r17, r4
     d78:	99 16       	cp	r9, r25
     d7a:	4d 91       	ld	r20, X+
     d7c:	94 49       	sbci	r25, 0x94	; 148
     d7e:	91 16       	cp	r9, r17
     d80:	25 51       	subi	r18, 0x15	; 21
     d82:	0e 01       	movw	r0, r28
     d84:	fd 15       	cp	r31, r13
     d86:	da d8       	rcall	.-3660   	; 0xffffff3c <__eeprom_end+0xff7eff3c>
     d88:	b0 67       	ori	r27, 0x70	; 112
     d8a:	1d 1f       	adc	r17, r29
     d8c:	a2 9b       	sbis	0x14, 2	; 20
     d8e:	2d 94 52 25 	jmp	0xa4aa4	; 0xa4aa4 <__TEXT_REGION_LENGTH__+0x9caa4>
     d92:	d7 11       	cpse	r29, r7
     d94:	1d c9       	rjmp	.-3526   	; 0xffffffd0 <__eeprom_end+0xff7effd0>
     d96:	91 78       	andi	r25, 0x81	; 129
     d98:	07 fe       	sbrs	r0, 7
     d9a:	17 d9       	rcall	.-3538   	; 0xffffffca <__eeprom_end+0xff7effca>
     d9c:	d9 72       	andi	r29, 0x29	; 41
     d9e:	86 58       	subi	r24, 0x86	; 134
     da0:	b7 0c       	add	r11, r7
     da2:	d1 90       	ld	r13, Z+
     da4:	28 43       	sbci	r18, 0x38	; 56
     da6:	a4 6c       	ori	r26, 0xC4	; 196
     da8:	8a 26       	eor	r8, r26
     daa:	69 d9       	rcall	.-3374   	; 0x7e <__SREG__+0x3f>
     dac:	a0 cd       	rjmp	.-1216   	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     dae:	ba 0e       	add	r11, r26
     db0:	ff 15       	cp	r31, r15
     db2:	ca d8       	rcall	.-3692   	; 0xffffff48 <__eeprom_end+0xff7eff48>
     db4:	30 15       	cp	r19, r0
     db6:	1d 1d       	adc	r17, r13
     db8:	a2 9b       	sbis	0x14, 2	; 20
     dba:	2d 94 52 25 	jmp	0xa4aa4	; 0xa4aa4 <__TEXT_REGION_LENGTH__+0x9caa4>
     dbe:	d7 11       	cpse	r29, r7
     dc0:	1d c9       	rjmp	.-3526   	; 0xfffffffc <__eeprom_end+0xff7efffc>
     dc2:	91 78       	andi	r25, 0x81	; 129
     dc4:	07 00       	.word	0x0007	; ????
     dc6:	00 00       	nop
     dc8:	04 ff       	sbrs	r16, 4
     dca:	ff 00       	.word	0x00ff	; ????
	...

00000dcd <u8g2_font_crox1hb_tf>:
     dcd:	bf 00 03 03 04 04 02 05 05 0c 0d 00 fe 09 fe 09     ................
     ddd:	fe 01 58 02 c6 08 7f 20 05 00 6e 0a 21 07 92 43     ..X.... ..n.!..C
     ded:	8a 27 01 22 07 34 db 8a 43 01 23 0d 96 c3 1b 12     .'.".4..C.#.....
     dfd:	c5 42 62 b1 90 28 00 24 0f a6 bf 2b 19 e5 30 1b     .Bb..(.$...+..0.
     e0d:	ce 0e 13 9a 08 00 25 0e 98 c3 9c a1 44 65 22 d5     ......%.....De".
     e1d:	65 a2 71 02 26 0d 96 c3 1b 19 89 26 94 1d 22 9a     e.q.&......&..".
     e2d:	0a 27 06 32 db 09 03 28 08 b3 3b 1a 8a fe 24 29     .'.2...(..;...$)
     e3d:	0a b3 3b 0a 91 44 bf 50 00 2a 08 34 d7 0a 8a 84     ..;..D.P.*.4....
     e4d:	00 2b 0a 56 c7 2b a1 c8 24 14 01 2c 07 23 3f 1a     .+.V.+..$..,.#?.
     e5d:	0a 00 2d 06 13 4f 8a 01 2e 06 12 43 0a 01 2f 09     ..-..O.....C../.
     e6d:	93 43 1a 5d 28 5a 00 30 0b 96 c3 1b 8a 88 9f 24     .C.](Z.0.......$
     e7d:	14 00 31 07 94 c3 2b 93 7e 32 0b 96 c3 1b 8a 48     ..1...+.~2.....H
     e8d:	a8 a6 a3 01 33 0e 96 c3 1b 8a 48 a8 34 15 92 24     ....3.....H.4..$
     e9d:	14 00 34 0c 96 c3 3b d9 12 8b 8a 4d 28 01 35 0f     ..4...;....M(.5.
     ead:	96 c3 8b 43 50 58 11 09 85 24 09 05 00 36 0e 96     ...CPX...$...6..
     ebd:	c3 1b 8a 88 28 ac 88 98 24 14 00 37 0d 96 c3 0b     ....(...$..7....
     ecd:	a3 4c 28 13 ca 84 6a 00 38 0e 96 c3 1b 8a 88 49     .L(...j.8......I
     edd:	42 11 31 49 28 00 39 0e 96 c3 1b 8a 88 49 52 14     B.1I(.9......IR.
     eed:	92 24 14 00 3a 08 62 43 0a 39 44 00 3b 08 73 3f     .$..:.bC.9D.;.s?
     efd:	1a 39 98 02 3c 08 75 c3 3b 91 46 0d 3d 07 36 cb     .9..<.u.;.F.=.6.
     f0d:	0b b3 01 3e 09 75 c3 0b a1 26 6d 00 3f 0d 96 c3     ...>.u...&m.?...
     f1d:	1b 8a 48 a8 a6 28 87 89 00 40 16 ab 3f be e2 6c     ..H..(...@..?..l
     f2d:	24 95 88 28 14 15 8a 0a e9 22 07 cd 61 26 00 41     $..(....."..a&.A
     f3d:	0e 98 42 3c b1 94 48 13 69 b2 44 a7 02 42 0c 96     ..B<..H.i.D..B..
     f4d:	43 8c 8a 88 e9 22 62 ba 00 43 0c 97 43 9c 8a 8c     C...."b..C..C...
     f5d:	aa 37 49 05 00 44 0c 97 c3 8c 92 8a 8c 4f 92 12     .7I..D.......O..
     f6d:	00 45 0b 96 43 8c 43 50 b1 22 54 34 46 0b 96 c3     .E..C.CP."T4F...
     f7d:	8b 43 50 b1 22 d4 08 47 0c 97 c3 9c 8a 8c aa 62     .CP."..G.......b
     f8d:	63 9a 18 48 0b 97 c3 0c 19 b7 03 8d 9b 00 49 07     c..H..........I.
     f9d:	92 43 8a 07 02 4a 0b 95 42 3b bd 8d 46 92 09 00     .C...J..B;..F...
     fad:	4b 10 97 43 0c 91 44 89 36 1c d2 24 22 15 99 00     K..C..D.6..$"...
     fbd:	4c 08 96 c3 0b a1 7e 34 4d 0f 98 43 0d 21 b1 64     L.....~4M..C.!.d
     fcd:	3a bc 48 28 12 a2 00 4e 0d 97 c3 0c 59 a9 64 b1     :.H(...N....Y.d.
     fdd:	50 4c 6d 02 4f 0b 97 c3 9c 8a 8c df 24 15 00 50     PLm.O.......$..P
     fed:	0c 97 43 0c 8b 8c ed 10 91 6a 05 51 0c a7 bf 9c     ..C......j.Q....
     ffd:	8a 8c 2f a6 49 59 00 52 0c 97 c3 0c 8b 8c ed 10     ../.IY.R........
    100d:	91 71 13 53 0e 96 43 1c 8a 88 28 a5 0a 49 12 0a     .q.S..C...(..I..
    101d:	00 54 09 96 43 0c 93 50 3f 01 55 0a 97 c3 0c 19     .T..C..P?.U.....
    102d:	7f 93 54 00 56 0e 98 42 8c e8 54 22 d2 1b 91 2a     ..T.V..B..T"...*
    103d:	96 01 57 14 9c 42 8e 38 68 0e 92 88 f4 b7 43 f0     ..W..B.8h.....C.
    104d:	10 15 89 45 32 00 58 10 98 42 8c e8 54 22 92 51     ...E2.X..B..T".Q
    105d:	a5 34 91 24 3a 15 59 0d 98 42 8c e8 54 22 92 51     .4.$:.Y..B..T".Q
    106d:	c5 ba 01 5a 0c 98 42 8c 43 58 aa d7 f8 21 00 5b     ...Z..B.CX...!.[
    107d:	08 b3 3b 8a 8a fe 32 5c 09 a3 3f 0a 89 4e 12 1d     ..;...2\..?..N..
    108d:	5d 08 b3 3b 8a 89 fe 52 5e 08 36 df 2b 19 45 24     ]..;...R^.6.+.E$
    109d:	5f 06 17 ba 8b 03 60 07 23 5f 0a 91 00 61 0a 66     _.....`.#_...a.f
    10ad:	c3 1b aa e4 44 92 14 62 0b 96 c3 0b a1 62 45 c4     ....D..b.....bE.
    10bd:	e9 02 63 0b 66 c3 1b 8a 88 a8 24 a1 00 64 0a 96     ..c.f.....$..d..
    10cd:	c3 4b 2d 27 4e 92 02 65 0c 66 c3 1b 8a e8 30 14     .K-'N..e.f....0.
    10dd:	49 28 00 66 0a 93 43 1a 8a a4 a2 0b 00 67 0a 86     I(.f..C......g..
    10ed:	bb 9b 13 27 49 f1 02 68 0b 96 c3 0b a1 62 65 42     ...'I..h.....beB
    10fd:	e2 24 69 08 92 c3 09 e1 a1 00 6a 08 b2 bb 09 e1     .$i.......j.....
    110d:	e1 20 6b 0d 96 c3 0b a1 16 09 69 46 92 28 09 6c     . k.......iF.(.l
    111d:	07 92 c3 89 07 02 6d 0e 68 c3 8c 8b 0a 45 42 91     ......m.h....EB.
    112d:	50 24 14 05 6e 0a 66 c3 8b ca 84 c4 49 00 6f 0a     P$..n.f.....I.o.
    113d:	66 c3 1b 8a 88 93 84 02 70 0b 86 bb 8b 8a 88 d3     f.......p.......
    114d:	45 28 04 71 0a 86 bb 9b 13 27 49 51 01 72 08 63     E(.q.....'IQ.r.c
    115d:	43 8a 8a 2e 00 73 0b 65 43 9b 89 46 89 ca 04 00     C....s.eC..F....
    116d:	74 0a 83 43 0a 89 a4 a2 49 00 75 09 66 c3 0b 11     t..C....I.u.f...
    117d:	2f 93 02 76 0c 66 c3 0b 11 49 42 a2 09 45 00 77     /..v.f...IB..E.w
    118d:	0e 68 c3 0c 89 84 22 39 1c 28 22 2d 00 78 0c 65     .h...."9.("-.x.e
    119d:	43 0b 09 45 32 9a 48 28 02 79 0b 86 3a 1b fd 69     C..E2.H(.y..:..i
    11ad:	26 14 cd 00 7a 09 65 43 8b 9a 48 5b 01 7b 0c b4     &...z.eC..H[.{..
    11bd:	bf 2a 89 48 8b 4c a4 4d 00 7c 07 a2 bf 89 07 03     .*.H.L.M.|......
    11cd:	7d 0c b4 bf 0a 99 48 9b 44 a4 45 04 7e 08 26 db     }.....H.D.E.~.&.
    11dd:	9b c3 04 00 a0 05 00 6e 0a a1 08 92 3b 0a d1 e1     .......n....;...
    11ed:	00 a2 0d 86 bf 3b 11 45 44 54 92 90 64 00 b8 0c     .....;.EDT..d...
    11fd:	96 c3 9b 91 44 55 46 53 14 1a a4 0d 76 cb 0b 91     ....DUFS....v...
    120d:	84 22 62 92 50 44 02 a5 0e 96 c3 0b 11 93 84 62     ."b.PD.........b
    121d:	12 99 84 22 00 a6 08 b2 bb 89 c3 e8 30 a7 12 a6     ..."........0...
    122d:	bf 1b 8a 48 22 23 49 44 12 11 4d 22 92 50 00 a8     ...H"#ID..M".P..
    123d:	07 14 5e 8a 88 00 a9 0f 78 cb 2c 9a 48 22 39 88     ..^.....x.,.H"9.
    124d:	28 15 91 8c 04 aa 08 64 cf 8a d1 81 48 ab 08 56     (......d....H..V
    125d:	c3 2b 0a 1b 03 ac 07 26 cb 0b a3 00 ad 06 13 53     .+.....&.......S
    126d:	8a 01 ae 0f 78 cb 2c 9a 48 72 b0 1c 26 22 19 09     ....x.,.Hr..&"..
    127d:	00 af 06 17 e6 8b 03 b0 08 34 db 1a 09 45 02 b1     .........4...E..
    128d:	0b 76 c3 2b a1 c8 24 94 43 0c b2 09 54 52 8a 99     .v.+..$.C...TR..
    129d:	44 12 23 a8 09 54 52 8a 99 44 56 01 b4 07 23 5f     D.#..TR..DV...#_
    12ad:	1a 0a 00 b5 0b 86 bb 0b 89 fe e5 10 14 02 b6 0a     ................
    12bd:	a6 bf 9b c3 83 a4 c4 07 b7 06 12 53 0a 01 b8 06     ...........S....
    12cd:	23 3b 9a 02 b9 07 53 53 9a 8a 06 ba 08 64 cf 8a     #;....SS.....d..
    12dd:	07 21 01 bb 09 56 c3 0b 1a 0b 13 00 bc 11 98 c3     .!...V..........
    12ed:	1c e9 4c 22 52 91 51 44 92 89 c4 44 16 bd 11 98     ..L"R.QD...D....
    12fd:	c3 1c e9 4c 22 52 91 d9 44 12 91 44 24 26 be 11     ...L"R..D..D$&..
    130d:	98 c3 8c b9 48 22 92 91 2a 22 c9 44 62 22 0b bf     ....H"..*".Db"..
    131d:	0d 96 bb 2b 39 4c 28 53 54 92 50 00 c0 0e 98 42     ...+9L(ST.P....B
    132d:	3c b1 94 48 13 69 b2 44 a7 02 c1 0c 96 43 8c 43     <..H.i.D.....C.C
    133d:	50 b1 22 62 ba 00 c2 0c 96 43 8c 8a 88 e9 22 62     P."b.....C...."b
    134d:	ba 00 c3 09 96 43 8c 43 50 3f 02 c4 14 a9 bf 2d     .....C.CP?.....-
    135d:	9b 48 26 92 89 64 22 99 48 26 52 93 1c a8 02 c5     .H&..d".H&R.....
    136d:	0b 96 43 8c 43 50 b1 22 54 34 c6 14 9c 42 8e a0     ..C.CP."T4...B..
    137d:	4c 22 52 93 a8 9a 5d 25 6a 22 95 a0 4c 00 c7 0e     L"R...]%j"..L...
    138d:	96 43 1c 8a 48 a8 42 15 92 24 14 00 c8 0e 97 c3     .C..H.B..$......
    139d:	0c 19 a9 e5 10 b1 94 4a 34 01 c9 10 b7 c3 1c b5     .......J4.......
    13ad:	91 8c d4 72 88 58 4a 25 9a 00 ca 10 97 43 0c 91     ...r.XJ%.....C..
    13bd:	44 89 36 1c d2 24 22 15 99 00 cb 13 98 43 9d 8b     D.6..$"......C..
    13cd:	4c 22 93 c8 24 32 89 4c 22 93 c8 88 02 cc 0f 98     L"..$2.L".......
    13dd:	43 0d 21 b1 64 3a bc 48 28 12 a2 00 cd 0b 97 c3     C.!.d:.H(.......
    13ed:	0c 19 b7 03 8d 9b 00 ce 0b 97 c3 9c 8a 8c df 24     ...............$
    13fd:	15 00 cf 09 97 c3 8c 83 8c bf 09 d0 0c 97 43 0c     ..............C.
    140d:	8b 8c ed 10 91 6a 05 d1 0c 97 43 9c 8a 8c aa 37     .....j....C....7
    141d:	49 05 00 d2 09 96 43 0c 93 50 3f 01 d3 0f 98 42     I.....C..P?....B
    142d:	8c e8 54 22 92 51 c5 52 d5 38 00 d4 12 98 43 1d     ..T".Q.R.8....C.
    143d:	8b 0a 45 42 91 50 24 14 09 45 c5 28 03 d5 10 98     ..EB.P$..E.(....
    144d:	42 8c e8 54 22 92 51 a5 34 91 24 3a 15 d6 16 a8     B..T".Q.4.$:....
    145d:	bf 0c 99 44 26 91 49 64 12 99 44 26 91 49 64 92     ...D&.Id..D&.Id.
    146d:	43 58 00 d7 0a 97 c3 0c 19 37 89 55 07 d8 15 9a     CX.......7.U....
    147d:	43 0e 91 88 24 22 89 48 22 92 88 24 22 89 48 a2     C...$".H"..$".H.
    148d:	43 01 d9 17 ab 3f 0e 91 8a 48 45 a4 22 52 11 a9     C....?...HE."R..
    149d:	88 54 44 2a 22 95 03 1d 24 da 0e 99 c2 0c ba 76     .TD*"...$......v
    14ad:	9b 92 4c 24 13 59 00 db 0d 99 c3 0d 29 d7 43 84     ..L$.Y......).C.
    14bd:	e6 76 98 08 dc 0c 97 43 0c a9 56 8b 8c ed 10 01     .v.....C..V.....
    14cd:	dd 0e 97 c3 9c 8a 4c aa 54 95 d2 24 15 00 de 0c     ......L.T..$....
    14dd:	99 c3 0d 49 85 e6 6f 94 0a 00 df 0e 97 c3 9c 43     ...I..o........C
    14ed:	8c 4d 62 23 49 94 68 02 e0 0a 66 c3 1b aa e4 44     .Mb#I.h...f....D
    14fd:	92 14 e1 0d 96 c3 4b 09 45 58 11 71 92 50 00 e2     ......K.EX.q.P..
    150d:	0b 66 c3 8b 8a e8 22 22 5d 00 e3 08 65 43 8b 9b     .f....""]...eC..
    151d:	6e 00 e4 0f 77 3f 9c 92 44 24 11 49 44 12 c9 41     n...w?..D$.ID..A
    152d:	26 e5 0c 66 c3 1b 8a e8 30 14 49 28 00 e6 0c 68     &..f....0.I(...h
    153d:	c3 0c 89 8a 8d 66 51 a1 28 e7 0c 66 c3 1b 8a 48     .....fQ.(..f...H
    154d:	34 25 49 28 00 e8 0a 66 c3 0b 11 cb a1 42 12 e9     4%I(...f.....B..
    155d:	0c 86 c3 1b 9a 48 c4 72 a8 90 04 ea 0c 66 c3 0b     .....H.r.....f..
    156d:	89 84 34 23 49 94 04 eb 0e 67 43 1c 8b 48 22 92     ..4#I....gC..H".
    157d:	88 24 22 9a 00 ec 0c 78 bf 0c 61 e9 60 91 10 19     .$"....x..a.`...
    158d:	05 ed 0a 66 c3 0b 11 e9 30 62 12 ee 0a 66 c3 1b     ...f....0b...f..
    159d:	8a 88 93 84 02 ef 09 66 c3 8b 43 88 27 01 f0 0b     .......f..C.'...
    15ad:	86 bb 8b 8a 88 d3 45 28 04 f1 0b 66 c3 1b 8a 88     ......E(...f....
    15bd:	a8 24 a1 00 f2 09 66 c3 0b 93 50 27 00 f3 0b 86     .$....f...P'....
    15cd:	3a 1b fd 69 26 14 cd 00 f4 0d 96 bb 2b 19 e5 f0     :..i&.......+...
    15dd:	30 a1 09 45 00 f5 0c 65 43 0b 09 45 32 9a 48 28     0..E...eC..E2.H(
    15ed:	02 f6 0f 77 3f 0c 91 44 24 11 49 44 12 91 e4 2a     ...w?..D$.ID...*
    15fd:	f7 0a 66 c3 0b 11 93 a4 a8 00 f8 0f 68 c3 0c 89     ..f.........h...
    160d:	84 22 a1 48 28 12 8a e4 30 f9 0b 79 3f 0d 89 fe     .".H(...0..y?...
    161d:	bf 1c e4 02 fa 0b 66 c3 8b a1 90 24 d1 42 01 fb     ......f....$.B..
    162d:	0c 67 43 0c 19 cd 42 b1 1c 22 02 fc 0b 65 43 0b     .gC...B.."...eC.
    163d:	99 8c 22 a1 58 00 fd 09 65 43 0b e2 4d 66 01 fe     ..".X...eC..Mf..
    164d:	0b 67 43 0c c9 84 e2 85 32 01 ff 0a 65 43 1b 0b     .gC.....2...eC..
    165d:	45 62 a1 08 00 00 00 04 ff ff 00 00 00              Eb...........

0000166a <__ctors_end>:
    166a:	11 24       	eor	r1, r1
    166c:	1f be       	out	0x3f, r1	; 63
    166e:	cf ef       	ldi	r28, 0xFF	; 255
    1670:	d8 e0       	ldi	r29, 0x08	; 8
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	cd bf       	out	0x3d, r28	; 61

00001676 <__do_copy_data>:
    1676:	12 e0       	ldi	r17, 0x02	; 2
    1678:	a0 e0       	ldi	r26, 0x00	; 0
    167a:	b1 e0       	ldi	r27, 0x01	; 1
    167c:	e8 e2       	ldi	r30, 0x28	; 40
    167e:	f2 e3       	ldi	r31, 0x32	; 50
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <__do_copy_data+0x10>
    1682:	05 90       	lpm	r0, Z+
    1684:	0d 92       	st	X+, r0
    1686:	ae 36       	cpi	r26, 0x6E	; 110
    1688:	b1 07       	cpc	r27, r17
    168a:	d9 f7       	brne	.-10     	; 0x1682 <__do_copy_data+0xc>

0000168c <__do_clear_bss>:
    168c:	26 e0       	ldi	r18, 0x06	; 6
    168e:	ae e6       	ldi	r26, 0x6E	; 110
    1690:	b2 e0       	ldi	r27, 0x02	; 2
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <.do_clear_bss_start>

00001694 <.do_clear_bss_loop>:
    1694:	1d 92       	st	X+, r1

00001696 <.do_clear_bss_start>:
    1696:	a4 3e       	cpi	r26, 0xE4	; 228
    1698:	b2 07       	cpc	r27, r18
    169a:	e1 f7       	brne	.-8      	; 0x1694 <.do_clear_bss_loop>
    169c:	0e 94 04 18 	call	0x3008	; 0x3008 <main>
    16a0:	0c 94 12 19 	jmp	0x3224	; 0x3224 <_exit>

000016a4 <__bad_interrupt>:
    16a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000016a8 <u8g2_DrawHXBM>:
}



void u8g2_DrawHXBM(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, const uint8_t *b)
{
    16a8:	5f 92       	push	r5
    16aa:	6f 92       	push	r6
    16ac:	7f 92       	push	r7
    16ae:	8f 92       	push	r8
    16b0:	9f 92       	push	r9
    16b2:	af 92       	push	r10
    16b4:	bf 92       	push	r11
    16b6:	cf 92       	push	r12
    16b8:	df 92       	push	r13
    16ba:	ef 92       	push	r14
    16bc:	ff 92       	push	r15
    16be:	0f 93       	push	r16
    16c0:	1f 93       	push	r17
    16c2:	cf 93       	push	r28
    16c4:	df 93       	push	r29
    16c6:	5c 01       	movw	r10, r24
    16c8:	6b 01       	movw	r12, r22
    16ca:	4a 01       	movw	r8, r20
    16cc:	79 01       	movw	r14, r18
    16ce:	38 01       	movw	r6, r16
  uint8_t mask;
  uint8_t color = u8g2->draw_color;
    16d0:	fc 01       	movw	r30, r24
    16d2:	ec 58       	subi	r30, 0x8C	; 140
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	d0 81       	ld	r29, Z
  uint8_t ncolor = (color == 0 ? 1 : 0);
    16d8:	81 e0       	ldi	r24, 0x01	; 1
    16da:	d1 11       	cpse	r29, r1
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	58 2e       	mov	r5, r24
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
    16e0:	84 01       	movw	r16, r8
    16e2:	0f 5f       	subi	r16, 0xFF	; 255
    16e4:	1f 4f       	sbci	r17, 0xFF	; 255
    16e6:	96 01       	movw	r18, r12
    16e8:	2e 0d       	add	r18, r14
    16ea:	3f 1d       	adc	r19, r15
    16ec:	a4 01       	movw	r20, r8
    16ee:	b6 01       	movw	r22, r12
    16f0:	c5 01       	movw	r24, r10
    16f2:	0e 94 98 12 	call	0x2530	; 0x2530 <u8g2_IsIntersection>
    16f6:	88 23       	and	r24, r24
    16f8:	b1 f1       	breq	.+108    	; 0x1766 <u8g2_DrawHXBM+0xbe>
    16fa:	c1 e0       	ldi	r28, 0x01	; 1
    16fc:	2d c0       	rjmp	.+90     	; 0x1758 <u8g2_DrawHXBM+0xb0>
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
  while(len > 0) {
    if ( *b & mask ) {
    16fe:	f3 01       	movw	r30, r6
    1700:	80 81       	ld	r24, Z
    1702:	8c 23       	and	r24, r28
    1704:	69 f0       	breq	.+26     	; 0x1720 <u8g2_DrawHXBM+0x78>
      u8g2->draw_color = color;
    1706:	f5 01       	movw	r30, r10
    1708:	ec 58       	subi	r30, 0x8C	; 140
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	d0 83       	st	Z, r29
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    170e:	00 e0       	ldi	r16, 0x00	; 0
    1710:	21 e0       	ldi	r18, 0x01	; 1
    1712:	30 e0       	ldi	r19, 0x00	; 0
    1714:	a4 01       	movw	r20, r8
    1716:	b6 01       	movw	r22, r12
    1718:	c5 01       	movw	r24, r10
    171a:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
    171e:	10 c0       	rjmp	.+32     	; 0x1740 <u8g2_DrawHXBM+0x98>
    } else if ( u8g2->bitmap_transparency == 0 ) {
    1720:	f5 01       	movw	r30, r10
    1722:	ed 58       	subi	r30, 0x8D	; 141
    1724:	ff 4f       	sbci	r31, 0xFF	; 255
    1726:	80 81       	ld	r24, Z
    1728:	81 11       	cpse	r24, r1
    172a:	0a c0       	rjmp	.+20     	; 0x1740 <u8g2_DrawHXBM+0x98>
      u8g2->draw_color = ncolor;
    172c:	31 96       	adiw	r30, 0x01	; 1
    172e:	50 82       	st	Z, r5
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    1730:	00 e0       	ldi	r16, 0x00	; 0
    1732:	21 e0       	ldi	r18, 0x01	; 1
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	a4 01       	movw	r20, r8
    1738:	b6 01       	movw	r22, r12
    173a:	c5 01       	movw	r24, r10
    173c:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
    }
    x++;
    1740:	ff ef       	ldi	r31, 0xFF	; 255
    1742:	cf 1a       	sub	r12, r31
    1744:	df 0a       	sbc	r13, r31
    mask <<= 1;
    1746:	cc 0f       	add	r28, r28
    if ( mask == 0 )
    1748:	21 f4       	brne	.+8      	; 0x1752 <u8g2_DrawHXBM+0xaa>
    {
      mask = 1;
      b++;
    174a:	8f ef       	ldi	r24, 0xFF	; 255
    174c:	68 1a       	sub	r6, r24
    174e:	78 0a       	sbc	r7, r24
    }
    x++;
    mask <<= 1;
    if ( mask == 0 )
    {
      mask = 1;
    1750:	c1 e0       	ldi	r28, 0x01	; 1
      b++;
    }
    len--;
    1752:	e1 e0       	ldi	r30, 0x01	; 1
    1754:	ee 1a       	sub	r14, r30
    1756:	f1 08       	sbc	r15, r1
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
  while(len > 0) {
    1758:	e1 14       	cp	r14, r1
    175a:	f1 04       	cpc	r15, r1
    175c:	81 f6       	brne	.-96     	; 0x16fe <u8g2_DrawHXBM+0x56>
      mask = 1;
      b++;
    }
    len--;
  }
  u8g2->draw_color = color;
    175e:	f5 01       	movw	r30, r10
    1760:	ec 58       	subi	r30, 0x8C	; 140
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	d0 83       	st	Z, r29
}
    1766:	df 91       	pop	r29
    1768:	cf 91       	pop	r28
    176a:	1f 91       	pop	r17
    176c:	0f 91       	pop	r16
    176e:	ff 90       	pop	r15
    1770:	ef 90       	pop	r14
    1772:	df 90       	pop	r13
    1774:	cf 90       	pop	r12
    1776:	bf 90       	pop	r11
    1778:	af 90       	pop	r10
    177a:	9f 90       	pop	r9
    177c:	8f 90       	pop	r8
    177e:	7f 90       	pop	r7
    1780:	6f 90       	pop	r6
    1782:	5f 90       	pop	r5
    1784:	08 95       	ret

00001786 <u8g2_DrawXBM>:


void u8g2_DrawXBM(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, const uint8_t *bitmap)
{
    1786:	4f 92       	push	r4
    1788:	5f 92       	push	r5
    178a:	6f 92       	push	r6
    178c:	7f 92       	push	r7
    178e:	8f 92       	push	r8
    1790:	9f 92       	push	r9
    1792:	af 92       	push	r10
    1794:	bf 92       	push	r11
    1796:	cf 92       	push	r12
    1798:	df 92       	push	r13
    179a:	ef 92       	push	r14
    179c:	ff 92       	push	r15
    179e:	0f 93       	push	r16
    17a0:	1f 93       	push	r17
    17a2:	cf 93       	push	r28
    17a4:	df 93       	push	r29
    17a6:	2c 01       	movw	r4, r24
    17a8:	3b 01       	movw	r6, r22
    17aa:	ea 01       	movw	r28, r20
    17ac:	59 01       	movw	r10, r18
    17ae:	68 01       	movw	r12, r16
  u8g2_uint_t blen;
  blen = w;
  blen += 7;
    17b0:	49 01       	movw	r8, r18
    17b2:	87 e0       	ldi	r24, 0x07	; 7
    17b4:	88 0e       	add	r8, r24
    17b6:	91 1c       	adc	r9, r1
  blen >>= 3;
    17b8:	96 94       	lsr	r9
    17ba:	87 94       	ror	r8
    17bc:	96 94       	lsr	r9
    17be:	87 94       	ror	r8
    17c0:	96 94       	lsr	r9
    17c2:	87 94       	ror	r8
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    17c4:	8a 01       	movw	r16, r20
    17c6:	0c 0d       	add	r16, r12
    17c8:	1d 1d       	adc	r17, r13
    17ca:	26 0f       	add	r18, r22
    17cc:	37 1f       	adc	r19, r23
    17ce:	c2 01       	movw	r24, r4
    17d0:	0e 94 98 12 	call	0x2530	; 0x2530 <u8g2_IsIntersection>
    17d4:	81 11       	cpse	r24, r1
    17d6:	0e c0       	rjmp	.+28     	; 0x17f4 <u8g2_DrawXBM+0x6e>
    17d8:	10 c0       	rjmp	.+32     	; 0x17fa <u8g2_DrawXBM+0x74>
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
  {
    u8g2_DrawHXBM(u8g2, x, y, w, bitmap);
    17da:	87 01       	movw	r16, r14
    17dc:	95 01       	movw	r18, r10
    17de:	ae 01       	movw	r20, r28
    17e0:	b3 01       	movw	r22, r6
    17e2:	c2 01       	movw	r24, r4
    17e4:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <u8g2_DrawHXBM>
    bitmap += blen;
    17e8:	e8 0c       	add	r14, r8
    17ea:	f9 1c       	adc	r15, r9
    y++;
    17ec:	21 96       	adiw	r28, 0x01	; 1
    h--;
    17ee:	81 e0       	ldi	r24, 0x01	; 1
    17f0:	c8 1a       	sub	r12, r24
    17f2:	d1 08       	sbc	r13, r1
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
    17f4:	c1 14       	cp	r12, r1
    17f6:	d1 04       	cpc	r13, r1
    17f8:	81 f7       	brne	.-32     	; 0x17da <u8g2_DrawXBM+0x54>
    u8g2_DrawHXBM(u8g2, x, y, w, bitmap);
    bitmap += blen;
    y++;
    h--;
  }
}
    17fa:	df 91       	pop	r29
    17fc:	cf 91       	pop	r28
    17fe:	1f 91       	pop	r17
    1800:	0f 91       	pop	r16
    1802:	ff 90       	pop	r15
    1804:	ef 90       	pop	r14
    1806:	df 90       	pop	r13
    1808:	cf 90       	pop	r12
    180a:	bf 90       	pop	r11
    180c:	af 90       	pop	r10
    180e:	9f 90       	pop	r9
    1810:	8f 90       	pop	r8
    1812:	7f 90       	pop	r7
    1814:	6f 90       	pop	r6
    1816:	5f 90       	pop	r5
    1818:	4f 90       	pop	r4
    181a:	08 95       	ret

0000181c <u8g2_send_tile_row>:
  {
    u8g2_ClearBuffer(u8g2);
  }
  u8g2_SetBufferCurrTileRow(u8g2, row);
  return 1;
}
    181c:	0f 93       	push	r16
    181e:	1f 93       	push	r17
    1820:	dc 01       	movw	r26, r24
    1822:	ed 91       	ld	r30, X+
    1824:	fc 91       	ld	r31, X
    1826:	11 97       	sbiw	r26, 0x01	; 1
    1828:	20 89       	ldd	r18, Z+16	; 0x10
    182a:	92 96       	adiw	r26, 0x22	; 34
    182c:	0d 91       	ld	r16, X+
    182e:	1c 91       	ld	r17, X
    1830:	93 97       	sbiw	r26, 0x23	; 35
    1832:	62 9f       	mul	r22, r18
    1834:	b0 01       	movw	r22, r0
    1836:	11 24       	eor	r1, r1
    1838:	66 0f       	add	r22, r22
    183a:	77 1f       	adc	r23, r23
    183c:	66 0f       	add	r22, r22
    183e:	77 1f       	adc	r23, r23
    1840:	66 0f       	add	r22, r22
    1842:	77 1f       	adc	r23, r23
    1844:	06 0f       	add	r16, r22
    1846:	17 1f       	adc	r17, r23
    1848:	60 e0       	ldi	r22, 0x00	; 0
    184a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <u8x8_DrawTile>
    184e:	1f 91       	pop	r17
    1850:	0f 91       	pop	r16
    1852:	08 95       	ret

00001854 <u8g2_send_buffer>:
    1854:	ef 92       	push	r14
    1856:	ff 92       	push	r15
    1858:	0f 93       	push	r16
    185a:	1f 93       	push	r17
    185c:	cf 93       	push	r28
    185e:	df 93       	push	r29
    1860:	8c 01       	movw	r16, r24
    1862:	dc 01       	movw	r26, r24
    1864:	94 96       	adiw	r26, 0x24	; 36
    1866:	fc 90       	ld	r15, X
    1868:	94 97       	sbiw	r26, 0x24	; 36
    186a:	95 96       	adiw	r26, 0x25	; 37
    186c:	dc 91       	ld	r29, X
    186e:	95 97       	sbiw	r26, 0x25	; 37
    1870:	ed 91       	ld	r30, X+
    1872:	fc 91       	ld	r31, X
    1874:	e1 88       	ldd	r14, Z+17	; 0x11
    1876:	c0 e0       	ldi	r28, 0x00	; 0
    1878:	4d 2f       	mov	r20, r29
    187a:	6c 2f       	mov	r22, r28
    187c:	c8 01       	movw	r24, r16
    187e:	0e 94 0e 0c 	call	0x181c	; 0x181c <u8g2_send_tile_row>
    1882:	cf 5f       	subi	r28, 0xFF	; 255
    1884:	df 5f       	subi	r29, 0xFF	; 255
    1886:	cf 15       	cp	r28, r15
    1888:	10 f4       	brcc	.+4      	; 0x188e <u8g2_send_buffer+0x3a>
    188a:	de 15       	cp	r29, r14
    188c:	a8 f3       	brcs	.-22     	; 0x1878 <u8g2_send_buffer+0x24>
    188e:	df 91       	pop	r29
    1890:	cf 91       	pop	r28
    1892:	1f 91       	pop	r17
    1894:	0f 91       	pop	r16
    1896:	ff 90       	pop	r15
    1898:	ef 90       	pop	r14
    189a:	08 95       	ret

0000189c <u8g2_ClearBuffer>:
    189c:	fc 01       	movw	r30, r24
    189e:	a0 81       	ld	r26, Z
    18a0:	b1 81       	ldd	r27, Z+1	; 0x01
    18a2:	50 96       	adiw	r26, 0x10	; 16
    18a4:	9c 91       	ld	r25, X
    18a6:	44 a1       	ldd	r20, Z+36	; 0x24
    18a8:	94 9f       	mul	r25, r20
    18aa:	a0 01       	movw	r20, r0
    18ac:	11 24       	eor	r1, r1
    18ae:	44 0f       	add	r20, r20
    18b0:	55 1f       	adc	r21, r21
    18b2:	44 0f       	add	r20, r20
    18b4:	55 1f       	adc	r21, r21
    18b6:	44 0f       	add	r20, r20
    18b8:	55 1f       	adc	r21, r21
    18ba:	60 e0       	ldi	r22, 0x00	; 0
    18bc:	70 e0       	ldi	r23, 0x00	; 0
    18be:	82 a1       	ldd	r24, Z+34	; 0x22
    18c0:	93 a1       	ldd	r25, Z+35	; 0x23
    18c2:	0e 94 0b 19 	call	0x3216	; 0x3216 <memset>
    18c6:	08 95       	ret

000018c8 <u8g2_SendBuffer>:
    18c8:	cf 93       	push	r28
    18ca:	df 93       	push	r29
    18cc:	ec 01       	movw	r28, r24
    18ce:	0e 94 2a 0c 	call	0x1854	; 0x1854 <u8g2_send_buffer>
    18d2:	ce 01       	movw	r24, r28
    18d4:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <u8x8_RefreshDisplay>
    18d8:	df 91       	pop	r29
    18da:	cf 91       	pop	r28
    18dc:	08 95       	ret

000018de <u8g2_UpdateDisplayArea>:
    - Any display rotation/mirror is ignored
    - Only works with displays, which support U8x8 API
    - Will not send the e-paper refresh message (will probably not work with e-paper devices)
*/
void u8g2_UpdateDisplayArea(u8g2_t *u8g2, uint8_t  tx, uint8_t ty, uint8_t tw, uint8_t th)
{
    18de:	8f 92       	push	r8
    18e0:	9f 92       	push	r9
    18e2:	af 92       	push	r10
    18e4:	bf 92       	push	r11
    18e6:	cf 92       	push	r12
    18e8:	df 92       	push	r13
    18ea:	ef 92       	push	r14
    18ec:	ff 92       	push	r15
    18ee:	0f 93       	push	r16
    18f0:	1f 93       	push	r17
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	6c 01       	movw	r12, r24
    18f8:	b6 2e       	mov	r11, r22
    18fa:	f4 2e       	mov	r15, r20
    18fc:	a2 2e       	mov	r10, r18
    18fe:	e0 2e       	mov	r14, r16
  uint16_t page_size;
  uint8_t *ptr;
  
  /* check, whether we are in full buffer mode */
  if ( u8g2->tile_buf_height != u8g2_GetU8x8(u8g2)->display_info->tile_height )
    1900:	dc 01       	movw	r26, r24
    1902:	94 96       	adiw	r26, 0x24	; 36
    1904:	9c 91       	ld	r25, X
    1906:	94 97       	sbiw	r26, 0x24	; 36
    1908:	ed 91       	ld	r30, X+
    190a:	fc 91       	ld	r31, X
    190c:	11 97       	sbiw	r26, 0x01	; 1
    190e:	81 89       	ldd	r24, Z+17	; 0x11
    1910:	98 13       	cpse	r25, r24
    1912:	27 c0       	rjmp	.+78     	; 0x1962 <u8g2_UpdateDisplayArea+0x84>
    return; /* not in full buffer mode, do nothing */

  page_size = u8g2->pixel_buf_width;  /* 8*u8g2->u8g2_GetU8x8(u8g2)->display_info->tile_width */
    1914:	96 96       	adiw	r26, 0x26	; 38
    1916:	8d 90       	ld	r8, X+
    1918:	9c 90       	ld	r9, X
    191a:	97 97       	sbiw	r26, 0x27	; 39
    
  ptr = u8g2_GetBufferPtr(u8g2);
    191c:	92 96       	adiw	r26, 0x22	; 34
    191e:	2d 91       	ld	r18, X+
    1920:	3c 91       	ld	r19, X
    1922:	93 97       	sbiw	r26, 0x23	; 35
  ptr += tx*8;
    1924:	c6 2f       	mov	r28, r22
    1926:	d0 e0       	ldi	r29, 0x00	; 0
    1928:	cc 0f       	add	r28, r28
    192a:	dd 1f       	adc	r29, r29
    192c:	cc 0f       	add	r28, r28
    192e:	dd 1f       	adc	r29, r29
    1930:	cc 0f       	add	r28, r28
    1932:	dd 1f       	adc	r29, r29
  ptr += page_size*ty;
    1934:	48 9d       	mul	r20, r8
    1936:	c0 01       	movw	r24, r0
    1938:	49 9d       	mul	r20, r9
    193a:	90 0d       	add	r25, r0
    193c:	11 24       	eor	r1, r1
    193e:	c8 0f       	add	r28, r24
    1940:	d9 1f       	adc	r29, r25
    1942:	c2 0f       	add	r28, r18
    1944:	d3 1f       	adc	r29, r19
  
  while( th > 0 )
    1946:	0b c0       	rjmp	.+22     	; 0x195e <u8g2_UpdateDisplayArea+0x80>
  {
    u8x8_DrawTile( u8g2_GetU8x8(u8g2), tx, ty, tw, ptr );
    1948:	8e 01       	movw	r16, r28
    194a:	2a 2d       	mov	r18, r10
    194c:	4f 2d       	mov	r20, r15
    194e:	6b 2d       	mov	r22, r11
    1950:	c6 01       	movw	r24, r12
    1952:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <u8x8_DrawTile>
    ptr += page_size;
    1956:	c8 0d       	add	r28, r8
    1958:	d9 1d       	adc	r29, r9
    ty++;
    195a:	f3 94       	inc	r15
    th--;
    195c:	ea 94       	dec	r14
    
  ptr = u8g2_GetBufferPtr(u8g2);
  ptr += tx*8;
  ptr += page_size*ty;
  
  while( th > 0 )
    195e:	e1 10       	cpse	r14, r1
    1960:	f3 cf       	rjmp	.-26     	; 0x1948 <u8g2_UpdateDisplayArea+0x6a>
    u8x8_DrawTile( u8g2_GetU8x8(u8g2), tx, ty, tw, ptr );
    ptr += page_size;
    ty++;
    th--;
  }  
}
    1962:	df 91       	pop	r29
    1964:	cf 91       	pop	r28
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	ff 90       	pop	r15
    196c:	ef 90       	pop	r14
    196e:	df 90       	pop	r13
    1970:	cf 90       	pop	r12
    1972:	bf 90       	pop	r11
    1974:	af 90       	pop	r10
    1976:	9f 90       	pop	r9
    1978:	8f 90       	pop	r8
    197a:	08 95       	ret

0000197c <u8g2_m_16_8_f>:
  #ifdef U8G2_USE_DYNAMIC_ALLOC
  *page_cnt = 8;
  return 0;
  #else
  static uint8_t buf[1024];
  *page_cnt = 8;
    197c:	28 e0       	ldi	r18, 0x08	; 8
    197e:	fc 01       	movw	r30, r24
    1980:	20 83       	st	Z, r18
  return buf;
  #endif
}
    1982:	8e e6       	ldi	r24, 0x6E	; 110
    1984:	92 e0       	ldi	r25, 0x02	; 2
    1986:	08 95       	ret

00001988 <u8g2_Setup_sh1106_128x64_noname_f>:
  buf = u8g2_m_16_8_2(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
}
/* sh1106 f */
void u8g2_Setup_sh1106_128x64_noname_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    1988:	cf 92       	push	r12
    198a:	df 92       	push	r13
    198c:	ef 92       	push	r14
    198e:	ff 92       	push	r15
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	cf 93       	push	r28
    1996:	df 93       	push	r29
    1998:	1f 92       	push	r1
    199a:	cd b7       	in	r28, 0x3d	; 61
    199c:	de b7       	in	r29, 0x3e	; 62
    199e:	7c 01       	movw	r14, r24
    19a0:	6b 01       	movw	r12, r22
  uint8_t tile_buf_height;
  uint8_t *buf;
  u8g2_SetupDisplay(u8g2, u8x8_d_sh1106_128x64_noname, u8x8_cad_001, byte_cb, gpio_and_delay_cb);
    19a2:	89 01       	movw	r16, r18
    19a4:	9a 01       	movw	r18, r20
    19a6:	49 e7       	ldi	r20, 0x79	; 121
    19a8:	55 e1       	ldi	r21, 0x15	; 21
    19aa:	61 ed       	ldi	r22, 0xD1	; 209
    19ac:	76 e1       	ldi	r23, 0x16	; 22
    19ae:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <u8x8_Setup>
  buf = u8g2_m_16_8_f(&tile_buf_height);
    19b2:	ce 01       	movw	r24, r28
    19b4:	01 96       	adiw	r24, 0x01	; 1
    19b6:	0e 94 be 0c 	call	0x197c	; 0x197c <u8g2_m_16_8_f>
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
    19ba:	86 01       	movw	r16, r12
    19bc:	2d eb       	ldi	r18, 0xBD	; 189
    19be:	32 e1       	ldi	r19, 0x12	; 18
    19c0:	49 81       	ldd	r20, Y+1	; 0x01
    19c2:	bc 01       	movw	r22, r24
    19c4:	c7 01       	movw	r24, r14
    19c6:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <u8g2_SetupBuffer>
}
    19ca:	0f 90       	pop	r0
    19cc:	df 91       	pop	r29
    19ce:	cf 91       	pop	r28
    19d0:	1f 91       	pop	r17
    19d2:	0f 91       	pop	r16
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	df 90       	pop	r13
    19da:	cf 90       	pop	r12
    19dc:	08 95       	ret

000019de <u8g2_font_get_byte>:
  uint8_t w;
  int8_t dx;
  int8_t ox = 0;
  u8g2_GetGlyphHorizontalProperties(u8g2, *s, &w, &ox, &dx);
  return ox;
}
    19de:	86 0f       	add	r24, r22
    19e0:	91 1d       	adc	r25, r1
    19e2:	fc 01       	movw	r30, r24
    19e4:	84 91       	lpm	r24, Z
    19e6:	08 95       	ret

000019e8 <u8g2_font_get_word>:
    19e8:	fc 01       	movw	r30, r24
    19ea:	e6 0f       	add	r30, r22
    19ec:	f1 1d       	adc	r31, r1
    19ee:	84 91       	lpm	r24, Z
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	31 96       	adiw	r30, 0x01	; 1
    19f4:	98 2f       	mov	r25, r24
    19f6:	88 27       	eor	r24, r24
    19f8:	e4 91       	lpm	r30, Z
    19fa:	8e 0f       	add	r24, r30
    19fc:	91 1d       	adc	r25, r1
    19fe:	08 95       	ret

00001a00 <u8g2_font_calc_vref_font>:
    1a00:	80 e0       	ldi	r24, 0x00	; 0
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	08 95       	ret

00001a06 <u8g2_read_font_info>:
    1a06:	0f 93       	push	r16
    1a08:	1f 93       	push	r17
    1a0a:	cf 93       	push	r28
    1a0c:	df 93       	push	r29
    1a0e:	ec 01       	movw	r28, r24
    1a10:	8b 01       	movw	r16, r22
    1a12:	60 e0       	ldi	r22, 0x00	; 0
    1a14:	c8 01       	movw	r24, r16
    1a16:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a1a:	88 83       	st	Y, r24
    1a1c:	61 e0       	ldi	r22, 0x01	; 1
    1a1e:	c8 01       	movw	r24, r16
    1a20:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a24:	89 83       	std	Y+1, r24	; 0x01
    1a26:	62 e0       	ldi	r22, 0x02	; 2
    1a28:	c8 01       	movw	r24, r16
    1a2a:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a2e:	8a 83       	std	Y+2, r24	; 0x02
    1a30:	63 e0       	ldi	r22, 0x03	; 3
    1a32:	c8 01       	movw	r24, r16
    1a34:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a38:	8b 83       	std	Y+3, r24	; 0x03
    1a3a:	64 e0       	ldi	r22, 0x04	; 4
    1a3c:	c8 01       	movw	r24, r16
    1a3e:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a42:	8c 83       	std	Y+4, r24	; 0x04
    1a44:	65 e0       	ldi	r22, 0x05	; 5
    1a46:	c8 01       	movw	r24, r16
    1a48:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a4c:	8d 83       	std	Y+5, r24	; 0x05
    1a4e:	66 e0       	ldi	r22, 0x06	; 6
    1a50:	c8 01       	movw	r24, r16
    1a52:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a56:	8e 83       	std	Y+6, r24	; 0x06
    1a58:	67 e0       	ldi	r22, 0x07	; 7
    1a5a:	c8 01       	movw	r24, r16
    1a5c:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a60:	8f 83       	std	Y+7, r24	; 0x07
    1a62:	68 e0       	ldi	r22, 0x08	; 8
    1a64:	c8 01       	movw	r24, r16
    1a66:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a6a:	88 87       	std	Y+8, r24	; 0x08
    1a6c:	69 e0       	ldi	r22, 0x09	; 9
    1a6e:	c8 01       	movw	r24, r16
    1a70:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a74:	89 87       	std	Y+9, r24	; 0x09
    1a76:	6a e0       	ldi	r22, 0x0A	; 10
    1a78:	c8 01       	movw	r24, r16
    1a7a:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a7e:	8a 87       	std	Y+10, r24	; 0x0a
    1a80:	6b e0       	ldi	r22, 0x0B	; 11
    1a82:	c8 01       	movw	r24, r16
    1a84:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a88:	8b 87       	std	Y+11, r24	; 0x0b
    1a8a:	6c e0       	ldi	r22, 0x0C	; 12
    1a8c:	c8 01       	movw	r24, r16
    1a8e:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a92:	8c 87       	std	Y+12, r24	; 0x0c
    1a94:	6d e0       	ldi	r22, 0x0D	; 13
    1a96:	c8 01       	movw	r24, r16
    1a98:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1a9c:	8d 87       	std	Y+13, r24	; 0x0d
    1a9e:	6e e0       	ldi	r22, 0x0E	; 14
    1aa0:	c8 01       	movw	r24, r16
    1aa2:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1aa6:	8e 87       	std	Y+14, r24	; 0x0e
    1aa8:	6f e0       	ldi	r22, 0x0F	; 15
    1aaa:	c8 01       	movw	r24, r16
    1aac:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1ab0:	8f 87       	std	Y+15, r24	; 0x0f
    1ab2:	60 e1       	ldi	r22, 0x10	; 16
    1ab4:	c8 01       	movw	r24, r16
    1ab6:	0e 94 ef 0c 	call	0x19de	; 0x19de <u8g2_font_get_byte>
    1aba:	88 8b       	std	Y+16, r24	; 0x10
    1abc:	61 e1       	ldi	r22, 0x11	; 17
    1abe:	c8 01       	movw	r24, r16
    1ac0:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <u8g2_font_get_word>
    1ac4:	9a 8b       	std	Y+18, r25	; 0x12
    1ac6:	89 8b       	std	Y+17, r24	; 0x11
    1ac8:	63 e1       	ldi	r22, 0x13	; 19
    1aca:	c8 01       	movw	r24, r16
    1acc:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <u8g2_font_get_word>
    1ad0:	9c 8b       	std	Y+20, r25	; 0x14
    1ad2:	8b 8b       	std	Y+19, r24	; 0x13
    1ad4:	65 e1       	ldi	r22, 0x15	; 21
    1ad6:	c8 01       	movw	r24, r16
    1ad8:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <u8g2_font_get_word>
    1adc:	9e 8b       	std	Y+22, r25	; 0x16
    1ade:	8d 8b       	std	Y+21, r24	; 0x15
    1ae0:	df 91       	pop	r29
    1ae2:	cf 91       	pop	r28
    1ae4:	1f 91       	pop	r17
    1ae6:	0f 91       	pop	r16
    1ae8:	08 95       	ret

00001aea <u8g2_font_decode_get_unsigned_bits>:
    1aea:	dc 01       	movw	r26, r24
    1aec:	1a 96       	adiw	r26, 0x0a	; 10
    1aee:	4c 91       	ld	r20, X
    1af0:	1a 97       	sbiw	r26, 0x0a	; 10
    1af2:	ed 91       	ld	r30, X+
    1af4:	fc 91       	ld	r31, X
    1af6:	11 97       	sbiw	r26, 0x01	; 1
    1af8:	24 91       	lpm	r18, Z
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	04 2e       	mov	r0, r20
    1afe:	02 c0       	rjmp	.+4      	; 0x1b04 <u8g2_font_decode_get_unsigned_bits+0x1a>
    1b00:	35 95       	asr	r19
    1b02:	27 95       	ror	r18
    1b04:	0a 94       	dec	r0
    1b06:	e2 f7       	brpl	.-8      	; 0x1b00 <u8g2_font_decode_get_unsigned_bits+0x16>
    1b08:	82 2f       	mov	r24, r18
    1b0a:	94 2f       	mov	r25, r20
    1b0c:	96 0f       	add	r25, r22
    1b0e:	98 30       	cpi	r25, 0x08	; 8
    1b10:	80 f0       	brcs	.+32     	; 0x1b32 <u8g2_font_decode_get_unsigned_bits+0x48>
    1b12:	88 e0       	ldi	r24, 0x08	; 8
    1b14:	84 1b       	sub	r24, r20
    1b16:	31 96       	adiw	r30, 0x01	; 1
    1b18:	11 96       	adiw	r26, 0x01	; 1
    1b1a:	fc 93       	st	X, r31
    1b1c:	ee 93       	st	-X, r30
    1b1e:	e4 91       	lpm	r30, Z
    1b20:	f0 e0       	ldi	r31, 0x00	; 0
    1b22:	02 c0       	rjmp	.+4      	; 0x1b28 <u8g2_font_decode_get_unsigned_bits+0x3e>
    1b24:	ee 0f       	add	r30, r30
    1b26:	ff 1f       	adc	r31, r31
    1b28:	8a 95       	dec	r24
    1b2a:	e2 f7       	brpl	.-8      	; 0x1b24 <u8g2_font_decode_get_unsigned_bits+0x3a>
    1b2c:	8e 2f       	mov	r24, r30
    1b2e:	82 2b       	or	r24, r18
    1b30:	98 50       	subi	r25, 0x08	; 8
    1b32:	21 e0       	ldi	r18, 0x01	; 1
    1b34:	30 e0       	ldi	r19, 0x00	; 0
    1b36:	02 c0       	rjmp	.+4      	; 0x1b3c <u8g2_font_decode_get_unsigned_bits+0x52>
    1b38:	22 0f       	add	r18, r18
    1b3a:	33 1f       	adc	r19, r19
    1b3c:	6a 95       	dec	r22
    1b3e:	e2 f7       	brpl	.-8      	; 0x1b38 <u8g2_font_decode_get_unsigned_bits+0x4e>
    1b40:	21 50       	subi	r18, 0x01	; 1
    1b42:	1a 96       	adiw	r26, 0x0a	; 10
    1b44:	9c 93       	st	X, r25
    1b46:	82 23       	and	r24, r18
    1b48:	08 95       	ret

00001b4a <u8g2_font_setup_decode>:
    1b4a:	0f 93       	push	r16
    1b4c:	1f 93       	push	r17
    1b4e:	cf 93       	push	r28
    1b50:	df 93       	push	r29
    1b52:	ec 01       	movw	r28, r24
    1b54:	8c 01       	movw	r16, r24
    1b56:	08 5b       	subi	r16, 0xB8	; 184
    1b58:	1f 4f       	sbci	r17, 0xFF	; 255
    1b5a:	f8 01       	movw	r30, r16
    1b5c:	71 83       	std	Z+1, r23	; 0x01
    1b5e:	60 83       	st	Z, r22
    1b60:	12 86       	std	Z+10, r1	; 0x0a
    1b62:	73 96       	adiw	r30, 0x13	; 19
    1b64:	60 81       	ld	r22, Z
    1b66:	c8 01       	movw	r24, r16
    1b68:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1b6c:	f8 01       	movw	r30, r16
    1b6e:	80 87       	std	Z+8, r24	; 0x08
    1b70:	74 96       	adiw	r30, 0x14	; 20
    1b72:	60 81       	ld	r22, Z
    1b74:	c8 01       	movw	r24, r16
    1b76:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1b7a:	f8 01       	movw	r30, r16
    1b7c:	81 87       	std	Z+9, r24	; 0x09
    1b7e:	bc 96       	adiw	r30, 0x2c	; 44
    1b80:	80 81       	ld	r24, Z
    1b82:	f8 01       	movw	r30, r16
    1b84:	84 87       	std	Z+12, r24	; 0x0c
    1b86:	91 e0       	ldi	r25, 0x01	; 1
    1b88:	81 11       	cpse	r24, r1
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	c8 5b       	subi	r28, 0xB8	; 184
    1b8e:	df 4f       	sbci	r29, 0xFF	; 255
    1b90:	9d 87       	std	Y+13, r25	; 0x0d
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	1f 91       	pop	r17
    1b98:	0f 91       	pop	r16
    1b9a:	08 95       	ret

00001b9c <u8g2_font_decode_get_signed_bits>:
    1b9c:	cf 93       	push	r28
    1b9e:	c6 2f       	mov	r28, r22
    1ba0:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1ba4:	c1 50       	subi	r28, 0x01	; 1
    1ba6:	21 e0       	ldi	r18, 0x01	; 1
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	02 c0       	rjmp	.+4      	; 0x1bb0 <u8g2_font_decode_get_signed_bits+0x14>
    1bac:	22 0f       	add	r18, r18
    1bae:	33 1f       	adc	r19, r19
    1bb0:	ca 95       	dec	r28
    1bb2:	e2 f7       	brpl	.-8      	; 0x1bac <u8g2_font_decode_get_signed_bits+0x10>
    1bb4:	82 1b       	sub	r24, r18
    1bb6:	cf 91       	pop	r28
    1bb8:	08 95       	ret

00001bba <u8g2_add_vector_y>:
    1bba:	21 30       	cpi	r18, 0x01	; 1
    1bbc:	49 f0       	breq	.+18     	; 0x1bd0 <u8g2_add_vector_y+0x16>
    1bbe:	18 f0       	brcs	.+6      	; 0x1bc6 <u8g2_add_vector_y+0xc>
    1bc0:	22 30       	cpi	r18, 0x02	; 2
    1bc2:	59 f0       	breq	.+22     	; 0x1bda <u8g2_add_vector_y+0x20>
    1bc4:	0f c0       	rjmp	.+30     	; 0x1be4 <u8g2_add_vector_y+0x2a>
    1bc6:	84 0f       	add	r24, r20
    1bc8:	91 1d       	adc	r25, r1
    1bca:	47 fd       	sbrc	r20, 7
    1bcc:	9a 95       	dec	r25
    1bce:	08 95       	ret
    1bd0:	86 0f       	add	r24, r22
    1bd2:	91 1d       	adc	r25, r1
    1bd4:	67 fd       	sbrc	r22, 7
    1bd6:	9a 95       	dec	r25
    1bd8:	08 95       	ret
    1bda:	84 1b       	sub	r24, r20
    1bdc:	91 09       	sbc	r25, r1
    1bde:	47 fd       	sbrc	r20, 7
    1be0:	93 95       	inc	r25
    1be2:	08 95       	ret
    1be4:	86 1b       	sub	r24, r22
    1be6:	91 09       	sbc	r25, r1
    1be8:	67 fd       	sbrc	r22, 7
    1bea:	93 95       	inc	r25
    1bec:	08 95       	ret

00001bee <u8g2_add_vector_x>:
    1bee:	21 30       	cpi	r18, 0x01	; 1
    1bf0:	49 f0       	breq	.+18     	; 0x1c04 <u8g2_add_vector_x+0x16>
    1bf2:	18 f0       	brcs	.+6      	; 0x1bfa <u8g2_add_vector_x+0xc>
    1bf4:	22 30       	cpi	r18, 0x02	; 2
    1bf6:	59 f0       	breq	.+22     	; 0x1c0e <u8g2_add_vector_x+0x20>
    1bf8:	0f c0       	rjmp	.+30     	; 0x1c18 <u8g2_add_vector_x+0x2a>
    1bfa:	86 0f       	add	r24, r22
    1bfc:	91 1d       	adc	r25, r1
    1bfe:	67 fd       	sbrc	r22, 7
    1c00:	9a 95       	dec	r25
    1c02:	08 95       	ret
    1c04:	84 1b       	sub	r24, r20
    1c06:	91 09       	sbc	r25, r1
    1c08:	47 fd       	sbrc	r20, 7
    1c0a:	93 95       	inc	r25
    1c0c:	08 95       	ret
    1c0e:	86 1b       	sub	r24, r22
    1c10:	91 09       	sbc	r25, r1
    1c12:	67 fd       	sbrc	r22, 7
    1c14:	93 95       	inc	r25
    1c16:	08 95       	ret
    1c18:	84 0f       	add	r24, r20
    1c1a:	91 1d       	adc	r25, r1
    1c1c:	47 fd       	sbrc	r20, 7
    1c1e:	9a 95       	dec	r25
    1c20:	08 95       	ret

00001c22 <u8g2_font_decode_len>:
    1c22:	6f 92       	push	r6
    1c24:	7f 92       	push	r7
    1c26:	8f 92       	push	r8
    1c28:	9f 92       	push	r9
    1c2a:	af 92       	push	r10
    1c2c:	bf 92       	push	r11
    1c2e:	cf 92       	push	r12
    1c30:	df 92       	push	r13
    1c32:	ef 92       	push	r14
    1c34:	ff 92       	push	r15
    1c36:	0f 93       	push	r16
    1c38:	1f 93       	push	r17
    1c3a:	cf 93       	push	r28
    1c3c:	df 93       	push	r29
    1c3e:	7c 01       	movw	r14, r24
    1c40:	16 2f       	mov	r17, r22
    1c42:	74 2e       	mov	r7, r20
    1c44:	fc 01       	movw	r30, r24
    1c46:	e8 5b       	subi	r30, 0xB8	; 184
    1c48:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4a:	96 80       	ldd	r9, Z+6	; 0x06
    1c4c:	d7 81       	ldd	r29, Z+7	; 0x07
    1c4e:	f7 01       	movw	r30, r14
    1c50:	e8 5b       	subi	r30, 0xB8	; 184
    1c52:	ff 4f       	sbci	r31, 0xFF	; 255
    1c54:	c0 85       	ldd	r28, Z+8	; 0x08
    1c56:	c9 19       	sub	r28, r9
    1c58:	1c 17       	cp	r17, r28
    1c5a:	10 f0       	brcs	.+4      	; 0x1c60 <u8g2_font_decode_len+0x3e>
    1c5c:	6c 2e       	mov	r6, r28
    1c5e:	01 c0       	rjmp	.+2      	; 0x1c62 <u8g2_font_decode_len+0x40>
    1c60:	61 2e       	mov	r6, r17
    1c62:	f7 01       	movw	r30, r14
    1c64:	e8 5b       	subi	r30, 0xB8	; 184
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	c4 80       	ldd	r12, Z+4	; 0x04
    1c6a:	d5 80       	ldd	r13, Z+5	; 0x05
    1c6c:	06 85       	ldd	r16, Z+14	; 0x0e
    1c6e:	8d 2e       	mov	r8, r29
    1c70:	20 2f       	mov	r18, r16
    1c72:	4d 2f       	mov	r20, r29
    1c74:	69 2d       	mov	r22, r9
    1c76:	82 81       	ldd	r24, Z+2	; 0x02
    1c78:	93 81       	ldd	r25, Z+3	; 0x03
    1c7a:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <u8g2_add_vector_x>
    1c7e:	5c 01       	movw	r10, r24
    1c80:	20 2f       	mov	r18, r16
    1c82:	4d 2f       	mov	r20, r29
    1c84:	69 2d       	mov	r22, r9
    1c86:	c6 01       	movw	r24, r12
    1c88:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <u8g2_add_vector_y>
    1c8c:	77 20       	and	r7, r7
    1c8e:	71 f0       	breq	.+28     	; 0x1cac <u8g2_font_decode_len+0x8a>
    1c90:	f7 01       	movw	r30, r14
    1c92:	e8 5b       	subi	r30, 0xB8	; 184
    1c94:	ff 4f       	sbci	r31, 0xFF	; 255
    1c96:	24 85       	ldd	r18, Z+12	; 0x0c
    1c98:	bc 96       	adiw	r30, 0x2c	; 44
    1c9a:	20 83       	st	Z, r18
    1c9c:	26 2d       	mov	r18, r6
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	ac 01       	movw	r20, r24
    1ca2:	b5 01       	movw	r22, r10
    1ca4:	c7 01       	movw	r24, r14
    1ca6:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
    1caa:	10 c0       	rjmp	.+32     	; 0x1ccc <u8g2_font_decode_len+0xaa>
    1cac:	f7 01       	movw	r30, r14
    1cae:	e8 5b       	subi	r30, 0xB8	; 184
    1cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb2:	23 85       	ldd	r18, Z+11	; 0x0b
    1cb4:	21 11       	cpse	r18, r1
    1cb6:	0a c0       	rjmp	.+20     	; 0x1ccc <u8g2_font_decode_len+0xaa>
    1cb8:	25 85       	ldd	r18, Z+13	; 0x0d
    1cba:	bc 96       	adiw	r30, 0x2c	; 44
    1cbc:	20 83       	st	Z, r18
    1cbe:	26 2d       	mov	r18, r6
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	ac 01       	movw	r20, r24
    1cc4:	b5 01       	movw	r22, r10
    1cc6:	c7 01       	movw	r24, r14
    1cc8:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
    1ccc:	1c 17       	cp	r17, r28
    1cce:	20 f0       	brcs	.+8      	; 0x1cd8 <u8g2_font_decode_len+0xb6>
    1cd0:	1c 1b       	sub	r17, r28
    1cd2:	df 5f       	subi	r29, 0xFF	; 255
    1cd4:	91 2c       	mov	r9, r1
    1cd6:	bb cf       	rjmp	.-138    	; 0x1c4e <u8g2_font_decode_len+0x2c>
    1cd8:	61 2f       	mov	r22, r17
    1cda:	69 0d       	add	r22, r9
    1cdc:	f7 01       	movw	r30, r14
    1cde:	e8 5b       	subi	r30, 0xB8	; 184
    1ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce2:	66 83       	std	Z+6, r22	; 0x06
    1ce4:	87 82       	std	Z+7, r8	; 0x07
    1ce6:	df 91       	pop	r29
    1ce8:	cf 91       	pop	r28
    1cea:	1f 91       	pop	r17
    1cec:	0f 91       	pop	r16
    1cee:	ff 90       	pop	r15
    1cf0:	ef 90       	pop	r14
    1cf2:	df 90       	pop	r13
    1cf4:	cf 90       	pop	r12
    1cf6:	bf 90       	pop	r11
    1cf8:	af 90       	pop	r10
    1cfa:	9f 90       	pop	r9
    1cfc:	8f 90       	pop	r8
    1cfe:	7f 90       	pop	r7
    1d00:	6f 90       	pop	r6
    1d02:	08 95       	ret

00001d04 <u8g2_font_decode_glyph>:
    1d04:	6f 92       	push	r6
    1d06:	7f 92       	push	r7
    1d08:	8f 92       	push	r8
    1d0a:	9f 92       	push	r9
    1d0c:	af 92       	push	r10
    1d0e:	bf 92       	push	r11
    1d10:	cf 92       	push	r12
    1d12:	df 92       	push	r13
    1d14:	ef 92       	push	r14
    1d16:	ff 92       	push	r15
    1d18:	0f 93       	push	r16
    1d1a:	1f 93       	push	r17
    1d1c:	cf 93       	push	r28
    1d1e:	df 93       	push	r29
    1d20:	ec 01       	movw	r28, r24
    1d22:	7c 01       	movw	r14, r24
    1d24:	88 e4       	ldi	r24, 0x48	; 72
    1d26:	e8 0e       	add	r14, r24
    1d28:	f1 1c       	adc	r15, r1
    1d2a:	ce 01       	movw	r24, r28
    1d2c:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <u8g2_font_setup_decode>
    1d30:	fe 01       	movw	r30, r28
    1d32:	ef 5a       	subi	r30, 0xAF	; 175
    1d34:	ff 4f       	sbci	r31, 0xFF	; 255
    1d36:	c0 80       	ld	r12, Z
    1d38:	3c 96       	adiw	r30, 0x0c	; 12
    1d3a:	60 81       	ld	r22, Z
    1d3c:	c7 01       	movw	r24, r14
    1d3e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    1d42:	78 2e       	mov	r7, r24
    1d44:	fe 01       	movw	r30, r28
    1d46:	e2 5a       	subi	r30, 0xA2	; 162
    1d48:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4a:	60 81       	ld	r22, Z
    1d4c:	c7 01       	movw	r24, r14
    1d4e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    1d52:	18 2f       	mov	r17, r24
    1d54:	fe 01       	movw	r30, r28
    1d56:	e1 5a       	subi	r30, 0xA1	; 161
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	60 81       	ld	r22, Z
    1d5c:	c7 01       	movw	r24, r14
    1d5e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    1d62:	d8 2e       	mov	r13, r24
    1d64:	f7 01       	movw	r30, r14
    1d66:	60 84       	ldd	r6, Z+8	; 0x08
    1d68:	16 14       	cp	r1, r6
    1d6a:	0c f0       	brlt	.+2      	; 0x1d6e <u8g2_font_decode_glyph+0x6a>
    1d6c:	9b c0       	rjmp	.+310    	; 0x1ea4 <u8g2_font_decode_glyph+0x1a0>
    1d6e:	06 85       	ldd	r16, Z+14	; 0x0e
    1d70:	1c 0d       	add	r17, r12
    1d72:	11 95       	neg	r17
    1d74:	20 2f       	mov	r18, r16
    1d76:	41 2f       	mov	r20, r17
    1d78:	67 2d       	mov	r22, r7
    1d7a:	82 81       	ldd	r24, Z+2	; 0x02
    1d7c:	93 81       	ldd	r25, Z+3	; 0x03
    1d7e:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <u8g2_add_vector_x>
    1d82:	5c 01       	movw	r10, r24
    1d84:	f7 01       	movw	r30, r14
    1d86:	93 83       	std	Z+3, r25	; 0x03
    1d88:	82 83       	std	Z+2, r24	; 0x02
    1d8a:	20 2f       	mov	r18, r16
    1d8c:	41 2f       	mov	r20, r17
    1d8e:	67 2d       	mov	r22, r7
    1d90:	84 81       	ldd	r24, Z+4	; 0x04
    1d92:	95 81       	ldd	r25, Z+5	; 0x05
    1d94:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <u8g2_add_vector_y>
    1d98:	f7 01       	movw	r30, r14
    1d9a:	95 83       	std	Z+5, r25	; 0x05
    1d9c:	84 83       	std	Z+4, r24	; 0x04
    1d9e:	01 30       	cpi	r16, 0x01	; 1
    1da0:	89 f0       	breq	.+34     	; 0x1dc4 <u8g2_font_decode_glyph+0xc0>
    1da2:	28 f0       	brcs	.+10     	; 0x1dae <u8g2_font_decode_glyph+0xaa>
    1da4:	02 30       	cpi	r16, 0x02	; 2
    1da6:	01 f1       	breq	.+64     	; 0x1de8 <u8g2_font_decode_glyph+0xe4>
    1da8:	03 30       	cpi	r16, 0x03	; 3
    1daa:	a1 f1       	breq	.+104    	; 0x1e14 <u8g2_font_decode_glyph+0x110>
    1dac:	43 c0       	rjmp	.+134    	; 0x1e34 <u8g2_font_decode_glyph+0x130>
    1dae:	95 01       	movw	r18, r10
    1db0:	26 0d       	add	r18, r6
    1db2:	31 1d       	adc	r19, r1
    1db4:	67 fc       	sbrc	r6, 7
    1db6:	3a 95       	dec	r19
    1db8:	8c 01       	movw	r16, r24
    1dba:	0c 0d       	add	r16, r12
    1dbc:	11 1d       	adc	r17, r1
    1dbe:	c7 fc       	sbrc	r12, 7
    1dc0:	1a 95       	dec	r17
    1dc2:	3a c0       	rjmp	.+116    	; 0x1e38 <u8g2_font_decode_glyph+0x134>
    1dc4:	a5 01       	movw	r20, r10
    1dc6:	4c 19       	sub	r20, r12
    1dc8:	51 09       	sbc	r21, r1
    1dca:	c7 fc       	sbrc	r12, 7
    1dcc:	53 95       	inc	r21
    1dce:	95 01       	movw	r18, r10
    1dd0:	2f 5f       	subi	r18, 0xFF	; 255
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	8c 01       	movw	r16, r24
    1dd6:	06 0d       	add	r16, r6
    1dd8:	11 1d       	adc	r17, r1
    1dda:	67 fc       	sbrc	r6, 7
    1ddc:	1a 95       	dec	r17
    1dde:	ba 01       	movw	r22, r20
    1de0:	6f 5f       	subi	r22, 0xFF	; 255
    1de2:	7f 4f       	sbci	r23, 0xFF	; 255
    1de4:	5b 01       	movw	r10, r22
    1de6:	28 c0       	rjmp	.+80     	; 0x1e38 <u8g2_font_decode_glyph+0x134>
    1de8:	a5 01       	movw	r20, r10
    1dea:	46 19       	sub	r20, r6
    1dec:	51 09       	sbc	r21, r1
    1dee:	67 fc       	sbrc	r6, 7
    1df0:	53 95       	inc	r21
    1df2:	95 01       	movw	r18, r10
    1df4:	2f 5f       	subi	r18, 0xFF	; 255
    1df6:	3f 4f       	sbci	r19, 0xFF	; 255
    1df8:	bc 01       	movw	r22, r24
    1dfa:	6c 19       	sub	r22, r12
    1dfc:	71 09       	sbc	r23, r1
    1dfe:	c7 fc       	sbrc	r12, 7
    1e00:	73 95       	inc	r23
    1e02:	8c 01       	movw	r16, r24
    1e04:	0f 5f       	subi	r16, 0xFF	; 255
    1e06:	1f 4f       	sbci	r17, 0xFF	; 255
    1e08:	cb 01       	movw	r24, r22
    1e0a:	01 96       	adiw	r24, 0x01	; 1
    1e0c:	fa 01       	movw	r30, r20
    1e0e:	31 96       	adiw	r30, 0x01	; 1
    1e10:	5f 01       	movw	r10, r30
    1e12:	12 c0       	rjmp	.+36     	; 0x1e38 <u8g2_font_decode_glyph+0x134>
    1e14:	95 01       	movw	r18, r10
    1e16:	2c 0d       	add	r18, r12
    1e18:	31 1d       	adc	r19, r1
    1e1a:	c7 fc       	sbrc	r12, 7
    1e1c:	3a 95       	dec	r19
    1e1e:	ac 01       	movw	r20, r24
    1e20:	46 19       	sub	r20, r6
    1e22:	51 09       	sbc	r21, r1
    1e24:	67 fc       	sbrc	r6, 7
    1e26:	53 95       	inc	r21
    1e28:	8c 01       	movw	r16, r24
    1e2a:	0f 5f       	subi	r16, 0xFF	; 255
    1e2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e2e:	ca 01       	movw	r24, r20
    1e30:	01 96       	adiw	r24, 0x01	; 1
    1e32:	02 c0       	rjmp	.+4      	; 0x1e38 <u8g2_font_decode_glyph+0x134>
    1e34:	8c 01       	movw	r16, r24
    1e36:	95 01       	movw	r18, r10
    1e38:	ac 01       	movw	r20, r24
    1e3a:	b5 01       	movw	r22, r10
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	0e 94 98 12 	call	0x2530	; 0x2530 <u8g2_IsIntersection>
    1e42:	88 23       	and	r24, r24
    1e44:	79 f1       	breq	.+94     	; 0x1ea4 <u8g2_font_decode_glyph+0x1a0>
    1e46:	fe 01       	movw	r30, r28
    1e48:	e8 5b       	subi	r30, 0xB8	; 184
    1e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4c:	16 82       	std	Z+6, r1	; 0x06
    1e4e:	17 82       	std	Z+7, r1	; 0x07
    1e50:	fe 01       	movw	r30, r28
    1e52:	e7 5a       	subi	r30, 0xA7	; 167
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	60 81       	ld	r22, Z
    1e58:	c7 01       	movw	r24, r14
    1e5a:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1e5e:	08 2f       	mov	r16, r24
    1e60:	fe 01       	movw	r30, r28
    1e62:	e6 5a       	subi	r30, 0xA6	; 166
    1e64:	ff 4f       	sbci	r31, 0xFF	; 255
    1e66:	60 81       	ld	r22, Z
    1e68:	c7 01       	movw	r24, r14
    1e6a:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1e6e:	18 2f       	mov	r17, r24
    1e70:	40 e0       	ldi	r20, 0x00	; 0
    1e72:	60 2f       	mov	r22, r16
    1e74:	ce 01       	movw	r24, r28
    1e76:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <u8g2_font_decode_len>
    1e7a:	41 e0       	ldi	r20, 0x01	; 1
    1e7c:	61 2f       	mov	r22, r17
    1e7e:	ce 01       	movw	r24, r28
    1e80:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <u8g2_font_decode_len>
    1e84:	61 e0       	ldi	r22, 0x01	; 1
    1e86:	c7 01       	movw	r24, r14
    1e88:	0e 94 75 0d 	call	0x1aea	; 0x1aea <u8g2_font_decode_get_unsigned_bits>
    1e8c:	81 11       	cpse	r24, r1
    1e8e:	f0 cf       	rjmp	.-32     	; 0x1e70 <u8g2_font_decode_glyph+0x16c>
    1e90:	fe 01       	movw	r30, r28
    1e92:	e8 5b       	subi	r30, 0xB8	; 184
    1e94:	ff 4f       	sbci	r31, 0xFF	; 255
    1e96:	87 81       	ldd	r24, Z+7	; 0x07
    1e98:	8c 15       	cp	r24, r12
    1e9a:	d4 f2       	brlt	.-76     	; 0x1e50 <u8g2_font_decode_glyph+0x14c>
    1e9c:	84 85       	ldd	r24, Z+12	; 0x0c
    1e9e:	cc 58       	subi	r28, 0x8C	; 140
    1ea0:	df 4f       	sbci	r29, 0xFF	; 255
    1ea2:	88 83       	st	Y, r24
    1ea4:	8d 2d       	mov	r24, r13
    1ea6:	df 91       	pop	r29
    1ea8:	cf 91       	pop	r28
    1eaa:	1f 91       	pop	r17
    1eac:	0f 91       	pop	r16
    1eae:	ff 90       	pop	r15
    1eb0:	ef 90       	pop	r14
    1eb2:	df 90       	pop	r13
    1eb4:	cf 90       	pop	r12
    1eb6:	bf 90       	pop	r11
    1eb8:	af 90       	pop	r10
    1eba:	9f 90       	pop	r9
    1ebc:	8f 90       	pop	r8
    1ebe:	7f 90       	pop	r7
    1ec0:	6f 90       	pop	r6
    1ec2:	08 95       	ret

00001ec4 <u8g2_font_get_glyph_data>:
    1ec4:	ef 92       	push	r14
    1ec6:	ff 92       	push	r15
    1ec8:	0f 93       	push	r16
    1eca:	1f 93       	push	r17
    1ecc:	cf 93       	push	r28
    1ece:	df 93       	push	r29
    1ed0:	fc 01       	movw	r30, r24
    1ed2:	ec 5b       	subi	r30, 0xBC	; 188
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	c0 81       	ld	r28, Z
    1ed8:	d1 81       	ldd	r29, Z+1	; 0x01
    1eda:	67 96       	adiw	r28, 0x17	; 23
    1edc:	6f 3f       	cpi	r22, 0xFF	; 255
    1ede:	71 05       	cpc	r23, r1
    1ee0:	09 f0       	breq	.+2      	; 0x1ee4 <u8g2_font_get_glyph_data+0x20>
    1ee2:	38 f5       	brcc	.+78     	; 0x1f32 <u8g2_font_get_glyph_data+0x6e>
    1ee4:	61 36       	cpi	r22, 0x61	; 97
    1ee6:	71 05       	cpc	r23, r1
    1ee8:	30 f0       	brcs	.+12     	; 0x1ef6 <u8g2_font_get_glyph_data+0x32>
    1eea:	b6 96       	adiw	r30, 0x26	; 38
    1eec:	80 81       	ld	r24, Z
    1eee:	91 81       	ldd	r25, Z+1	; 0x01
    1ef0:	c8 0f       	add	r28, r24
    1ef2:	d9 1f       	adc	r29, r25
    1ef4:	0a c0       	rjmp	.+20     	; 0x1f0a <u8g2_font_get_glyph_data+0x46>
    1ef6:	61 34       	cpi	r22, 0x41	; 65
    1ef8:	71 05       	cpc	r23, r1
    1efa:	38 f0       	brcs	.+14     	; 0x1f0a <u8g2_font_get_glyph_data+0x46>
    1efc:	fc 01       	movw	r30, r24
    1efe:	e8 59       	subi	r30, 0x98	; 152
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	91 81       	ldd	r25, Z+1	; 0x01
    1f06:	c8 0f       	add	r28, r24
    1f08:	d9 1f       	adc	r29, r25
    1f0a:	ce 01       	movw	r24, r28
    1f0c:	01 96       	adiw	r24, 0x01	; 1
    1f0e:	fc 01       	movw	r30, r24
    1f10:	24 91       	lpm	r18, Z
    1f12:	22 23       	and	r18, r18
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <u8g2_font_get_glyph_data+0x54>
    1f16:	3c c0       	rjmp	.+120    	; 0x1f90 <u8g2_font_get_glyph_data+0xcc>
    1f18:	fe 01       	movw	r30, r28
    1f1a:	24 91       	lpm	r18, Z
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	62 17       	cp	r22, r18
    1f20:	73 07       	cpc	r23, r19
    1f22:	11 f4       	brne	.+4      	; 0x1f28 <u8g2_font_get_glyph_data+0x64>
    1f24:	01 96       	adiw	r24, 0x01	; 1
    1f26:	39 c0       	rjmp	.+114    	; 0x1f9a <u8g2_font_get_glyph_data+0xd6>
    1f28:	fc 01       	movw	r30, r24
    1f2a:	84 91       	lpm	r24, Z
    1f2c:	c8 0f       	add	r28, r24
    1f2e:	d1 1d       	adc	r29, r1
    1f30:	ec cf       	rjmp	.-40     	; 0x1f0a <u8g2_font_get_glyph_data+0x46>
    1f32:	8b 01       	movw	r16, r22
    1f34:	fc 01       	movw	r30, r24
    1f36:	e4 59       	subi	r30, 0x94	; 148
    1f38:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3a:	80 81       	ld	r24, Z
    1f3c:	91 81       	ldd	r25, Z+1	; 0x01
    1f3e:	c8 0f       	add	r28, r24
    1f40:	d9 1f       	adc	r29, r25
    1f42:	7e 01       	movw	r14, r28
    1f44:	60 e0       	ldi	r22, 0x00	; 0
    1f46:	c7 01       	movw	r24, r14
    1f48:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <u8g2_font_get_word>
    1f4c:	c8 0f       	add	r28, r24
    1f4e:	d9 1f       	adc	r29, r25
    1f50:	62 e0       	ldi	r22, 0x02	; 2
    1f52:	c7 01       	movw	r24, r14
    1f54:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <u8g2_font_get_word>
    1f58:	f4 e0       	ldi	r31, 0x04	; 4
    1f5a:	ef 0e       	add	r14, r31
    1f5c:	f1 1c       	adc	r15, r1
    1f5e:	80 17       	cp	r24, r16
    1f60:	91 07       	cpc	r25, r17
    1f62:	80 f3       	brcs	.-32     	; 0x1f44 <u8g2_font_get_glyph_data+0x80>
    1f64:	fe 01       	movw	r30, r28
    1f66:	84 91       	lpm	r24, Z
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	98 2f       	mov	r25, r24
    1f6c:	88 27       	eor	r24, r24
    1f6e:	31 96       	adiw	r30, 0x01	; 1
    1f70:	e4 91       	lpm	r30, Z
    1f72:	8e 2b       	or	r24, r30
    1f74:	00 97       	sbiw	r24, 0x00	; 0
    1f76:	79 f0       	breq	.+30     	; 0x1f96 <u8g2_font_get_glyph_data+0xd2>
    1f78:	08 17       	cp	r16, r24
    1f7a:	19 07       	cpc	r17, r25
    1f7c:	19 f4       	brne	.+6      	; 0x1f84 <u8g2_font_get_glyph_data+0xc0>
    1f7e:	ce 01       	movw	r24, r28
    1f80:	03 96       	adiw	r24, 0x03	; 3
    1f82:	0b c0       	rjmp	.+22     	; 0x1f9a <u8g2_font_get_glyph_data+0xd6>
    1f84:	fe 01       	movw	r30, r28
    1f86:	32 96       	adiw	r30, 0x02	; 2
    1f88:	e4 91       	lpm	r30, Z
    1f8a:	ce 0f       	add	r28, r30
    1f8c:	d1 1d       	adc	r29, r1
    1f8e:	ea cf       	rjmp	.-44     	; 0x1f64 <u8g2_font_get_glyph_data+0xa0>
    1f90:	80 e0       	ldi	r24, 0x00	; 0
    1f92:	90 e0       	ldi	r25, 0x00	; 0
    1f94:	02 c0       	rjmp	.+4      	; 0x1f9a <u8g2_font_get_glyph_data+0xd6>
    1f96:	80 e0       	ldi	r24, 0x00	; 0
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	df 91       	pop	r29
    1f9c:	cf 91       	pop	r28
    1f9e:	1f 91       	pop	r17
    1fa0:	0f 91       	pop	r16
    1fa2:	ff 90       	pop	r15
    1fa4:	ef 90       	pop	r14
    1fa6:	08 95       	ret

00001fa8 <u8g2_font_draw_glyph>:
    1fa8:	cf 93       	push	r28
    1faa:	df 93       	push	r29
    1fac:	ec 01       	movw	r28, r24
    1fae:	fc 01       	movw	r30, r24
    1fb0:	e6 5b       	subi	r30, 0xB6	; 182
    1fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb4:	71 83       	std	Z+1, r23	; 0x01
    1fb6:	60 83       	st	Z, r22
    1fb8:	32 96       	adiw	r30, 0x02	; 2
    1fba:	51 83       	std	Z+1, r21	; 0x01
    1fbc:	40 83       	st	Z, r20
    1fbe:	b9 01       	movw	r22, r18
    1fc0:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <u8g2_font_get_glyph_data>
    1fc4:	00 97       	sbiw	r24, 0x00	; 0
    1fc6:	41 f0       	breq	.+16     	; 0x1fd8 <u8g2_font_draw_glyph+0x30>
    1fc8:	bc 01       	movw	r22, r24
    1fca:	ce 01       	movw	r24, r28
    1fcc:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <u8g2_font_decode_glyph>
    1fd0:	08 2e       	mov	r0, r24
    1fd2:	00 0c       	add	r0, r0
    1fd4:	99 0b       	sbc	r25, r25
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <u8g2_font_draw_glyph+0x34>
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	df 91       	pop	r29
    1fde:	cf 91       	pop	r28
    1fe0:	08 95       	ret

00001fe2 <u8g2_GetGlyphWidth>:
    1fe2:	0f 93       	push	r16
    1fe4:	1f 93       	push	r17
    1fe6:	cf 93       	push	r28
    1fe8:	df 93       	push	r29
    1fea:	ec 01       	movw	r28, r24
    1fec:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <u8g2_font_get_glyph_data>
    1ff0:	00 97       	sbiw	r24, 0x00	; 0
    1ff2:	f1 f0       	breq	.+60     	; 0x2030 <u8g2_GetGlyphWidth+0x4e>
    1ff4:	bc 01       	movw	r22, r24
    1ff6:	ce 01       	movw	r24, r28
    1ff8:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <u8g2_font_setup_decode>
    1ffc:	8e 01       	movw	r16, r28
    1ffe:	08 5b       	subi	r16, 0xB8	; 184
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	fe 01       	movw	r30, r28
    2004:	e3 5a       	subi	r30, 0xA3	; 163
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	60 81       	ld	r22, Z
    200a:	c8 01       	movw	r24, r16
    200c:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    2010:	fe 01       	movw	r30, r28
    2012:	ee 58       	subi	r30, 0x8E	; 142
    2014:	ff 4f       	sbci	r31, 0xFF	; 255
    2016:	80 83       	st	Z, r24
    2018:	74 97       	sbiw	r30, 0x14	; 20
    201a:	60 81       	ld	r22, Z
    201c:	c8 01       	movw	r24, r16
    201e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    2022:	c1 5a       	subi	r28, 0xA1	; 161
    2024:	df 4f       	sbci	r29, 0xFF	; 255
    2026:	68 81       	ld	r22, Y
    2028:	c8 01       	movw	r24, r16
    202a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <u8g2_font_decode_get_signed_bits>
    202e:	01 c0       	rjmp	.+2      	; 0x2032 <u8g2_GetGlyphWidth+0x50>
    2030:	80 e0       	ldi	r24, 0x00	; 0
    2032:	df 91       	pop	r29
    2034:	cf 91       	pop	r28
    2036:	1f 91       	pop	r17
    2038:	0f 91       	pop	r16
    203a:	08 95       	ret

0000203c <u8g2_string_width>:
    203c:	bf 92       	push	r11
    203e:	cf 92       	push	r12
    2040:	df 92       	push	r13
    2042:	ef 92       	push	r14
    2044:	ff 92       	push	r15
    2046:	0f 93       	push	r16
    2048:	1f 93       	push	r17
    204a:	cf 93       	push	r28
    204c:	df 93       	push	r29
    204e:	ec 01       	movw	r28, r24
    2050:	8b 01       	movw	r16, r22
    2052:	fc 01       	movw	r30, r24
    2054:	e0 5b       	subi	r30, 0xB0	; 176
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	10 82       	st	Z, r1
    205a:	0e 94 2e 14 	call	0x285c	; 0x285c <u8x8_utf8_init>
    205e:	0f 2e       	mov	r0, r31
    2060:	f0 ec       	ldi	r31, 0xC0	; 192
    2062:	bf 2e       	mov	r11, r31
    2064:	f0 2d       	mov	r31, r0
    2066:	e1 2c       	mov	r14, r1
    2068:	f1 2c       	mov	r15, r1
    206a:	c1 2c       	mov	r12, r1
    206c:	d1 2c       	mov	r13, r1
    206e:	ea 81       	ldd	r30, Y+2	; 0x02
    2070:	fb 81       	ldd	r31, Y+3	; 0x03
    2072:	d8 01       	movw	r26, r16
    2074:	6c 91       	ld	r22, X
    2076:	ce 01       	movw	r24, r28
    2078:	09 95       	icall
    207a:	8f 3f       	cpi	r24, 0xFF	; 255
    207c:	bf ef       	ldi	r27, 0xFF	; 255
    207e:	9b 07       	cpc	r25, r27
    2080:	b9 f0       	breq	.+46     	; 0x20b0 <u8g2_string_width+0x74>
    2082:	0f 5f       	subi	r16, 0xFF	; 255
    2084:	1f 4f       	sbci	r17, 0xFF	; 255
    2086:	8e 3f       	cpi	r24, 0xFE	; 254
    2088:	2f ef       	ldi	r18, 0xFF	; 255
    208a:	92 07       	cpc	r25, r18
    208c:	81 f3       	breq	.-32     	; 0x206e <u8g2_string_width+0x32>
    208e:	bc 01       	movw	r22, r24
    2090:	ce 01       	movw	r24, r28
    2092:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <u8g2_GetGlyphWidth>
    2096:	e8 2e       	mov	r14, r24
    2098:	88 0f       	add	r24, r24
    209a:	ff 08       	sbc	r15, r15
    209c:	80 ec       	ldi	r24, 0xC0	; 192
    209e:	b8 12       	cpse	r11, r24
    20a0:	04 c0       	rjmp	.+8      	; 0x20aa <u8g2_string_width+0x6e>
    20a2:	fe 01       	movw	r30, r28
    20a4:	ee 58       	subi	r30, 0x8E	; 142
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	b0 80       	ld	r11, Z
    20aa:	ce 0c       	add	r12, r14
    20ac:	df 1c       	adc	r13, r15
    20ae:	df cf       	rjmp	.-66     	; 0x206e <u8g2_string_width+0x32>
    20b0:	fe 01       	movw	r30, r28
    20b2:	e0 5b       	subi	r30, 0xB0	; 176
    20b4:	ff 4f       	sbci	r31, 0xFF	; 255
    20b6:	80 81       	ld	r24, Z
    20b8:	88 23       	and	r24, r24
    20ba:	99 f0       	breq	.+38     	; 0x20e2 <u8g2_string_width+0xa6>
    20bc:	ce 18       	sub	r12, r14
    20be:	df 08       	sbc	r13, r15
    20c0:	c8 0e       	add	r12, r24
    20c2:	d1 1c       	adc	r13, r1
    20c4:	87 fd       	sbrc	r24, 7
    20c6:	da 94       	dec	r13
    20c8:	ce 58       	subi	r28, 0x8E	; 142
    20ca:	df 4f       	sbci	r29, 0xFF	; 255
    20cc:	88 81       	ld	r24, Y
    20ce:	c8 0e       	add	r12, r24
    20d0:	d1 1c       	adc	r13, r1
    20d2:	87 fd       	sbrc	r24, 7
    20d4:	da 94       	dec	r13
    20d6:	1b 14       	cp	r1, r11
    20d8:	24 f4       	brge	.+8      	; 0x20e2 <u8g2_string_width+0xa6>
    20da:	cb 0c       	add	r12, r11
    20dc:	d1 1c       	adc	r13, r1
    20de:	b7 fc       	sbrc	r11, 7
    20e0:	da 94       	dec	r13
    20e2:	c6 01       	movw	r24, r12
    20e4:	df 91       	pop	r29
    20e6:	cf 91       	pop	r28
    20e8:	1f 91       	pop	r17
    20ea:	0f 91       	pop	r16
    20ec:	ff 90       	pop	r15
    20ee:	ef 90       	pop	r14
    20f0:	df 90       	pop	r13
    20f2:	cf 90       	pop	r12
    20f4:	bf 90       	pop	r11
    20f6:	08 95       	ret

000020f8 <u8g2_SetFontMode>:
    20f8:	8d 5a       	subi	r24, 0xAD	; 173
    20fa:	9f 4f       	sbci	r25, 0xFF	; 255
    20fc:	fc 01       	movw	r30, r24
    20fe:	60 83       	st	Z, r22
    2100:	08 95       	ret

00002102 <u8g2_DrawGlyph>:
    2102:	cf 92       	push	r12
    2104:	df 92       	push	r13
    2106:	ef 92       	push	r14
    2108:	ff 92       	push	r15
    210a:	0f 93       	push	r16
    210c:	1f 93       	push	r17
    210e:	cf 93       	push	r28
    2110:	df 93       	push	r29
    2112:	ec 01       	movw	r28, r24
    2114:	8b 01       	movw	r16, r22
    2116:	7a 01       	movw	r14, r20
    2118:	69 01       	movw	r12, r18
    211a:	fc 01       	movw	r30, r24
    211c:	ea 5a       	subi	r30, 0xAA	; 170
    211e:	ff 4f       	sbci	r31, 0xFF	; 255
    2120:	80 81       	ld	r24, Z
    2122:	81 30       	cpi	r24, 0x01	; 1
    2124:	89 f0       	breq	.+34     	; 0x2148 <u8g2_DrawGlyph+0x46>
    2126:	28 f0       	brcs	.+10     	; 0x2132 <u8g2_DrawGlyph+0x30>
    2128:	82 30       	cpi	r24, 0x02	; 2
    212a:	c9 f0       	breq	.+50     	; 0x215e <u8g2_DrawGlyph+0x5c>
    212c:	83 30       	cpi	r24, 0x03	; 3
    212e:	11 f1       	breq	.+68     	; 0x2174 <u8g2_DrawGlyph+0x72>
    2130:	2b c0       	rjmp	.+86     	; 0x2188 <u8g2_DrawGlyph+0x86>
    2132:	fe 01       	movw	r30, r28
    2134:	ea 5b       	subi	r30, 0xBA	; 186
    2136:	ff 4f       	sbci	r31, 0xFF	; 255
    2138:	01 90       	ld	r0, Z+
    213a:	f0 81       	ld	r31, Z
    213c:	e0 2d       	mov	r30, r0
    213e:	ce 01       	movw	r24, r28
    2140:	09 95       	icall
    2142:	e8 0e       	add	r14, r24
    2144:	f9 1e       	adc	r15, r25
    2146:	20 c0       	rjmp	.+64     	; 0x2188 <u8g2_DrawGlyph+0x86>
    2148:	fe 01       	movw	r30, r28
    214a:	ea 5b       	subi	r30, 0xBA	; 186
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	01 90       	ld	r0, Z+
    2150:	f0 81       	ld	r31, Z
    2152:	e0 2d       	mov	r30, r0
    2154:	ce 01       	movw	r24, r28
    2156:	09 95       	icall
    2158:	08 1b       	sub	r16, r24
    215a:	19 0b       	sbc	r17, r25
    215c:	15 c0       	rjmp	.+42     	; 0x2188 <u8g2_DrawGlyph+0x86>
    215e:	fe 01       	movw	r30, r28
    2160:	ea 5b       	subi	r30, 0xBA	; 186
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	01 90       	ld	r0, Z+
    2166:	f0 81       	ld	r31, Z
    2168:	e0 2d       	mov	r30, r0
    216a:	ce 01       	movw	r24, r28
    216c:	09 95       	icall
    216e:	e8 1a       	sub	r14, r24
    2170:	f9 0a       	sbc	r15, r25
    2172:	0a c0       	rjmp	.+20     	; 0x2188 <u8g2_DrawGlyph+0x86>
    2174:	fe 01       	movw	r30, r28
    2176:	ea 5b       	subi	r30, 0xBA	; 186
    2178:	ff 4f       	sbci	r31, 0xFF	; 255
    217a:	01 90       	ld	r0, Z+
    217c:	f0 81       	ld	r31, Z
    217e:	e0 2d       	mov	r30, r0
    2180:	ce 01       	movw	r24, r28
    2182:	09 95       	icall
    2184:	08 0f       	add	r16, r24
    2186:	19 1f       	adc	r17, r25
    2188:	96 01       	movw	r18, r12
    218a:	a7 01       	movw	r20, r14
    218c:	b8 01       	movw	r22, r16
    218e:	ce 01       	movw	r24, r28
    2190:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <u8g2_font_draw_glyph>
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	1f 91       	pop	r17
    219a:	0f 91       	pop	r16
    219c:	ff 90       	pop	r15
    219e:	ef 90       	pop	r14
    21a0:	df 90       	pop	r13
    21a2:	cf 90       	pop	r12
    21a4:	08 95       	ret

000021a6 <u8g2_draw_string>:
    21a6:	af 92       	push	r10
    21a8:	bf 92       	push	r11
    21aa:	cf 92       	push	r12
    21ac:	df 92       	push	r13
    21ae:	ef 92       	push	r14
    21b0:	ff 92       	push	r15
    21b2:	0f 93       	push	r16
    21b4:	1f 93       	push	r17
    21b6:	cf 93       	push	r28
    21b8:	df 93       	push	r29
    21ba:	ec 01       	movw	r28, r24
    21bc:	5b 01       	movw	r10, r22
    21be:	6a 01       	movw	r12, r20
    21c0:	89 01       	movw	r16, r18
    21c2:	0e 94 2e 14 	call	0x285c	; 0x285c <u8x8_utf8_init>
    21c6:	e1 2c       	mov	r14, r1
    21c8:	f1 2c       	mov	r15, r1
    21ca:	ea 81       	ldd	r30, Y+2	; 0x02
    21cc:	fb 81       	ldd	r31, Y+3	; 0x03
    21ce:	d8 01       	movw	r26, r16
    21d0:	6c 91       	ld	r22, X
    21d2:	ce 01       	movw	r24, r28
    21d4:	09 95       	icall
    21d6:	8f 3f       	cpi	r24, 0xFF	; 255
    21d8:	bf ef       	ldi	r27, 0xFF	; 255
    21da:	9b 07       	cpc	r25, r27
    21dc:	39 f1       	breq	.+78     	; 0x222c <u8g2_draw_string+0x86>
    21de:	0f 5f       	subi	r16, 0xFF	; 255
    21e0:	1f 4f       	sbci	r17, 0xFF	; 255
    21e2:	8e 3f       	cpi	r24, 0xFE	; 254
    21e4:	2f ef       	ldi	r18, 0xFF	; 255
    21e6:	92 07       	cpc	r25, r18
    21e8:	81 f3       	breq	.-32     	; 0x21ca <u8g2_draw_string+0x24>
    21ea:	9c 01       	movw	r18, r24
    21ec:	a6 01       	movw	r20, r12
    21ee:	b5 01       	movw	r22, r10
    21f0:	ce 01       	movw	r24, r28
    21f2:	0e 94 81 10 	call	0x2102	; 0x2102 <u8g2_DrawGlyph>
    21f6:	9c 01       	movw	r18, r24
    21f8:	fe 01       	movw	r30, r28
    21fa:	ea 5a       	subi	r30, 0xAA	; 170
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	90 81       	ld	r25, Z
    2200:	91 30       	cpi	r25, 0x01	; 1
    2202:	49 f0       	breq	.+18     	; 0x2216 <u8g2_draw_string+0x70>
    2204:	28 f0       	brcs	.+10     	; 0x2210 <u8g2_draw_string+0x6a>
    2206:	92 30       	cpi	r25, 0x02	; 2
    2208:	49 f0       	breq	.+18     	; 0x221c <u8g2_draw_string+0x76>
    220a:	93 30       	cpi	r25, 0x03	; 3
    220c:	51 f0       	breq	.+20     	; 0x2222 <u8g2_draw_string+0x7c>
    220e:	0b c0       	rjmp	.+22     	; 0x2226 <u8g2_draw_string+0x80>
    2210:	a2 0e       	add	r10, r18
    2212:	b3 1e       	adc	r11, r19
    2214:	08 c0       	rjmp	.+16     	; 0x2226 <u8g2_draw_string+0x80>
    2216:	c2 0e       	add	r12, r18
    2218:	d3 1e       	adc	r13, r19
    221a:	05 c0       	rjmp	.+10     	; 0x2226 <u8g2_draw_string+0x80>
    221c:	a2 1a       	sub	r10, r18
    221e:	b3 0a       	sbc	r11, r19
    2220:	02 c0       	rjmp	.+4      	; 0x2226 <u8g2_draw_string+0x80>
    2222:	c2 1a       	sub	r12, r18
    2224:	d3 0a       	sbc	r13, r19
    2226:	e2 0e       	add	r14, r18
    2228:	f3 1e       	adc	r15, r19
    222a:	cf cf       	rjmp	.-98     	; 0x21ca <u8g2_draw_string+0x24>
    222c:	c7 01       	movw	r24, r14
    222e:	df 91       	pop	r29
    2230:	cf 91       	pop	r28
    2232:	1f 91       	pop	r17
    2234:	0f 91       	pop	r16
    2236:	ff 90       	pop	r15
    2238:	ef 90       	pop	r14
    223a:	df 90       	pop	r13
    223c:	cf 90       	pop	r12
    223e:	bf 90       	pop	r11
    2240:	af 90       	pop	r10
    2242:	08 95       	ret

00002244 <u8g2_DrawStr>:
    2244:	e1 e2       	ldi	r30, 0x21	; 33
    2246:	f4 e1       	ldi	r31, 0x14	; 20
    2248:	dc 01       	movw	r26, r24
    224a:	13 96       	adiw	r26, 0x03	; 3
    224c:	fc 93       	st	X, r31
    224e:	ee 93       	st	-X, r30
    2250:	12 97       	sbiw	r26, 0x02	; 2
    2252:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <u8g2_draw_string>
    2256:	08 95       	ret

00002258 <u8g2_UpdateRefHeight>:
    2258:	fc 01       	movw	r30, r24
    225a:	ec 5b       	subi	r30, 0xBC	; 188
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	20 81       	ld	r18, Z
    2260:	31 81       	ldd	r19, Z+1	; 0x01
    2262:	23 2b       	or	r18, r19
    2264:	e1 f1       	breq	.+120    	; 0x22de <u8g2_UpdateRefHeight+0x86>
    2266:	b0 96       	adiw	r30, 0x20	; 32
    2268:	20 81       	ld	r18, Z
    226a:	3c 96       	adiw	r30, 0x0c	; 12
    226c:	20 83       	st	Z, r18
    226e:	3b 97       	sbiw	r30, 0x0b	; 11
    2270:	40 81       	ld	r20, Z
    2272:	3c 96       	adiw	r30, 0x0c	; 12
    2274:	40 83       	st	Z, r20
    2276:	32 97       	sbiw	r30, 0x02	; 2
    2278:	30 81       	ld	r19, Z
    227a:	33 23       	and	r19, r19
    227c:	81 f1       	breq	.+96     	; 0x22de <u8g2_UpdateRefHeight+0x86>
    227e:	31 30       	cpi	r19, 0x01	; 1
    2280:	79 f4       	brne	.+30     	; 0x22a0 <u8g2_UpdateRefHeight+0x48>
    2282:	39 97       	sbiw	r30, 0x09	; 9
    2284:	30 81       	ld	r19, Z
    2286:	23 17       	cp	r18, r19
    2288:	14 f4       	brge	.+4      	; 0x228e <u8g2_UpdateRefHeight+0x36>
    228a:	3a 96       	adiw	r30, 0x0a	; 10
    228c:	30 83       	st	Z, r19
    228e:	fc 01       	movw	r30, r24
    2290:	e9 59       	subi	r30, 0x99	; 153
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	20 81       	ld	r18, Z
    2296:	24 17       	cp	r18, r20
    2298:	14 f5       	brge	.+68     	; 0x22de <u8g2_UpdateRefHeight+0x86>
    229a:	3a 96       	adiw	r30, 0x0a	; 10
    229c:	20 83       	st	Z, r18
    229e:	08 95       	ret
    22a0:	02 2e       	mov	r0, r18
    22a2:	00 0c       	add	r0, r0
    22a4:	33 0b       	sbc	r19, r19
    22a6:	fc 01       	movw	r30, r24
    22a8:	ef 59       	subi	r30, 0x9F	; 159
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	e0 81       	ld	r30, Z
    22ae:	dc 01       	movw	r26, r24
    22b0:	ad 59       	subi	r26, 0x9D	; 157
    22b2:	bf 4f       	sbci	r27, 0xFF	; 255
    22b4:	5c 91       	ld	r21, X
    22b6:	65 2f       	mov	r22, r21
    22b8:	05 2e       	mov	r0, r21
    22ba:	00 0c       	add	r0, r0
    22bc:	77 0b       	sbc	r23, r23
    22be:	6e 0f       	add	r22, r30
    22c0:	71 1d       	adc	r23, r1
    22c2:	e7 fd       	sbrc	r30, 7
    22c4:	7a 95       	dec	r23
    22c6:	26 17       	cp	r18, r22
    22c8:	37 07       	cpc	r19, r23
    22ca:	1c f4       	brge	.+6      	; 0x22d2 <u8g2_UpdateRefHeight+0x7a>
    22cc:	1d 96       	adiw	r26, 0x0d	; 13
    22ce:	e5 0f       	add	r30, r21
    22d0:	ec 93       	st	X, r30
    22d2:	54 17       	cp	r21, r20
    22d4:	24 f4       	brge	.+8      	; 0x22de <u8g2_UpdateRefHeight+0x86>
    22d6:	fc 01       	movw	r30, r24
    22d8:	ef 58       	subi	r30, 0x8F	; 143
    22da:	ff 4f       	sbci	r31, 0xFF	; 255
    22dc:	50 83       	st	Z, r21
    22de:	08 95       	ret

000022e0 <u8g2_SetFontPosBaseline>:
    22e0:	8a 5b       	subi	r24, 0xBA	; 186
    22e2:	9f 4f       	sbci	r25, 0xFF	; 255
    22e4:	20 e0       	ldi	r18, 0x00	; 0
    22e6:	3d e0       	ldi	r19, 0x0D	; 13
    22e8:	fc 01       	movw	r30, r24
    22ea:	31 83       	std	Z+1, r19	; 0x01
    22ec:	20 83       	st	Z, r18
    22ee:	08 95       	ret

000022f0 <u8g2_SetFont>:
    22f0:	cf 93       	push	r28
    22f2:	df 93       	push	r29
    22f4:	fc 01       	movw	r30, r24
    22f6:	ec 5b       	subi	r30, 0xBC	; 188
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	20 81       	ld	r18, Z
    22fc:	31 81       	ldd	r19, Z+1	; 0x01
    22fe:	26 17       	cp	r18, r22
    2300:	37 07       	cpc	r19, r23
    2302:	51 f0       	breq	.+20     	; 0x2318 <u8g2_SetFont+0x28>
    2304:	ec 01       	movw	r28, r24
    2306:	71 83       	std	Z+1, r23	; 0x01
    2308:	60 83       	st	Z, r22
    230a:	89 5a       	subi	r24, 0xA9	; 169
    230c:	9f 4f       	sbci	r25, 0xFF	; 255
    230e:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <u8g2_read_font_info>
    2312:	ce 01       	movw	r24, r28
    2314:	0e 94 2c 11 	call	0x2258	; 0x2258 <u8g2_UpdateRefHeight>
    2318:	df 91       	pop	r29
    231a:	cf 91       	pop	r28
    231c:	08 95       	ret

0000231e <u8g2_GetStrWidth>:



u8g2_uint_t u8g2_GetStrWidth(u8g2_t *u8g2, const char *s)
{
  u8g2->u8x8.next_cb = u8x8_ascii_next;
    231e:	21 e2       	ldi	r18, 0x21	; 33
    2320:	34 e1       	ldi	r19, 0x14	; 20
    2322:	fc 01       	movw	r30, r24
    2324:	33 83       	std	Z+3, r19	; 0x03
    2326:	22 83       	std	Z+2, r18	; 0x02
  return u8g2_string_width(u8g2, s);
    2328:	0e 94 1e 10 	call	0x203c	; 0x203c <u8g2_string_width>
}
    232c:	08 95       	ret

0000232e <u8g2_clip_intersection2>:
  will return 0 if there is no intersection and if a > b

*/

static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
    232e:	cf 93       	push	r28
    2330:	df 93       	push	r29
  u8g2_uint_t a = *ap;
    2332:	ec 01       	movw	r28, r24
    2334:	a8 81       	ld	r26, Y
    2336:	b9 81       	ldd	r27, Y+1	; 0x01
  u8g2_uint_t b;
  b  = a;
  b += *len;
    2338:	eb 01       	movw	r28, r22
    233a:	e8 81       	ld	r30, Y
    233c:	f9 81       	ldd	r31, Y+1	; 0x01
    233e:	ea 0f       	add	r30, r26
    2340:	fb 1f       	adc	r31, r27
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    2342:	ea 17       	cp	r30, r26
    2344:	fb 07       	cpc	r31, r27
    2346:	38 f4       	brcc	.+14     	; 0x2356 <u8g2_clip_intersection2+0x28>
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    2348:	a2 17       	cp	r26, r18
    234a:	b3 07       	cpc	r27, r19
    234c:	18 f4       	brcc	.+6      	; 0x2354 <u8g2_clip_intersection2+0x26>
    {
      b = d;
      b--;
    234e:	f9 01       	movw	r30, r18
    2350:	31 97       	sbiw	r30, 0x01	; 1
    2352:	01 c0       	rjmp	.+2      	; 0x2356 <u8g2_clip_intersection2+0x28>
    }
    else
    {
      a = c;
    2354:	da 01       	movw	r26, r20
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    2356:	a2 17       	cp	r26, r18
    2358:	b3 07       	cpc	r27, r19
    235a:	a8 f4       	brcc	.+42     	; 0x2386 <u8g2_clip_intersection2+0x58>
    return 0;
  if ( b <= c )
    235c:	4e 17       	cp	r20, r30
    235e:	5f 07       	cpc	r21, r31
    2360:	a0 f4       	brcc	.+40     	; 0x238a <u8g2_clip_intersection2+0x5c>
    return 0;
  if ( a < c )		
    2362:	a4 17       	cp	r26, r20
    2364:	b5 07       	cpc	r27, r21
    2366:	08 f0       	brcs	.+2      	; 0x236a <u8g2_clip_intersection2+0x3c>
    2368:	ad 01       	movw	r20, r26
    a = c;
  if ( b > d )
    236a:	2e 17       	cp	r18, r30
    236c:	3f 07       	cpc	r19, r31
    236e:	08 f0       	brcs	.+2      	; 0x2372 <u8g2_clip_intersection2+0x44>
    2370:	9f 01       	movw	r18, r30
    b = d;
  
  *ap = a;
    2372:	fc 01       	movw	r30, r24
    2374:	51 83       	std	Z+1, r21	; 0x01
    2376:	40 83       	st	Z, r20
  b -= a;
    2378:	24 1b       	sub	r18, r20
    237a:	35 0b       	sbc	r19, r21
  *len = b;
    237c:	eb 01       	movw	r28, r22
    237e:	39 83       	std	Y+1, r19	; 0x01
    2380:	28 83       	st	Y, r18
  return 1;
    2382:	81 e0       	ldi	r24, 0x01	; 1
    2384:	03 c0       	rjmp	.+6      	; 0x238c <u8g2_clip_intersection2+0x5e>
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    return 0;
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	01 c0       	rjmp	.+2      	; 0x238c <u8g2_clip_intersection2+0x5e>
  if ( b <= c )
    return 0;
    238a:	80 e0       	ldi	r24, 0x00	; 0
  
  *ap = a;
  b -= a;
  *len = b;
  return 1;
}
    238c:	df 91       	pop	r29
    238e:	cf 91       	pop	r28
    2390:	08 95       	ret

00002392 <u8g2_draw_hv_line_2dir>:
  This function first adjusts the y position to the local buffer. Then it
  will clip the line and call u8g2_draw_low_level_hv_line()

*/
void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    2392:	0f 93       	push	r16

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
    2394:	dc 01       	movw	r26, r24
    2396:	9a 96       	adiw	r26, 0x2a	; 42
    2398:	ed 91       	ld	r30, X+
    239a:	fc 91       	ld	r31, X
    239c:	9b 97       	sbiw	r26, 0x2b	; 43
    239e:	4e 1b       	sub	r20, r30
    23a0:	5f 0b       	sbc	r21, r31
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
    23a2:	5e 96       	adiw	r26, 0x1e	; 30
    23a4:	ed 91       	ld	r30, X+
    23a6:	fc 91       	ld	r31, X
    23a8:	5f 97       	sbiw	r26, 0x1f	; 31
    23aa:	09 95       	icall
}
    23ac:	0f 91       	pop	r16
    23ae:	08 95       	ret

000023b0 <u8g2_DrawHVLine>:
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    23b0:	ef 92       	push	r14
    23b2:	ff 92       	push	r15
    23b4:	0f 93       	push	r16
    23b6:	1f 93       	push	r17
    23b8:	cf 93       	push	r28
    23ba:	df 93       	push	r29
    23bc:	00 d0       	rcall	.+0      	; 0x23be <u8g2_DrawHVLine+0xe>
    23be:	00 d0       	rcall	.+0      	; 0x23c0 <u8g2_DrawHVLine+0x10>
    23c0:	00 d0       	rcall	.+0      	; 0x23c2 <u8g2_DrawHVLine+0x12>
    23c2:	cd b7       	in	r28, 0x3d	; 61
    23c4:	de b7       	in	r29, 0x3e	; 62
    23c6:	7a 83       	std	Y+2, r23	; 0x02
    23c8:	69 83       	std	Y+1, r22	; 0x01
    23ca:	5c 83       	std	Y+4, r21	; 0x04
    23cc:	4b 83       	std	Y+3, r20	; 0x03
    23ce:	3e 83       	std	Y+6, r19	; 0x06
    23d0:	2d 83       	std	Y+5, r18	; 0x05
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
    23d2:	fc 01       	movw	r30, r24
    23d4:	e2 59       	subi	r30, 0x92	; 146
    23d6:	ff 4f       	sbci	r31, 0xFF	; 255
    23d8:	20 81       	ld	r18, Z
    23da:	22 23       	and	r18, r18
    23dc:	09 f4       	brne	.+2      	; 0x23e0 <u8g2_DrawHVLine+0x30>
    23de:	74 c0       	rjmp	.+232    	; 0x24c8 <u8g2_DrawHVLine+0x118>
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
    23e0:	2d 81       	ldd	r18, Y+5	; 0x05
    23e2:	3e 81       	ldd	r19, Y+6	; 0x06
    23e4:	21 15       	cp	r18, r1
    23e6:	31 05       	cpc	r19, r1
    23e8:	09 f4       	brne	.+2      	; 0x23ec <u8g2_DrawHVLine+0x3c>
    23ea:	6e c0       	rjmp	.+220    	; 0x24c8 <u8g2_DrawHVLine+0x118>
    {
    
      /* convert to two directions */    
      if ( len > 1 )
    23ec:	22 30       	cpi	r18, 0x02	; 2
    23ee:	31 05       	cpc	r19, r1
    23f0:	b0 f0       	brcs	.+44     	; 0x241e <u8g2_DrawHVLine+0x6e>
      {
	if ( dir == 2 )
    23f2:	02 30       	cpi	r16, 0x02	; 2
    23f4:	41 f4       	brne	.+16     	; 0x2406 <u8g2_DrawHVLine+0x56>
	{
	  x -= len;
    23f6:	62 1b       	sub	r22, r18
    23f8:	73 0b       	sbc	r23, r19
    23fa:	9b 01       	movw	r18, r22
	  x++;
    23fc:	2f 5f       	subi	r18, 0xFF	; 255
    23fe:	3f 4f       	sbci	r19, 0xFF	; 255
    2400:	3a 83       	std	Y+2, r19	; 0x02
    2402:	29 83       	std	Y+1, r18	; 0x01
    2404:	0c c0       	rjmp	.+24     	; 0x241e <u8g2_DrawHVLine+0x6e>
	}
	else if ( dir == 3 )
    2406:	03 30       	cpi	r16, 0x03	; 3
    2408:	51 f4       	brne	.+20     	; 0x241e <u8g2_DrawHVLine+0x6e>
	{
	  y -= len;
    240a:	4b 81       	ldd	r20, Y+3	; 0x03
    240c:	5c 81       	ldd	r21, Y+4	; 0x04
    240e:	da 01       	movw	r26, r20
    2410:	a2 1b       	sub	r26, r18
    2412:	b3 0b       	sbc	r27, r19
    2414:	9d 01       	movw	r18, r26
	  y++;
    2416:	2f 5f       	subi	r18, 0xFF	; 255
    2418:	3f 4f       	sbci	r19, 0xFF	; 255
    241a:	3c 83       	std	Y+4, r19	; 0x04
    241c:	2b 83       	std	Y+3, r18	; 0x03
    241e:	7c 01       	movw	r14, r24
	}
      }
      dir &= 1;  
      
      /* clip against the user window */
      if ( dir == 0 )
    2420:	10 2f       	mov	r17, r16
    2422:	11 70       	andi	r17, 0x01	; 1
    2424:	00 fd       	sbrc	r16, 0
    2426:	1d c0       	rjmp	.+58     	; 0x2462 <u8g2_DrawHVLine+0xb2>
      {
	if ( y < u8g2->user_y0 )
    2428:	fc 01       	movw	r30, r24
    242a:	20 ad       	ldd	r18, Z+56	; 0x38
    242c:	31 ad       	ldd	r19, Z+57	; 0x39
    242e:	8b 81       	ldd	r24, Y+3	; 0x03
    2430:	9c 81       	ldd	r25, Y+4	; 0x04
    2432:	82 17       	cp	r24, r18
    2434:	93 07       	cpc	r25, r19
    2436:	08 f4       	brcc	.+2      	; 0x243a <u8g2_DrawHVLine+0x8a>
    2438:	47 c0       	rjmp	.+142    	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
	if ( y >= u8g2->user_y1 )
    243a:	22 ad       	ldd	r18, Z+58	; 0x3a
    243c:	33 ad       	ldd	r19, Z+59	; 0x3b
    243e:	82 17       	cp	r24, r18
    2440:	93 07       	cpc	r25, r19
    2442:	08 f0       	brcs	.+2      	; 0x2446 <u8g2_DrawHVLine+0x96>
    2444:	41 c0       	rjmp	.+130    	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    2446:	26 a9       	ldd	r18, Z+54	; 0x36
    2448:	37 a9       	ldd	r19, Z+55	; 0x37
    244a:	44 a9       	ldd	r20, Z+52	; 0x34
    244c:	55 a9       	ldd	r21, Z+53	; 0x35
    244e:	be 01       	movw	r22, r28
    2450:	6b 5f       	subi	r22, 0xFB	; 251
    2452:	7f 4f       	sbci	r23, 0xFF	; 255
    2454:	ce 01       	movw	r24, r28
    2456:	01 96       	adiw	r24, 0x01	; 1
    2458:	0e 94 97 11 	call	0x232e	; 0x232e <u8g2_clip_intersection2>
    245c:	81 11       	cpse	r24, r1
    245e:	23 c0       	rjmp	.+70     	; 0x24a6 <u8g2_DrawHVLine+0xf6>
    2460:	33 c0       	rjmp	.+102    	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
      }
      else
      {
	if ( x < u8g2->user_x0 )
    2462:	dc 01       	movw	r26, r24
    2464:	d4 96       	adiw	r26, 0x34	; 52
    2466:	2d 91       	ld	r18, X+
    2468:	3c 91       	ld	r19, X
    246a:	d5 97       	sbiw	r26, 0x35	; 53
    246c:	89 81       	ldd	r24, Y+1	; 0x01
    246e:	9a 81       	ldd	r25, Y+2	; 0x02
    2470:	82 17       	cp	r24, r18
    2472:	93 07       	cpc	r25, r19
    2474:	48 f1       	brcs	.+82     	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
	if ( x >= u8g2->user_x1 )
    2476:	d6 96       	adiw	r26, 0x36	; 54
    2478:	2d 91       	ld	r18, X+
    247a:	3c 91       	ld	r19, X
    247c:	d7 97       	sbiw	r26, 0x37	; 55
    247e:	82 17       	cp	r24, r18
    2480:	93 07       	cpc	r25, r19
    2482:	10 f5       	brcc	.+68     	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    2484:	da 96       	adiw	r26, 0x3a	; 58
    2486:	2d 91       	ld	r18, X+
    2488:	3c 91       	ld	r19, X
    248a:	db 97       	sbiw	r26, 0x3b	; 59
    248c:	d8 96       	adiw	r26, 0x38	; 56
    248e:	4d 91       	ld	r20, X+
    2490:	5c 91       	ld	r21, X
    2492:	d9 97       	sbiw	r26, 0x39	; 57
    2494:	be 01       	movw	r22, r28
    2496:	6b 5f       	subi	r22, 0xFB	; 251
    2498:	7f 4f       	sbci	r23, 0xFF	; 255
    249a:	ce 01       	movw	r24, r28
    249c:	03 96       	adiw	r24, 0x03	; 3
    249e:	0e 94 97 11 	call	0x232e	; 0x232e <u8g2_clip_intersection2>
    24a2:	88 23       	and	r24, r24
    24a4:	89 f0       	breq	.+34     	; 0x24c8 <u8g2_DrawHVLine+0x118>
	  return;
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    24a6:	d7 01       	movw	r26, r14
    24a8:	90 96       	adiw	r26, 0x20	; 32
    24aa:	ed 91       	ld	r30, X+
    24ac:	fc 91       	ld	r31, X
    24ae:	91 97       	sbiw	r26, 0x21	; 33
    24b0:	04 80       	ldd	r0, Z+4	; 0x04
    24b2:	f5 81       	ldd	r31, Z+5	; 0x05
    24b4:	e0 2d       	mov	r30, r0
    24b6:	2d 81       	ldd	r18, Y+5	; 0x05
    24b8:	3e 81       	ldd	r19, Y+6	; 0x06
    24ba:	4b 81       	ldd	r20, Y+3	; 0x03
    24bc:	5c 81       	ldd	r21, Y+4	; 0x04
    24be:	69 81       	ldd	r22, Y+1	; 0x01
    24c0:	7a 81       	ldd	r23, Y+2	; 0x02
    24c2:	01 2f       	mov	r16, r17
    24c4:	c7 01       	movw	r24, r14
    24c6:	09 95       	icall
    }
}
    24c8:	26 96       	adiw	r28, 0x06	; 6
    24ca:	0f b6       	in	r0, 0x3f	; 63
    24cc:	f8 94       	cli
    24ce:	de bf       	out	0x3e, r29	; 62
    24d0:	0f be       	out	0x3f, r0	; 63
    24d2:	cd bf       	out	0x3d, r28	; 61
    24d4:	df 91       	pop	r29
    24d6:	cf 91       	pop	r28
    24d8:	1f 91       	pop	r17
    24da:	0f 91       	pop	r16
    24dc:	ff 90       	pop	r15
    24de:	ef 90       	pop	r14
    24e0:	08 95       	ret

000024e2 <u8g2_DrawHLine>:

void u8g2_DrawHLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
{
    24e2:	0f 93       	push	r16
// #ifdef U8G2_WITH_INTERSECTION
//   if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
//     return;
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 0);
    24e4:	00 e0       	ldi	r16, 0x00	; 0
    24e6:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
}
    24ea:	0f 91       	pop	r16
    24ec:	08 95       	ret

000024ee <u8g2_DrawVLine>:

void u8g2_DrawVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len)
{
    24ee:	0f 93       	push	r16
// #ifdef U8G2_WITH_INTERSECTION
//   if ( u8g2_IsIntersection(u8g2, x, y, x+1, y+len) == 0 ) 
//     return;
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 1);
    24f0:	01 e0       	ldi	r16, 0x01	; 1
    24f2:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <u8g2_DrawHVLine>
}
    24f6:	0f 91       	pop	r16
    24f8:	08 95       	ret

000024fa <u8g2_is_intersection_decision_tree>:
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    24fa:	46 17       	cp	r20, r22
    24fc:	57 07       	cpc	r21, r23
    24fe:	40 f4       	brcc	.+16     	; 0x2510 <u8g2_is_intersection_decision_tree+0x16>
  {
    if ( v1 > a0 )	// v1 >= a0
    2500:	82 17       	cp	r24, r18
    2502:	93 07       	cpc	r25, r19
    2504:	68 f0       	brcs	.+26     	; 0x2520 <u8g2_is_intersection_decision_tree+0x26>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    2506:	24 17       	cp	r18, r20
    2508:	35 07       	cpc	r19, r21
    250a:	60 f4       	brcc	.+24     	; 0x2524 <u8g2_is_intersection_decision_tree+0x2a>
      {
	return 1;
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	08 95       	ret
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    2510:	82 17       	cp	r24, r18
    2512:	93 07       	cpc	r25, r19
    2514:	48 f4       	brcc	.+18     	; 0x2528 <u8g2_is_intersection_decision_tree+0x2e>
    {
      if ( v0 > v1 )	// v0 > v1
    2516:	24 17       	cp	r18, r20
    2518:	35 07       	cpc	r19, r21
    251a:	40 f4       	brcc	.+16     	; 0x252c <u8g2_is_intersection_decision_tree+0x32>
      {
	return 1;
    251c:	81 e0       	ldi	r24, 0x01	; 1
    251e:	08 95       	ret
{
  if ( v0 < a1 )		// v0 <= a1
  {
    if ( v1 > a0 )	// v1 >= a0
    {
      return 1;
    2520:	81 e0       	ldi	r24, 0x01	; 1
    2522:	08 95       	ret
      {
	return 1;
      }
      else
      {
	return 0;
    2524:	80 e0       	ldi	r24, 0x00	; 0
    2526:	08 95       	ret
	return 0;
      }
    }
    else
    {
      return 0;
    2528:	80 e0       	ldi	r24, 0x00	; 0
    252a:	08 95       	ret
      {
	return 1;
      }
      else
      {
	return 0;
    252c:	80 e0       	ldi	r24, 0x00	; 0
    else
    {
      return 0;
    }
  }
}
    252e:	08 95       	ret

00002530 <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    2530:	cf 92       	push	r12
    2532:	df 92       	push	r13
    2534:	ef 92       	push	r14
    2536:	ff 92       	push	r15
    2538:	0f 93       	push	r16
    253a:	1f 93       	push	r17
    253c:	cf 93       	push	r28
    253e:	df 93       	push	r29
    2540:	ec 01       	movw	r28, r24
    2542:	7b 01       	movw	r14, r22
    2544:	69 01       	movw	r12, r18
    2546:	98 01       	movw	r18, r16
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    2548:	6a ad       	ldd	r22, Y+58	; 0x3a
    254a:	7b ad       	ldd	r23, Y+59	; 0x3b
    254c:	88 ad       	ldd	r24, Y+56	; 0x38
    254e:	99 ad       	ldd	r25, Y+57	; 0x39
    2550:	0e 94 7d 12 	call	0x24fa	; 0x24fa <u8g2_is_intersection_decision_tree>
    2554:	88 23       	and	r24, r24
    2556:	41 f0       	breq	.+16     	; 0x2568 <u8g2_IsIntersection+0x38>
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    2558:	6e a9       	ldd	r22, Y+54	; 0x36
    255a:	7f a9       	ldd	r23, Y+55	; 0x37
    255c:	96 01       	movw	r18, r12
    255e:	a7 01       	movw	r20, r14
    2560:	8c a9       	ldd	r24, Y+52	; 0x34
    2562:	9d a9       	ldd	r25, Y+53	; 0x35
    2564:	0e 94 7d 12 	call	0x24fa	; 0x24fa <u8g2_is_intersection_decision_tree>
}
    2568:	df 91       	pop	r29
    256a:	cf 91       	pop	r28
    256c:	1f 91       	pop	r17
    256e:	0f 91       	pop	r16
    2570:	ff 90       	pop	r15
    2572:	ef 90       	pop	r14
    2574:	df 90       	pop	r13
    2576:	cf 90       	pop	r12
    2578:	08 95       	ret

0000257a <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    257a:	0f 93       	push	r16
    257c:	1f 93       	push	r17
    257e:	cf 93       	push	r28
    2580:	df 93       	push	r29
    2582:	dc 01       	movw	r26, r24
    2584:	ca 01       	movw	r24, r20
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    2586:	54 2f       	mov	r21, r20
    2588:	57 70       	andi	r21, 0x07	; 7
  mask = 1;
  mask <<= bit_pos;
    258a:	c1 e0       	ldi	r28, 0x01	; 1
    258c:	d0 e0       	ldi	r29, 0x00	; 0
    258e:	05 2e       	mov	r0, r21
    2590:	02 c0       	rjmp	.+4      	; 0x2596 <u8g2_ll_hvline_vertical_top_lsb+0x1c>
    2592:	cc 0f       	add	r28, r28
    2594:	dd 1f       	adc	r29, r29
    2596:	0a 94       	dec	r0
    2598:	e2 f7       	brpl	.-8      	; 0x2592 <u8g2_ll_hvline_vertical_top_lsb+0x18>
    259a:	1c 2f       	mov	r17, r28

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    259c:	fd 01       	movw	r30, r26
    259e:	ec 58       	subi	r30, 0x8C	; 140
    25a0:	ff 4f       	sbci	r31, 0xFF	; 255
    25a2:	e0 81       	ld	r30, Z
    25a4:	e2 30       	cpi	r30, 0x02	; 2
    25a6:	10 f0       	brcs	.+4      	; 0x25ac <u8g2_ll_hvline_vertical_top_lsb+0x32>
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
    25a8:	40 e0       	ldi	r20, 0x00	; 0
    25aa:	01 c0       	rjmp	.+2      	; 0x25ae <u8g2_ll_hvline_vertical_top_lsb+0x34>
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    or_mask  = mask;
    25ac:	4c 2f       	mov	r20, r28
  if ( u8g2->draw_color != 1 )
    25ae:	e1 30       	cpi	r30, 0x01	; 1
    25b0:	09 f4       	brne	.+2      	; 0x25b4 <u8g2_ll_hvline_vertical_top_lsb+0x3a>
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
    25b2:	10 e0       	ldi	r17, 0x00	; 0
  if ( u8g2->draw_color != 1 )
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
    25b4:	88 7f       	andi	r24, 0xF8	; 248
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    25b6:	ed 91       	ld	r30, X+
    25b8:	fc 91       	ld	r31, X
    25ba:	11 97       	sbiw	r26, 0x01	; 1
    25bc:	c0 89       	ldd	r28, Z+16	; 0x10
    25be:	c8 9f       	mul	r28, r24
    25c0:	f0 01       	movw	r30, r0
    25c2:	c9 9f       	mul	r28, r25
    25c4:	f0 0d       	add	r31, r0
    25c6:	11 24       	eor	r1, r1
  ptr = u8g2->tile_buf_ptr;
    25c8:	92 96       	adiw	r26, 0x22	; 34
    25ca:	8d 91       	ld	r24, X+
    25cc:	9c 91       	ld	r25, X
    25ce:	93 97       	sbiw	r26, 0x23	; 35
  ptr += offset;
  ptr += x;
    25d0:	6e 0f       	add	r22, r30
    25d2:	7f 1f       	adc	r23, r31
    25d4:	fc 01       	movw	r30, r24
    25d6:	e6 0f       	add	r30, r22
    25d8:	f7 1f       	adc	r31, r23
  
  if ( dir == 0 )
    25da:	01 11       	cpse	r16, r1
    25dc:	08 c0       	rjmp	.+16     	; 0x25ee <u8g2_ll_hvline_vertical_top_lsb+0x74>
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    25de:	80 81       	ld	r24, Z
    25e0:	84 2b       	or	r24, r20
	*ptr ^= xor_mask;
    25e2:	81 27       	eor	r24, r17
    25e4:	81 93       	st	Z+, r24
	ptr++;
	len--;
    25e6:	21 50       	subi	r18, 0x01	; 1
    25e8:	31 09       	sbc	r19, r1
      } while( len != 0 );
    25ea:	c9 f7       	brne	.-14     	; 0x25de <u8g2_ll_hvline_vertical_top_lsb+0x64>
    25ec:	21 c0       	rjmp	.+66     	; 0x2630 <u8g2_ll_hvline_vertical_top_lsb+0xb6>
    do
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
    25ee:	90 81       	ld	r25, Z
    25f0:	94 2b       	or	r25, r20
      *ptr ^= xor_mask;
    25f2:	91 27       	eor	r25, r17
    25f4:	90 83       	st	Z, r25
      
      bit_pos++;
    25f6:	5f 5f       	subi	r21, 0xFF	; 255
      bit_pos &= 7;
    25f8:	57 70       	andi	r21, 0x07	; 7

      len--;
    25fa:	21 50       	subi	r18, 0x01	; 1
    25fc:	31 09       	sbc	r19, r1

      if ( bit_pos == 0 )
    25fe:	51 11       	cpse	r21, r1
    2600:	10 c0       	rjmp	.+32     	; 0x2622 <u8g2_ll_hvline_vertical_top_lsb+0xa8>
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    2602:	96 96       	adiw	r26, 0x26	; 38
    2604:	8d 91       	ld	r24, X+
    2606:	9c 91       	ld	r25, X
    2608:	97 97       	sbiw	r26, 0x27	; 39
    260a:	e8 0f       	add	r30, r24
    260c:	f9 1f       	adc	r31, r25
		
	if ( u8g2->draw_color <= 1 )
    260e:	ed 01       	movw	r28, r26
    2610:	cc 58       	subi	r28, 0x8C	; 140
    2612:	df 4f       	sbci	r29, 0xFF	; 255
    2614:	88 81       	ld	r24, Y
    2616:	82 30       	cpi	r24, 0x02	; 2
    2618:	08 f4       	brcc	.+2      	; 0x261c <u8g2_ll_hvline_vertical_top_lsb+0xa2>
	  or_mask  = 1;
    261a:	41 e0       	ldi	r20, 0x01	; 1
	if ( u8g2->draw_color != 1 )
    261c:	81 30       	cpi	r24, 0x01	; 1
    261e:	21 f4       	brne	.+8      	; 0x2628 <u8g2_ll_hvline_vertical_top_lsb+0xae>
    2620:	04 c0       	rjmp	.+8      	; 0x262a <u8g2_ll_hvline_vertical_top_lsb+0xb0>
	  xor_mask = 1;
      }
      else
      {
	or_mask <<= 1;
    2622:	44 0f       	add	r20, r20
	xor_mask <<= 1;
    2624:	11 0f       	add	r17, r17
    2626:	01 c0       	rjmp	.+2      	; 0x262a <u8g2_ll_hvline_vertical_top_lsb+0xb0>
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
    2628:	11 e0       	ldi	r17, 0x01	; 1
      else
      {
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
    262a:	21 15       	cp	r18, r1
    262c:	31 05       	cpc	r19, r1
    262e:	f9 f6       	brne	.-66     	; 0x25ee <u8g2_ll_hvline_vertical_top_lsb+0x74>
  }
}
    2630:	df 91       	pop	r29
    2632:	cf 91       	pop	r28
    2634:	1f 91       	pop	r17
    2636:	0f 91       	pop	r16
    2638:	08 95       	ret

0000263a <u8g2_update_dimension_common>:
  u8g2->clip_x0 = clip_x0;
  u8g2->clip_y0 = clip_y0;
  u8g2->clip_x1 = clip_x1;
  u8g2->clip_y1 = clip_y1;
  u8g2->cb->update_page_win(u8g2);
}
    263a:	cf 93       	push	r28
    263c:	df 93       	push	r29
    263e:	fc 01       	movw	r30, r24
    2640:	a0 81       	ld	r26, Z
    2642:	b1 81       	ldd	r27, Z+1	; 0x01
    2644:	84 a1       	ldd	r24, Z+36	; 0x24
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	9c 01       	movw	r18, r24
    264a:	22 0f       	add	r18, r18
    264c:	33 1f       	adc	r19, r19
    264e:	22 0f       	add	r18, r18
    2650:	33 1f       	adc	r19, r19
    2652:	22 0f       	add	r18, r18
    2654:	33 1f       	adc	r19, r19
    2656:	31 a7       	std	Z+41, r19	; 0x29
    2658:	20 a7       	std	Z+40, r18	; 0x28
    265a:	50 96       	adiw	r26, 0x10	; 16
    265c:	2c 91       	ld	r18, X
    265e:	50 97       	sbiw	r26, 0x10	; 16
    2660:	30 e0       	ldi	r19, 0x00	; 0
    2662:	22 0f       	add	r18, r18
    2664:	33 1f       	adc	r19, r19
    2666:	22 0f       	add	r18, r18
    2668:	33 1f       	adc	r19, r19
    266a:	22 0f       	add	r18, r18
    266c:	33 1f       	adc	r19, r19
    266e:	37 a3       	std	Z+39, r19	; 0x27
    2670:	26 a3       	std	Z+38, r18	; 0x26
    2672:	75 a1       	ldd	r23, Z+37	; 0x25
    2674:	27 2f       	mov	r18, r23
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	a9 01       	movw	r20, r18
    267a:	44 0f       	add	r20, r20
    267c:	55 1f       	adc	r21, r21
    267e:	44 0f       	add	r20, r20
    2680:	55 1f       	adc	r21, r21
    2682:	44 0f       	add	r20, r20
    2684:	55 1f       	adc	r21, r21
    2686:	53 a7       	std	Z+43, r21	; 0x2b
    2688:	42 a7       	std	Z+42, r20	; 0x2a
    268a:	28 0f       	add	r18, r24
    268c:	39 1f       	adc	r19, r25
    268e:	51 96       	adiw	r26, 0x11	; 17
    2690:	6c 91       	ld	r22, X
    2692:	51 97       	sbiw	r26, 0x11	; 17
    2694:	c6 2f       	mov	r28, r22
    2696:	d0 e0       	ldi	r29, 0x00	; 0
    2698:	c2 17       	cp	r28, r18
    269a:	d3 07       	cpc	r29, r19
    269c:	18 f4       	brcc	.+6      	; 0x26a4 <u8g2_update_dimension_common+0x6a>
    269e:	ce 01       	movw	r24, r28
    26a0:	87 1b       	sub	r24, r23
    26a2:	91 09       	sbc	r25, r1
    26a4:	88 0f       	add	r24, r24
    26a6:	99 1f       	adc	r25, r25
    26a8:	88 0f       	add	r24, r24
    26aa:	99 1f       	adc	r25, r25
    26ac:	88 0f       	add	r24, r24
    26ae:	99 1f       	adc	r25, r25
    26b0:	55 a7       	std	Z+45, r21	; 0x2d
    26b2:	44 a7       	std	Z+44, r20	; 0x2c
    26b4:	84 0f       	add	r24, r20
    26b6:	95 1f       	adc	r25, r21
    26b8:	97 a7       	std	Z+47, r25	; 0x2f
    26ba:	86 a7       	std	Z+46, r24	; 0x2e
    26bc:	54 96       	adiw	r26, 0x14	; 20
    26be:	8d 91       	ld	r24, X+
    26c0:	9c 91       	ld	r25, X
    26c2:	55 97       	sbiw	r26, 0x15	; 21
    26c4:	91 ab       	std	Z+49, r25	; 0x31
    26c6:	80 ab       	std	Z+48, r24	; 0x30
    26c8:	56 96       	adiw	r26, 0x16	; 22
    26ca:	8d 91       	ld	r24, X+
    26cc:	9c 91       	ld	r25, X
    26ce:	57 97       	sbiw	r26, 0x17	; 23
    26d0:	93 ab       	std	Z+51, r25	; 0x33
    26d2:	82 ab       	std	Z+50, r24	; 0x32
    26d4:	df 91       	pop	r29
    26d6:	cf 91       	pop	r28
    26d8:	08 95       	ret

000026da <u8g2_update_dimension_r0>:
    26da:	0e 94 1d 13 	call	0x263a	; 0x263a <u8g2_update_dimension_common>
    26de:	08 95       	ret

000026e0 <u8g2_apply_clip_window>:
    26e0:	0f 93       	push	r16
    26e2:	1f 93       	push	r17
    26e4:	cf 93       	push	r28
    26e6:	df 93       	push	r29
    26e8:	ec 01       	movw	r28, r24
    26ea:	fc 01       	movw	r30, r24
    26ec:	ee 5b       	subi	r30, 0xBE	; 190
    26ee:	ff 4f       	sbci	r31, 0xFF	; 255
    26f0:	00 81       	ld	r16, Z
    26f2:	11 81       	ldd	r17, Z+1	; 0x01
    26f4:	2e ad       	ldd	r18, Y+62	; 0x3e
    26f6:	3f ad       	ldd	r19, Y+63	; 0x3f
    26f8:	32 97       	sbiw	r30, 0x02	; 2
    26fa:	40 81       	ld	r20, Z
    26fc:	51 81       	ldd	r21, Z+1	; 0x01
    26fe:	6c ad       	ldd	r22, Y+60	; 0x3c
    2700:	7d ad       	ldd	r23, Y+61	; 0x3d
    2702:	0e 94 98 12 	call	0x2530	; 0x2530 <u8g2_IsIntersection>
    2706:	81 11       	cpse	r24, r1
    2708:	04 c0       	rjmp	.+8      	; 0x2712 <u8g2_apply_clip_window+0x32>
    270a:	c2 59       	subi	r28, 0x92	; 146
    270c:	df 4f       	sbci	r29, 0xFF	; 255
    270e:	18 82       	st	Y, r1
    2710:	2f c0       	rjmp	.+94     	; 0x2770 <u8g2_apply_clip_window+0x90>
    2712:	81 e0       	ldi	r24, 0x01	; 1
    2714:	fe 01       	movw	r30, r28
    2716:	e2 59       	subi	r30, 0x92	; 146
    2718:	ff 4f       	sbci	r31, 0xFF	; 255
    271a:	80 83       	st	Z, r24
    271c:	2c a9       	ldd	r18, Y+52	; 0x34
    271e:	3d a9       	ldd	r19, Y+53	; 0x35
    2720:	8c ad       	ldd	r24, Y+60	; 0x3c
    2722:	9d ad       	ldd	r25, Y+61	; 0x3d
    2724:	28 17       	cp	r18, r24
    2726:	39 07       	cpc	r19, r25
    2728:	10 f4       	brcc	.+4      	; 0x272e <u8g2_apply_clip_window+0x4e>
    272a:	9d ab       	std	Y+53, r25	; 0x35
    272c:	8c ab       	std	Y+52, r24	; 0x34
    272e:	2e a9       	ldd	r18, Y+54	; 0x36
    2730:	3f a9       	ldd	r19, Y+55	; 0x37
    2732:	8e ad       	ldd	r24, Y+62	; 0x3e
    2734:	9f ad       	ldd	r25, Y+63	; 0x3f
    2736:	82 17       	cp	r24, r18
    2738:	93 07       	cpc	r25, r19
    273a:	10 f4       	brcc	.+4      	; 0x2740 <u8g2_apply_clip_window+0x60>
    273c:	9f ab       	std	Y+55, r25	; 0x37
    273e:	8e ab       	std	Y+54, r24	; 0x36
    2740:	28 ad       	ldd	r18, Y+56	; 0x38
    2742:	39 ad       	ldd	r19, Y+57	; 0x39
    2744:	fe 01       	movw	r30, r28
    2746:	e0 5c       	subi	r30, 0xC0	; 192
    2748:	ff 4f       	sbci	r31, 0xFF	; 255
    274a:	80 81       	ld	r24, Z
    274c:	91 81       	ldd	r25, Z+1	; 0x01
    274e:	28 17       	cp	r18, r24
    2750:	39 07       	cpc	r19, r25
    2752:	10 f4       	brcc	.+4      	; 0x2758 <u8g2_apply_clip_window+0x78>
    2754:	99 af       	std	Y+57, r25	; 0x39
    2756:	88 af       	std	Y+56, r24	; 0x38
    2758:	2a ad       	ldd	r18, Y+58	; 0x3a
    275a:	3b ad       	ldd	r19, Y+59	; 0x3b
    275c:	fe 01       	movw	r30, r28
    275e:	ee 5b       	subi	r30, 0xBE	; 190
    2760:	ff 4f       	sbci	r31, 0xFF	; 255
    2762:	80 81       	ld	r24, Z
    2764:	91 81       	ldd	r25, Z+1	; 0x01
    2766:	82 17       	cp	r24, r18
    2768:	93 07       	cpc	r25, r19
    276a:	10 f4       	brcc	.+4      	; 0x2770 <u8g2_apply_clip_window+0x90>
    276c:	9b af       	std	Y+59, r25	; 0x3b
    276e:	8a af       	std	Y+58, r24	; 0x3a
    2770:	df 91       	pop	r29
    2772:	cf 91       	pop	r28
    2774:	1f 91       	pop	r17
    2776:	0f 91       	pop	r16
    2778:	08 95       	ret

0000277a <u8g2_update_page_win_r0>:
    277a:	fc 01       	movw	r30, r24
    277c:	15 aa       	std	Z+53, r1	; 0x35
    277e:	14 aa       	std	Z+52, r1	; 0x34
    2780:	80 a9       	ldd	r24, Z+48	; 0x30
    2782:	91 a9       	ldd	r25, Z+49	; 0x31
    2784:	97 ab       	std	Z+55, r25	; 0x37
    2786:	86 ab       	std	Z+54, r24	; 0x36
    2788:	84 a5       	ldd	r24, Z+44	; 0x2c
    278a:	95 a5       	ldd	r25, Z+45	; 0x2d
    278c:	91 af       	std	Z+57, r25	; 0x39
    278e:	80 af       	std	Z+56, r24	; 0x38
    2790:	86 a5       	ldd	r24, Z+46	; 0x2e
    2792:	97 a5       	ldd	r25, Z+47	; 0x2f
    2794:	93 af       	std	Z+59, r25	; 0x3b
    2796:	82 af       	std	Z+58, r24	; 0x3a
    2798:	cf 01       	movw	r24, r30
    279a:	0e 94 70 13 	call	0x26e0	; 0x26e0 <u8g2_apply_clip_window>
    279e:	08 95       	ret

000027a0 <u8g2_draw_l90_r0>:
    27a0:	0f 93       	push	r16
    27a2:	0e 94 c9 11 	call	0x2392	; 0x2392 <u8g2_draw_hv_line_2dir>
    27a6:	0f 91       	pop	r16
    27a8:	08 95       	ret

000027aa <u8g2_SetMaxClipWindow>:
    27aa:	dc 01       	movw	r26, r24
    27ac:	dd 96       	adiw	r26, 0x3d	; 61
    27ae:	1c 92       	st	X, r1
    27b0:	1e 92       	st	-X, r1
    27b2:	dc 97       	sbiw	r26, 0x3c	; 60
    27b4:	fc 01       	movw	r30, r24
    27b6:	e0 5c       	subi	r30, 0xC0	; 192
    27b8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ba:	11 82       	std	Z+1, r1	; 0x01
    27bc:	10 82       	st	Z, r1
    27be:	2f ef       	ldi	r18, 0xFF	; 255
    27c0:	3f ef       	ldi	r19, 0xFF	; 255
    27c2:	fc 01       	movw	r30, r24
    27c4:	37 af       	std	Z+63, r19	; 0x3f
    27c6:	26 af       	std	Z+62, r18	; 0x3e
    27c8:	ee 5b       	subi	r30, 0xBE	; 190
    27ca:	ff 4f       	sbci	r31, 0xFF	; 255
    27cc:	31 83       	std	Z+1, r19	; 0x01
    27ce:	20 83       	st	Z, r18
    27d0:	90 96       	adiw	r26, 0x20	; 32
    27d2:	ed 91       	ld	r30, X+
    27d4:	fc 91       	ld	r31, X
    27d6:	91 97       	sbiw	r26, 0x21	; 33
    27d8:	02 80       	ldd	r0, Z+2	; 0x02
    27da:	f3 81       	ldd	r31, Z+3	; 0x03
    27dc:	e0 2d       	mov	r30, r0
    27de:	09 95       	icall
    27e0:	08 95       	ret

000027e2 <u8g2_SetupBuffer>:
/*
  This procedure is called after setting up the display (u8x8 structure).
  --> This is the central init procedure for u8g2 object
*/
void u8g2_SetupBuffer(u8g2_t *u8g2, uint8_t *buf, uint8_t tile_buf_height, u8g2_draw_ll_hvline_cb ll_hvline_cb, const u8g2_cb_t *u8g2_cb)
{
    27e2:	0f 93       	push	r16
    27e4:	1f 93       	push	r17
    27e6:	cf 93       	push	r28
    27e8:	df 93       	push	r29
    27ea:	ec 01       	movw	r28, r24
  u8g2->font = NULL;
    27ec:	fc 01       	movw	r30, r24
    27ee:	ec 5b       	subi	r30, 0xBC	; 188
    27f0:	ff 4f       	sbci	r31, 0xFF	; 255
    27f2:	11 82       	std	Z+1, r1	; 0x01
    27f4:	10 82       	st	Z, r1
  //u8g2->kerning = NULL;
  //u8g2->get_kerning_cb = u8g2_GetNullKerning;
  
  //u8g2->ll_hvline = u8g2_ll_hvline_vertical_top_lsb;
  u8g2->ll_hvline = ll_hvline_cb;
    27f6:	3f 8f       	std	Y+31, r19	; 0x1f
    27f8:	2e 8f       	std	Y+30, r18	; 0x1e
  
  u8g2->tile_buf_ptr = buf;
    27fa:	7b a3       	std	Y+35, r23	; 0x23
    27fc:	6a a3       	std	Y+34, r22	; 0x22
  u8g2->tile_buf_height = tile_buf_height;
    27fe:	4c a3       	std	Y+36, r20	; 0x24
  
  u8g2->tile_curr_row = 0;
    2800:	1d a2       	std	Y+37, r1	; 0x25
  
  u8g2->font_decode.is_transparent = 0; /* issue 443 */
    2802:	3f 96       	adiw	r30, 0x0f	; 15
    2804:	10 82       	st	Z, r1
  u8g2->bitmap_transparency = 0;
    2806:	b0 96       	adiw	r30, 0x20	; 32
    2808:	10 82       	st	Z, r1
  
  u8g2->font_height_mode = 0; /* issue 2046 */
    280a:	34 97       	sbiw	r30, 0x04	; 4
    280c:	10 82       	st	Z, r1
  u8g2->draw_color = 1;
    280e:	35 96       	adiw	r30, 0x05	; 5
    2810:	81 e0       	ldi	r24, 0x01	; 1
    2812:	80 83       	st	Z, r24
  u8g2->is_auto_page_clear = 1;
    2814:	31 96       	adiw	r30, 0x01	; 1
    2816:	80 83       	st	Z, r24
  
  u8g2->cb = u8g2_cb;
    2818:	19 a3       	std	Y+33, r17	; 0x21
    281a:	08 a3       	std	Y+32, r16	; 0x20
  u8g2->cb->update_dimension(u8g2);
    281c:	d8 01       	movw	r26, r16
    281e:	ed 91       	ld	r30, X+
    2820:	fc 91       	ld	r31, X
    2822:	ce 01       	movw	r24, r28
    2824:	09 95       	icall
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_SetMaxClipWindow(u8g2);		/* assign a clip window and call the update() procedure */
    2826:	ce 01       	movw	r24, r28
    2828:	0e 94 d5 13 	call	0x27aa	; 0x27aa <u8g2_SetMaxClipWindow>
#else
  u8g2->cb->update_page_win(u8g2);
#endif

  u8g2_SetFontPosBaseline(u8g2);  /* issue 195 */
    282c:	ce 01       	movw	r24, r28
    282e:	0e 94 70 11 	call	0x22e0	; 0x22e0 <u8g2_SetFontPosBaseline>
  
#ifdef U8G2_WITH_FONT_ROTATION  
  u8g2->font_decode.dir = 0;
    2832:	ca 5a       	subi	r28, 0xAA	; 170
    2834:	df 4f       	sbci	r29, 0xFF	; 255
    2836:	18 82       	st	Y, r1
#endif
}
    2838:	df 91       	pop	r29
    283a:	cf 91       	pop	r28
    283c:	1f 91       	pop	r17
    283e:	0f 91       	pop	r16
    2840:	08 95       	ret

00002842 <u8x8_ascii_next>:
      tile++;
      xx++;
    } while( xx < th );
    y+=2;
  } while( y < tv );  
}
    2842:	66 23       	and	r22, r22
    2844:	29 f0       	breq	.+10     	; 0x2850 <u8x8_ascii_next+0xe>
    2846:	6a 30       	cpi	r22, 0x0A	; 10
    2848:	31 f0       	breq	.+12     	; 0x2856 <u8x8_ascii_next+0x14>
    284a:	86 2f       	mov	r24, r22
    284c:	90 e0       	ldi	r25, 0x00	; 0
    284e:	08 95       	ret
    2850:	8f ef       	ldi	r24, 0xFF	; 255
    2852:	9f ef       	ldi	r25, 0xFF	; 255
    2854:	08 95       	ret
    2856:	8f ef       	ldi	r24, 0xFF	; 255
    2858:	9f ef       	ldi	r25, 0xFF	; 255
    285a:	08 95       	ret

0000285c <u8x8_utf8_init>:
*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    285c:	fc 01       	movw	r30, r24
    285e:	10 8e       	std	Z+24, r1	; 0x18
    2860:	08 95       	ret

00002862 <u8x8_byte_SetDC>:
    case U8X8_MSG_BYTE_START_TRANSFER:
    case U8X8_MSG_BYTE_END_TRANSFER:
      break;	/* do nothing */
  }
  return 1;	/* always succeed */
}
    2862:	46 2f       	mov	r20, r22
    2864:	dc 01       	movw	r26, r24
    2866:	18 96       	adiw	r26, 0x08	; 8
    2868:	ed 91       	ld	r30, X+
    286a:	fc 91       	ld	r31, X
    286c:	19 97       	sbiw	r26, 0x09	; 9
    286e:	20 e0       	ldi	r18, 0x00	; 0
    2870:	30 e0       	ldi	r19, 0x00	; 0
    2872:	60 e2       	ldi	r22, 0x20	; 32
    2874:	09 95       	icall
    2876:	08 95       	ret

00002878 <u8x8_byte_SendBytes>:
    2878:	9a 01       	movw	r18, r20
    287a:	dc 01       	movw	r26, r24
    287c:	18 96       	adiw	r26, 0x08	; 8
    287e:	ed 91       	ld	r30, X+
    2880:	fc 91       	ld	r31, X
    2882:	19 97       	sbiw	r26, 0x09	; 9
    2884:	46 2f       	mov	r20, r22
    2886:	67 e1       	ldi	r22, 0x17	; 23
    2888:	09 95       	icall
    288a:	08 95       	ret

0000288c <u8x8_byte_SendByte>:
    288c:	cf 93       	push	r28
    288e:	df 93       	push	r29
    2890:	1f 92       	push	r1
    2892:	cd b7       	in	r28, 0x3d	; 61
    2894:	de b7       	in	r29, 0x3e	; 62
    2896:	69 83       	std	Y+1, r22	; 0x01
    2898:	ae 01       	movw	r20, r28
    289a:	4f 5f       	subi	r20, 0xFF	; 255
    289c:	5f 4f       	sbci	r21, 0xFF	; 255
    289e:	61 e0       	ldi	r22, 0x01	; 1
    28a0:	0e 94 3c 14 	call	0x2878	; 0x2878 <u8x8_byte_SendBytes>
    28a4:	0f 90       	pop	r0
    28a6:	df 91       	pop	r29
    28a8:	cf 91       	pop	r28
    28aa:	08 95       	ret

000028ac <u8x8_byte_4wire_sw_spi>:
    U8X8_MSG_BYTE_START_TRANSFER
    U8X8_MSG_BYTE_END_TRANSFER
*/

uint8_t u8x8_byte_4wire_sw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    28ac:	bf 92       	push	r11
    28ae:	cf 92       	push	r12
    28b0:	df 92       	push	r13
    28b2:	ef 92       	push	r14
    28b4:	ff 92       	push	r15
    28b6:	0f 93       	push	r16
    28b8:	1f 93       	push	r17
    28ba:	cf 93       	push	r28
    28bc:	df 93       	push	r29
    28be:	ec 01       	movw	r28, r24
    28c0:	b4 2e       	mov	r11, r20
    28c2:	79 01       	movw	r14, r18
  uint8_t i, b;
  uint8_t *data;
  uint8_t takeover_edge = u8x8_GetSPIClockPhase(u8x8);
    28c4:	a8 81       	ld	r26, Y
    28c6:	b9 81       	ldd	r27, Y+1	; 0x01
    28c8:	1c 96       	adiw	r26, 0x0c	; 12
    28ca:	8c 91       	ld	r24, X
    28cc:	1c 97       	sbiw	r26, 0x0c	; 12
    28ce:	81 70       	andi	r24, 0x01	; 1
    28d0:	d8 2e       	mov	r13, r24
  uint8_t not_takeover_edge = 1 - takeover_edge;
    28d2:	81 e0       	ldi	r24, 0x01	; 1
    28d4:	c8 2e       	mov	r12, r24
    28d6:	cd 18       	sub	r12, r13
 
  switch(msg)
    28d8:	68 31       	cpi	r22, 0x18	; 24
    28da:	09 f4       	brne	.+2      	; 0x28de <u8x8_byte_4wire_sw_spi+0x32>
    28dc:	56 c0       	rjmp	.+172    	; 0x298a <u8x8_byte_4wire_sw_spi+0xde>
    28de:	28 f4       	brcc	.+10     	; 0x28ea <u8x8_byte_4wire_sw_spi+0x3e>
    28e0:	64 31       	cpi	r22, 0x14	; 20
    28e2:	e9 f1       	breq	.+122    	; 0x295e <u8x8_byte_4wire_sw_spi+0xb2>
    28e4:	67 31       	cpi	r22, 0x17	; 23
    28e6:	b9 f1       	breq	.+110    	; 0x2956 <u8x8_byte_4wire_sw_spi+0xaa>
    28e8:	74 c0       	rjmp	.+232    	; 0x29d2 <u8x8_byte_4wire_sw_spi+0x126>
    28ea:	69 31       	cpi	r22, 0x19	; 25
    28ec:	09 f4       	brne	.+2      	; 0x28f0 <u8x8_byte_4wire_sw_spi+0x44>
    28ee:	5f c0       	rjmp	.+190    	; 0x29ae <u8x8_byte_4wire_sw_spi+0x102>
    28f0:	60 32       	cpi	r22, 0x20	; 32
    28f2:	09 f4       	brne	.+2      	; 0x28f6 <u8x8_byte_4wire_sw_spi+0x4a>
    28f4:	44 c0       	rjmp	.+136    	; 0x297e <u8x8_byte_4wire_sw_spi+0xd2>
    28f6:	6d c0       	rjmp	.+218    	; 0x29d2 <u8x8_byte_4wire_sw_spi+0x126>
  {
    case U8X8_MSG_BYTE_SEND:
      data = (uint8_t *)arg_ptr;
      while( arg_int > 0 )
      {
	b = *data;
    28f8:	f7 01       	movw	r30, r14
    28fa:	01 91       	ld	r16, Z+
    28fc:	7f 01       	movw	r14, r30
	data++;
	arg_int--;
    28fe:	ba 94       	dec	r11
	for( i = 0; i < 8; i++ )
    2900:	10 e0       	ldi	r17, 0x00	; 0
    2902:	27 c0       	rjmp	.+78     	; 0x2952 <u8x8_byte_4wire_sw_spi+0xa6>
	{
	  if ( b & 128 )
    2904:	00 23       	and	r16, r16
    2906:	34 f4       	brge	.+12     	; 0x2914 <u8x8_byte_4wire_sw_spi+0x68>
	    u8x8_gpio_SetSPIData(u8x8, 1);
    2908:	41 e0       	ldi	r20, 0x01	; 1
    290a:	61 e4       	ldi	r22, 0x41	; 65
    290c:	ce 01       	movw	r24, r28
    290e:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2912:	05 c0       	rjmp	.+10     	; 0x291e <u8x8_byte_4wire_sw_spi+0x72>
	  else
	    u8x8_gpio_SetSPIData(u8x8, 0);
    2914:	40 e0       	ldi	r20, 0x00	; 0
    2916:	61 e4       	ldi	r22, 0x41	; 65
    2918:	ce 01       	movw	r24, r28
    291a:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
	  b <<= 1;
    291e:	00 0f       	add	r16, r16
	  
	  u8x8_gpio_SetSPIClock(u8x8, not_takeover_edge);
    2920:	4c 2d       	mov	r20, r12
    2922:	60 e4       	ldi	r22, 0x40	; 64
    2924:	ce 01       	movw	r24, r28
    2926:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->sda_setup_time_ns);
    292a:	e8 81       	ld	r30, Y
    292c:	f9 81       	ldd	r31, Y+1	; 0x01
    292e:	46 81       	ldd	r20, Z+6	; 0x06
    2930:	6c e2       	ldi	r22, 0x2C	; 44
    2932:	ce 01       	movw	r24, r28
    2934:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
	  u8x8_gpio_SetSPIClock(u8x8, takeover_edge);
    2938:	4d 2d       	mov	r20, r13
    293a:	60 e4       	ldi	r22, 0x40	; 64
    293c:	ce 01       	movw	r24, r28
    293e:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->sck_pulse_width_ns);
    2942:	e8 81       	ld	r30, Y
    2944:	f9 81       	ldd	r31, Y+1	; 0x01
    2946:	47 81       	ldd	r20, Z+7	; 0x07
    2948:	6c e2       	ldi	r22, 0x2C	; 44
    294a:	ce 01       	movw	r24, r28
    294c:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      while( arg_int > 0 )
      {
	b = *data;
	data++;
	arg_int--;
	for( i = 0; i < 8; i++ )
    2950:	1f 5f       	subi	r17, 0xFF	; 255
    2952:	18 30       	cpi	r17, 0x08	; 8
    2954:	b8 f2       	brcs	.-82     	; 0x2904 <u8x8_byte_4wire_sw_spi+0x58>
 
  switch(msg)
  {
    case U8X8_MSG_BYTE_SEND:
      data = (uint8_t *)arg_ptr;
      while( arg_int > 0 )
    2956:	b1 10       	cpse	r11, r1
    2958:	cf cf       	rjmp	.-98     	; 0x28f8 <u8x8_byte_4wire_sw_spi+0x4c>
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
  }
  return 1;
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	3b c0       	rjmp	.+118    	; 0x29d4 <u8x8_byte_4wire_sw_spi+0x128>
      }
      break;
      
    case U8X8_MSG_BYTE_INIT:
      /* disable chipselect */
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
    295e:	11 96       	adiw	r26, 0x01	; 1
    2960:	4c 91       	ld	r20, X
    2962:	69 e4       	ldi	r22, 0x49	; 73
    2964:	ce 01       	movw	r24, r28
    2966:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      /* no wait required here */
      
      /* for SPI: setup correct level of the clock signal */
      u8x8_gpio_SetSPIClock(u8x8, u8x8_GetSPIClockPhase(u8x8));
    296a:	e8 81       	ld	r30, Y
    296c:	f9 81       	ldd	r31, Y+1	; 0x01
    296e:	44 85       	ldd	r20, Z+12	; 0x0c
    2970:	41 70       	andi	r20, 0x01	; 1
    2972:	60 e4       	ldi	r22, 0x40	; 64
    2974:	ce 01       	movw	r24, r28
    2976:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
  }
  return 1;
    297a:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      /* no wait required here */
      
      /* for SPI: setup correct level of the clock signal */
      u8x8_gpio_SetSPIClock(u8x8, u8x8_GetSPIClockPhase(u8x8));
      break;
    297c:	2b c0       	rjmp	.+86     	; 0x29d4 <u8x8_byte_4wire_sw_spi+0x128>
    case U8X8_MSG_BYTE_SET_DC:
      u8x8_gpio_SetDC(u8x8, arg_int);
    297e:	6a e4       	ldi	r22, 0x4A	; 74
    2980:	ce 01       	movw	r24, r28
    2982:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
  }
  return 1;
    2986:	81 e0       	ldi	r24, 0x01	; 1
      /* for SPI: setup correct level of the clock signal */
      u8x8_gpio_SetSPIClock(u8x8, u8x8_GetSPIClockPhase(u8x8));
      break;
    case U8X8_MSG_BYTE_SET_DC:
      u8x8_gpio_SetDC(u8x8, arg_int);
      break;
    2988:	25 c0       	rjmp	.+74     	; 0x29d4 <u8x8_byte_4wire_sw_spi+0x128>
    case U8X8_MSG_BYTE_START_TRANSFER:
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_enable_level);  
    298a:	4c 91       	ld	r20, X
    298c:	69 e4       	ldi	r22, 0x49	; 73
    298e:	ce 01       	movw	r24, r28
    2990:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->post_chip_enable_wait_ns, NULL);
    2994:	ea 85       	ldd	r30, Y+10	; 0x0a
    2996:	fb 85       	ldd	r31, Y+11	; 0x0b
    2998:	a8 81       	ld	r26, Y
    299a:	b9 81       	ldd	r27, Y+1	; 0x01
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e0       	ldi	r19, 0x00	; 0
    29a0:	12 96       	adiw	r26, 0x02	; 2
    29a2:	4c 91       	ld	r20, X
    29a4:	6c e2       	ldi	r22, 0x2C	; 44
    29a6:	ce 01       	movw	r24, r28
    29a8:	09 95       	icall
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
  }
  return 1;
    29aa:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_gpio_SetDC(u8x8, arg_int);
      break;
    case U8X8_MSG_BYTE_START_TRANSFER:
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_enable_level);  
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->post_chip_enable_wait_ns, NULL);
      break;
    29ac:	13 c0       	rjmp	.+38     	; 0x29d4 <u8x8_byte_4wire_sw_spi+0x128>
    case U8X8_MSG_BYTE_END_TRANSFER:
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->pre_chip_disable_wait_ns, NULL);
    29ae:	ea 85       	ldd	r30, Y+10	; 0x0a
    29b0:	fb 85       	ldd	r31, Y+11	; 0x0b
    29b2:	20 e0       	ldi	r18, 0x00	; 0
    29b4:	30 e0       	ldi	r19, 0x00	; 0
    29b6:	13 96       	adiw	r26, 0x03	; 3
    29b8:	4c 91       	ld	r20, X
    29ba:	6c e2       	ldi	r22, 0x2C	; 44
    29bc:	ce 01       	movw	r24, r28
    29be:	09 95       	icall
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
    29c0:	e8 81       	ld	r30, Y
    29c2:	f9 81       	ldd	r31, Y+1	; 0x01
    29c4:	41 81       	ldd	r20, Z+1	; 0x01
    29c6:	69 e4       	ldi	r22, 0x49	; 73
    29c8:	ce 01       	movw	r24, r28
    29ca:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
      break;
    default:
      return 0;
  }
  return 1;
    29ce:	81 e0       	ldi	r24, 0x01	; 1
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->post_chip_enable_wait_ns, NULL);
      break;
    case U8X8_MSG_BYTE_END_TRANSFER:
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->pre_chip_disable_wait_ns, NULL);
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    29d0:	01 c0       	rjmp	.+2      	; 0x29d4 <u8x8_byte_4wire_sw_spi+0x128>
    default:
      return 0;
    29d2:	80 e0       	ldi	r24, 0x00	; 0
  }
  return 1;
}
    29d4:	df 91       	pop	r29
    29d6:	cf 91       	pop	r28
    29d8:	1f 91       	pop	r17
    29da:	0f 91       	pop	r16
    29dc:	ff 90       	pop	r15
    29de:	ef 90       	pop	r14
    29e0:	df 90       	pop	r13
    29e2:	cf 90       	pop	r12
    29e4:	bf 90       	pop	r11
    29e6:	08 95       	ret

000029e8 <u8x8_cad_SendCmd>:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
}
    29e8:	46 2f       	mov	r20, r22
    29ea:	dc 01       	movw	r26, r24
    29ec:	16 96       	adiw	r26, 0x06	; 6
    29ee:	ed 91       	ld	r30, X+
    29f0:	fc 91       	ld	r31, X
    29f2:	17 97       	sbiw	r26, 0x07	; 7
    29f4:	20 e0       	ldi	r18, 0x00	; 0
    29f6:	30 e0       	ldi	r19, 0x00	; 0
    29f8:	65 e1       	ldi	r22, 0x15	; 21
    29fa:	09 95       	icall
    29fc:	08 95       	ret

000029fe <u8x8_cad_SendArg>:
    29fe:	46 2f       	mov	r20, r22
    2a00:	dc 01       	movw	r26, r24
    2a02:	16 96       	adiw	r26, 0x06	; 6
    2a04:	ed 91       	ld	r30, X+
    2a06:	fc 91       	ld	r31, X
    2a08:	17 97       	sbiw	r26, 0x07	; 7
    2a0a:	20 e0       	ldi	r18, 0x00	; 0
    2a0c:	30 e0       	ldi	r19, 0x00	; 0
    2a0e:	66 e1       	ldi	r22, 0x16	; 22
    2a10:	09 95       	icall
    2a12:	08 95       	ret

00002a14 <u8x8_cad_SendData>:
    2a14:	9a 01       	movw	r18, r20
    2a16:	dc 01       	movw	r26, r24
    2a18:	16 96       	adiw	r26, 0x06	; 6
    2a1a:	ed 91       	ld	r30, X+
    2a1c:	fc 91       	ld	r31, X
    2a1e:	17 97       	sbiw	r26, 0x07	; 7
    2a20:	46 2f       	mov	r20, r22
    2a22:	67 e1       	ldi	r22, 0x17	; 23
    2a24:	09 95       	icall
    2a26:	08 95       	ret

00002a28 <u8x8_cad_StartTransfer>:
    2a28:	dc 01       	movw	r26, r24
    2a2a:	16 96       	adiw	r26, 0x06	; 6
    2a2c:	ed 91       	ld	r30, X+
    2a2e:	fc 91       	ld	r31, X
    2a30:	17 97       	sbiw	r26, 0x07	; 7
    2a32:	20 e0       	ldi	r18, 0x00	; 0
    2a34:	30 e0       	ldi	r19, 0x00	; 0
    2a36:	40 e0       	ldi	r20, 0x00	; 0
    2a38:	68 e1       	ldi	r22, 0x18	; 24
    2a3a:	09 95       	icall
    2a3c:	08 95       	ret

00002a3e <u8x8_cad_EndTransfer>:
    2a3e:	dc 01       	movw	r26, r24
    2a40:	16 96       	adiw	r26, 0x06	; 6
    2a42:	ed 91       	ld	r30, X+
    2a44:	fc 91       	ld	r31, X
    2a46:	17 97       	sbiw	r26, 0x07	; 7
    2a48:	20 e0       	ldi	r18, 0x00	; 0
    2a4a:	30 e0       	ldi	r19, 0x00	; 0
    2a4c:	40 e0       	ldi	r20, 0x00	; 0
    2a4e:	69 e1       	ldi	r22, 0x19	; 25
    2a50:	09 95       	icall
    2a52:	08 95       	ret

00002a54 <u8x8_cad_SendSequence>:
    2a54:	ef 92       	push	r14
    2a56:	ff 92       	push	r15
    2a58:	0f 93       	push	r16
    2a5a:	1f 93       	push	r17
    2a5c:	cf 93       	push	r28
    2a5e:	df 93       	push	r29
    2a60:	1f 92       	push	r1
    2a62:	cd b7       	in	r28, 0x3d	; 61
    2a64:	de b7       	in	r29, 0x3e	; 62
    2a66:	7c 01       	movw	r14, r24
    2a68:	8b 01       	movw	r16, r22
    2a6a:	d8 01       	movw	r26, r16
    2a6c:	6d 91       	ld	r22, X+
    2a6e:	8d 01       	movw	r16, r26
    2a70:	67 31       	cpi	r22, 0x17	; 23
    2a72:	b9 f0       	breq	.+46     	; 0x2aa2 <u8x8_cad_SendSequence+0x4e>
    2a74:	18 f4       	brcc	.+6      	; 0x2a7c <u8x8_cad_SendSequence+0x28>
    2a76:	65 31       	cpi	r22, 0x15	; 21
    2a78:	30 f4       	brcc	.+12     	; 0x2a86 <u8x8_cad_SendSequence+0x32>
    2a7a:	33 c0       	rjmp	.+102    	; 0x2ae2 <u8x8_cad_SendSequence+0x8e>
    2a7c:	6a 31       	cpi	r22, 0x1A	; 26
    2a7e:	e8 f0       	brcs	.+58     	; 0x2aba <u8x8_cad_SendSequence+0x66>
    2a80:	6e 3f       	cpi	r22, 0xFE	; 254
    2a82:	31 f1       	breq	.+76     	; 0x2ad0 <u8x8_cad_SendSequence+0x7c>
    2a84:	2e c0       	rjmp	.+92     	; 0x2ae2 <u8x8_cad_SendSequence+0x8e>
    2a86:	fd 01       	movw	r30, r26
    2a88:	41 91       	ld	r20, Z+
    2a8a:	8f 01       	movw	r16, r30
    2a8c:	49 83       	std	Y+1, r20	; 0x01
    2a8e:	d7 01       	movw	r26, r14
    2a90:	16 96       	adiw	r26, 0x06	; 6
    2a92:	ed 91       	ld	r30, X+
    2a94:	fc 91       	ld	r31, X
    2a96:	17 97       	sbiw	r26, 0x07	; 7
    2a98:	20 e0       	ldi	r18, 0x00	; 0
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	c7 01       	movw	r24, r14
    2a9e:	09 95       	icall
    2aa0:	e4 cf       	rjmp	.-56     	; 0x2a6a <u8x8_cad_SendSequence+0x16>
    2aa2:	fd 01       	movw	r30, r26
    2aa4:	81 91       	ld	r24, Z+
    2aa6:	8f 01       	movw	r16, r30
    2aa8:	89 83       	std	Y+1, r24	; 0x01
    2aaa:	ae 01       	movw	r20, r28
    2aac:	4f 5f       	subi	r20, 0xFF	; 255
    2aae:	5f 4f       	sbci	r21, 0xFF	; 255
    2ab0:	61 e0       	ldi	r22, 0x01	; 1
    2ab2:	c7 01       	movw	r24, r14
    2ab4:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <u8x8_cad_SendData>
    2ab8:	d8 cf       	rjmp	.-80     	; 0x2a6a <u8x8_cad_SendSequence+0x16>
    2aba:	d7 01       	movw	r26, r14
    2abc:	16 96       	adiw	r26, 0x06	; 6
    2abe:	ed 91       	ld	r30, X+
    2ac0:	fc 91       	ld	r31, X
    2ac2:	17 97       	sbiw	r26, 0x07	; 7
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	40 e0       	ldi	r20, 0x00	; 0
    2aca:	c7 01       	movw	r24, r14
    2acc:	09 95       	icall
    2ace:	cd cf       	rjmp	.-102    	; 0x2a6a <u8x8_cad_SendSequence+0x16>
    2ad0:	fd 01       	movw	r30, r26
    2ad2:	41 91       	ld	r20, Z+
    2ad4:	8f 01       	movw	r16, r30
    2ad6:	49 83       	std	Y+1, r20	; 0x01
    2ad8:	69 e2       	ldi	r22, 0x29	; 41
    2ada:	c7 01       	movw	r24, r14
    2adc:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2ae0:	c4 cf       	rjmp	.-120    	; 0x2a6a <u8x8_cad_SendSequence+0x16>
    2ae2:	0f 90       	pop	r0
    2ae4:	df 91       	pop	r29
    2ae6:	cf 91       	pop	r28
    2ae8:	1f 91       	pop	r17
    2aea:	0f 91       	pop	r16
    2aec:	ff 90       	pop	r15
    2aee:	ef 90       	pop	r14
    2af0:	08 95       	ret

00002af2 <u8x8_cad_001>:
  convert to bytes by using 
    dc = 0 for commands and args and
    dc = 1 for data
*/
uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2af2:	ef 92       	push	r14
    2af4:	ff 92       	push	r15
    2af6:	0f 93       	push	r16
    2af8:	1f 93       	push	r17
    2afa:	cf 93       	push	r28
    2afc:	df 93       	push	r29
    2afe:	8c 01       	movw	r16, r24
    2b00:	c6 2f       	mov	r28, r22
    2b02:	d4 2f       	mov	r29, r20
    2b04:	79 01       	movw	r14, r18
  switch(msg)
    2b06:	66 31       	cpi	r22, 0x16	; 22
    2b08:	a1 f0       	breq	.+40     	; 0x2b32 <u8x8_cad_001+0x40>
    2b0a:	28 f4       	brcc	.+10     	; 0x2b16 <u8x8_cad_001+0x24>
    2b0c:	64 31       	cpi	r22, 0x14	; 20
    2b0e:	e9 f0       	breq	.+58     	; 0x2b4a <u8x8_cad_001+0x58>
    2b10:	65 31       	cpi	r22, 0x15	; 21
    2b12:	31 f0       	breq	.+12     	; 0x2b20 <u8x8_cad_001+0x2e>
    2b14:	25 c0       	rjmp	.+74     	; 0x2b60 <u8x8_cad_001+0x6e>
    2b16:	67 31       	cpi	r22, 0x17	; 23
    2b18:	a9 f0       	breq	.+42     	; 0x2b44 <u8x8_cad_001+0x52>
    2b1a:	6a 31       	cpi	r22, 0x1A	; 26
    2b1c:	08 f5       	brcc	.+66     	; 0x2b60 <u8x8_cad_001+0x6e>
    2b1e:	15 c0       	rjmp	.+42     	; 0x2b4a <u8x8_cad_001+0x58>
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
    2b20:	60 e0       	ldi	r22, 0x00	; 0
    2b22:	0e 94 31 14 	call	0x2862	; 0x2862 <u8x8_byte_SetDC>
      u8x8_byte_SendByte(u8x8, arg_int);
    2b26:	6d 2f       	mov	r22, r29
    2b28:	c8 01       	movw	r24, r16
    2b2a:	0e 94 46 14 	call	0x288c	; 0x288c <u8x8_byte_SendByte>
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
    2b2e:	81 e0       	ldi	r24, 0x01	; 1
  switch(msg)
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    2b30:	18 c0       	rjmp	.+48     	; 0x2b62 <u8x8_cad_001+0x70>
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 0);
    2b32:	60 e0       	ldi	r22, 0x00	; 0
    2b34:	0e 94 31 14 	call	0x2862	; 0x2862 <u8x8_byte_SetDC>
      u8x8_byte_SendByte(u8x8, arg_int);
    2b38:	6d 2f       	mov	r22, r29
    2b3a:	c8 01       	movw	r24, r16
    2b3c:	0e 94 46 14 	call	0x288c	; 0x288c <u8x8_byte_SendByte>
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
    2b40:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 0);
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    2b42:	0f c0       	rjmp	.+30     	; 0x2b62 <u8x8_cad_001+0x70>
    case U8X8_MSG_CAD_SEND_DATA:
      u8x8_byte_SetDC(u8x8, 1);
    2b44:	61 e0       	ldi	r22, 0x01	; 1
    2b46:	0e 94 31 14 	call	0x2862	; 0x2862 <u8x8_byte_SetDC>
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    2b4a:	d8 01       	movw	r26, r16
    2b4c:	18 96       	adiw	r26, 0x08	; 8
    2b4e:	ed 91       	ld	r30, X+
    2b50:	fc 91       	ld	r31, X
    2b52:	19 97       	sbiw	r26, 0x09	; 9
    2b54:	97 01       	movw	r18, r14
    2b56:	4d 2f       	mov	r20, r29
    2b58:	6c 2f       	mov	r22, r28
    2b5a:	c8 01       	movw	r24, r16
    2b5c:	09 95       	icall
    2b5e:	01 c0       	rjmp	.+2      	; 0x2b62 <u8x8_cad_001+0x70>
    default:
      return 0;
    2b60:	80 e0       	ldi	r24, 0x00	; 0
  }
  return 1;
}
    2b62:	df 91       	pop	r29
    2b64:	cf 91       	pop	r28
    2b66:	1f 91       	pop	r17
    2b68:	0f 91       	pop	r16
    2b6a:	ff 90       	pop	r15
    2b6c:	ef 90       	pop	r14
    2b6e:	08 95       	ret

00002b70 <u8x8_d_helper_display_setup_memory>:
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
}

void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
    2b70:	fc 01       	movw	r30, r24
    2b72:	71 83       	std	Z+1, r23	; 0x01
    2b74:	60 83       	st	Z, r22
    2b76:	fb 01       	movw	r30, r22
    2b78:	22 89       	ldd	r18, Z+18	; 0x12
    2b7a:	fc 01       	movw	r30, r24
    2b7c:	24 8b       	std	Z+20, r18	; 0x14
    2b7e:	08 95       	ret

00002b80 <u8x8_d_helper_display_init>:
    2b80:	cf 93       	push	r28
    2b82:	df 93       	push	r29
    2b84:	ec 01       	movw	r28, r24
    2b86:	ea 85       	ldd	r30, Y+10	; 0x0a
    2b88:	fb 85       	ldd	r31, Y+11	; 0x0b
    2b8a:	20 e0       	ldi	r18, 0x00	; 0
    2b8c:	30 e0       	ldi	r19, 0x00	; 0
    2b8e:	40 e0       	ldi	r20, 0x00	; 0
    2b90:	68 e2       	ldi	r22, 0x28	; 40
    2b92:	09 95       	icall
    2b94:	ee 81       	ldd	r30, Y+6	; 0x06
    2b96:	ff 81       	ldd	r31, Y+7	; 0x07
    2b98:	20 e0       	ldi	r18, 0x00	; 0
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	40 e0       	ldi	r20, 0x00	; 0
    2b9e:	64 e1       	ldi	r22, 0x14	; 20
    2ba0:	ce 01       	movw	r24, r28
    2ba2:	09 95       	icall
    2ba4:	41 e0       	ldi	r20, 0x01	; 1
    2ba6:	6b e4       	ldi	r22, 0x4B	; 75
    2ba8:	ce 01       	movw	r24, r28
    2baa:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bae:	e8 81       	ld	r30, Y
    2bb0:	f9 81       	ldd	r31, Y+1	; 0x01
    2bb2:	44 81       	ldd	r20, Z+4	; 0x04
    2bb4:	69 e2       	ldi	r22, 0x29	; 41
    2bb6:	ce 01       	movw	r24, r28
    2bb8:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bbc:	40 e0       	ldi	r20, 0x00	; 0
    2bbe:	6b e4       	ldi	r22, 0x4B	; 75
    2bc0:	ce 01       	movw	r24, r28
    2bc2:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bc6:	e8 81       	ld	r30, Y
    2bc8:	f9 81       	ldd	r31, Y+1	; 0x01
    2bca:	44 81       	ldd	r20, Z+4	; 0x04
    2bcc:	69 e2       	ldi	r22, 0x29	; 41
    2bce:	ce 01       	movw	r24, r28
    2bd0:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bd4:	41 e0       	ldi	r20, 0x01	; 1
    2bd6:	6b e4       	ldi	r22, 0x4B	; 75
    2bd8:	ce 01       	movw	r24, r28
    2bda:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bde:	e8 81       	ld	r30, Y
    2be0:	f9 81       	ldd	r31, Y+1	; 0x01
    2be2:	45 81       	ldd	r20, Z+5	; 0x05
    2be4:	69 e2       	ldi	r22, 0x29	; 41
    2be6:	ce 01       	movw	r24, r28
    2be8:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <u8x8_gpio_call>
    2bec:	df 91       	pop	r29
    2bee:	cf 91       	pop	r28
    2bf0:	08 95       	ret

00002bf2 <u8x8_DrawTile>:
    2bf2:	0f 93       	push	r16
    2bf4:	1f 93       	push	r17
    2bf6:	cf 93       	push	r28
    2bf8:	df 93       	push	r29
    2bfa:	00 d0       	rcall	.+0      	; 0x2bfc <u8x8_DrawTile+0xa>
    2bfc:	00 d0       	rcall	.+0      	; 0x2bfe <u8x8_DrawTile+0xc>
    2bfe:	1f 92       	push	r1
    2c00:	cd b7       	in	r28, 0x3d	; 61
    2c02:	de b7       	in	r29, 0x3e	; 62
    2c04:	6c 83       	std	Y+4, r22	; 0x04
    2c06:	4d 83       	std	Y+5, r20	; 0x05
    2c08:	2b 83       	std	Y+3, r18	; 0x03
    2c0a:	1a 83       	std	Y+2, r17	; 0x02
    2c0c:	09 83       	std	Y+1, r16	; 0x01
    2c0e:	dc 01       	movw	r26, r24
    2c10:	14 96       	adiw	r26, 0x04	; 4
    2c12:	ed 91       	ld	r30, X+
    2c14:	fc 91       	ld	r31, X
    2c16:	15 97       	sbiw	r26, 0x05	; 5
    2c18:	9e 01       	movw	r18, r28
    2c1a:	2f 5f       	subi	r18, 0xFF	; 255
    2c1c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c1e:	41 e0       	ldi	r20, 0x01	; 1
    2c20:	6f e0       	ldi	r22, 0x0F	; 15
    2c22:	09 95       	icall
    2c24:	0f 90       	pop	r0
    2c26:	0f 90       	pop	r0
    2c28:	0f 90       	pop	r0
    2c2a:	0f 90       	pop	r0
    2c2c:	0f 90       	pop	r0
    2c2e:	df 91       	pop	r29
    2c30:	cf 91       	pop	r28
    2c32:	1f 91       	pop	r17
    2c34:	0f 91       	pop	r16
    2c36:	08 95       	ret

00002c38 <u8x8_SetupMemory>:
    2c38:	dc 01       	movw	r26, r24
    2c3a:	14 96       	adiw	r26, 0x04	; 4
    2c3c:	ed 91       	ld	r30, X+
    2c3e:	fc 91       	ld	r31, X
    2c40:	15 97       	sbiw	r26, 0x05	; 5
    2c42:	20 e0       	ldi	r18, 0x00	; 0
    2c44:	30 e0       	ldi	r19, 0x00	; 0
    2c46:	40 e0       	ldi	r20, 0x00	; 0
    2c48:	69 e0       	ldi	r22, 0x09	; 9
    2c4a:	09 95       	icall
    2c4c:	08 95       	ret

00002c4e <u8x8_InitDisplay>:
    2c4e:	dc 01       	movw	r26, r24
    2c50:	14 96       	adiw	r26, 0x04	; 4
    2c52:	ed 91       	ld	r30, X+
    2c54:	fc 91       	ld	r31, X
    2c56:	15 97       	sbiw	r26, 0x05	; 5
    2c58:	20 e0       	ldi	r18, 0x00	; 0
    2c5a:	30 e0       	ldi	r19, 0x00	; 0
    2c5c:	40 e0       	ldi	r20, 0x00	; 0
    2c5e:	6a e0       	ldi	r22, 0x0A	; 10
    2c60:	09 95       	icall
    2c62:	08 95       	ret

00002c64 <u8x8_SetPowerSave>:
    2c64:	46 2f       	mov	r20, r22
    2c66:	dc 01       	movw	r26, r24
    2c68:	14 96       	adiw	r26, 0x04	; 4
    2c6a:	ed 91       	ld	r30, X+
    2c6c:	fc 91       	ld	r31, X
    2c6e:	15 97       	sbiw	r26, 0x05	; 5
    2c70:	20 e0       	ldi	r18, 0x00	; 0
    2c72:	30 e0       	ldi	r19, 0x00	; 0
    2c74:	6b e0       	ldi	r22, 0x0B	; 11
    2c76:	09 95       	icall
    2c78:	08 95       	ret

00002c7a <u8x8_RefreshDisplay>:
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    2c7a:	dc 01       	movw	r26, r24
    2c7c:	14 96       	adiw	r26, 0x04	; 4
    2c7e:	ed 91       	ld	r30, X+
    2c80:	fc 91       	ld	r31, X
    2c82:	15 97       	sbiw	r26, 0x05	; 5
    2c84:	20 e0       	ldi	r18, 0x00	; 0
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	40 e0       	ldi	r20, 0x00	; 0
    2c8a:	60 e1       	ldi	r22, 0x10	; 16
    2c8c:	09 95       	icall
    2c8e:	08 95       	ret

00002c90 <u8x8_d_ssd1306_sh1106_generic>:
      break;
    default:
      return 0;
  }
  return 1;
}
    2c90:	ef 92       	push	r14
    2c92:	ff 92       	push	r15
    2c94:	0f 93       	push	r16
    2c96:	1f 93       	push	r17
    2c98:	cf 93       	push	r28
    2c9a:	df 93       	push	r29
    2c9c:	8c 01       	movw	r16, r24
    2c9e:	c4 2f       	mov	r28, r20
    2ca0:	79 01       	movw	r14, r18
    2ca2:	6d 30       	cpi	r22, 0x0D	; 13
    2ca4:	b9 f0       	breq	.+46     	; 0x2cd4 <u8x8_d_ssd1306_sh1106_generic+0x44>
    2ca6:	18 f4       	brcc	.+6      	; 0x2cae <u8x8_d_ssd1306_sh1106_generic+0x1e>
    2ca8:	6b 30       	cpi	r22, 0x0B	; 11
    2caa:	31 f0       	breq	.+12     	; 0x2cb8 <u8x8_d_ssd1306_sh1106_generic+0x28>
    2cac:	72 c0       	rjmp	.+228    	; 0x2d92 <u8x8_d_ssd1306_sh1106_generic+0x102>
    2cae:	6e 30       	cpi	r22, 0x0E	; 14
    2cb0:	69 f1       	breq	.+90     	; 0x2d0c <u8x8_d_ssd1306_sh1106_generic+0x7c>
    2cb2:	6f 30       	cpi	r22, 0x0F	; 15
    2cb4:	d1 f1       	breq	.+116    	; 0x2d2a <u8x8_d_ssd1306_sh1106_generic+0x9a>
    2cb6:	6d c0       	rjmp	.+218    	; 0x2d92 <u8x8_d_ssd1306_sh1106_generic+0x102>
    2cb8:	41 11       	cpse	r20, r1
    2cba:	06 c0       	rjmp	.+12     	; 0x2cc8 <u8x8_d_ssd1306_sh1106_generic+0x38>
    2cbc:	64 e3       	ldi	r22, 0x34	; 52
    2cbe:	72 e0       	ldi	r23, 0x02	; 2
    2cc0:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <u8x8_cad_SendSequence>
    2cc4:	81 e0       	ldi	r24, 0x01	; 1
    2cc6:	66 c0       	rjmp	.+204    	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2cc8:	6f e2       	ldi	r22, 0x2F	; 47
    2cca:	72 e0       	ldi	r23, 0x02	; 2
    2ccc:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <u8x8_cad_SendSequence>
    2cd0:	81 e0       	ldi	r24, 0x01	; 1
    2cd2:	60 c0       	rjmp	.+192    	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2cd4:	41 11       	cpse	r20, r1
    2cd6:	0d c0       	rjmp	.+26     	; 0x2cf2 <u8x8_d_ssd1306_sh1106_generic+0x62>
    2cd8:	68 e2       	ldi	r22, 0x28	; 40
    2cda:	72 e0       	ldi	r23, 0x02	; 2
    2cdc:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <u8x8_cad_SendSequence>
    2ce0:	d8 01       	movw	r26, r16
    2ce2:	ed 91       	ld	r30, X+
    2ce4:	fc 91       	ld	r31, X
    2ce6:	11 97       	sbiw	r26, 0x01	; 1
    2ce8:	82 89       	ldd	r24, Z+18	; 0x12
    2cea:	54 96       	adiw	r26, 0x14	; 20
    2cec:	8c 93       	st	X, r24
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	51 c0       	rjmp	.+162    	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2cf2:	61 e2       	ldi	r22, 0x21	; 33
    2cf4:	72 e0       	ldi	r23, 0x02	; 2
    2cf6:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <u8x8_cad_SendSequence>
    2cfa:	d8 01       	movw	r26, r16
    2cfc:	ed 91       	ld	r30, X+
    2cfe:	fc 91       	ld	r31, X
    2d00:	11 97       	sbiw	r26, 0x01	; 1
    2d02:	83 89       	ldd	r24, Z+19	; 0x13
    2d04:	54 96       	adiw	r26, 0x14	; 20
    2d06:	8c 93       	st	X, r24
    2d08:	81 e0       	ldi	r24, 0x01	; 1
    2d0a:	44 c0       	rjmp	.+136    	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2d0c:	0e 94 14 15 	call	0x2a28	; 0x2a28 <u8x8_cad_StartTransfer>
    2d10:	61 e8       	ldi	r22, 0x81	; 129
    2d12:	c8 01       	movw	r24, r16
    2d14:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <u8x8_cad_SendCmd>
    2d18:	6c 2f       	mov	r22, r28
    2d1a:	c8 01       	movw	r24, r16
    2d1c:	0e 94 ff 14 	call	0x29fe	; 0x29fe <u8x8_cad_SendArg>
    2d20:	c8 01       	movw	r24, r16
    2d22:	0e 94 1f 15 	call	0x2a3e	; 0x2a3e <u8x8_cad_EndTransfer>
    2d26:	81 e0       	ldi	r24, 0x01	; 1
    2d28:	35 c0       	rjmp	.+106    	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2d2a:	0e 94 14 15 	call	0x2a28	; 0x2a28 <u8x8_cad_StartTransfer>
    2d2e:	f7 01       	movw	r30, r14
    2d30:	d3 81       	ldd	r29, Z+3	; 0x03
    2d32:	dd 0f       	add	r29, r29
    2d34:	dd 0f       	add	r29, r29
    2d36:	dd 0f       	add	r29, r29
    2d38:	d8 01       	movw	r26, r16
    2d3a:	54 96       	adiw	r26, 0x14	; 20
    2d3c:	8c 91       	ld	r24, X
    2d3e:	d8 0f       	add	r29, r24
    2d40:	60 e4       	ldi	r22, 0x40	; 64
    2d42:	c8 01       	movw	r24, r16
    2d44:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <u8x8_cad_SendCmd>
    2d48:	6d 2f       	mov	r22, r29
    2d4a:	62 95       	swap	r22
    2d4c:	6f 70       	andi	r22, 0x0F	; 15
    2d4e:	60 61       	ori	r22, 0x10	; 16
    2d50:	c8 01       	movw	r24, r16
    2d52:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <u8x8_cad_SendCmd>
    2d56:	6d 2f       	mov	r22, r29
    2d58:	6f 70       	andi	r22, 0x0F	; 15
    2d5a:	c8 01       	movw	r24, r16
    2d5c:	0e 94 ff 14 	call	0x29fe	; 0x29fe <u8x8_cad_SendArg>
    2d60:	f7 01       	movw	r30, r14
    2d62:	64 81       	ldd	r22, Z+4	; 0x04
    2d64:	60 6b       	ori	r22, 0xB0	; 176
    2d66:	c8 01       	movw	r24, r16
    2d68:	0e 94 ff 14 	call	0x29fe	; 0x29fe <u8x8_cad_SendArg>
    2d6c:	d7 01       	movw	r26, r14
    2d6e:	12 96       	adiw	r26, 0x02	; 2
    2d70:	6c 91       	ld	r22, X
    2d72:	12 97       	sbiw	r26, 0x02	; 2
    2d74:	4d 91       	ld	r20, X+
    2d76:	5c 91       	ld	r21, X
    2d78:	66 0f       	add	r22, r22
    2d7a:	66 0f       	add	r22, r22
    2d7c:	66 0f       	add	r22, r22
    2d7e:	c8 01       	movw	r24, r16
    2d80:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <u8x8_cad_SendData>
    2d84:	c1 50       	subi	r28, 0x01	; 1
    2d86:	91 f7       	brne	.-28     	; 0x2d6c <u8x8_d_ssd1306_sh1106_generic+0xdc>
    2d88:	c8 01       	movw	r24, r16
    2d8a:	0e 94 1f 15 	call	0x2a3e	; 0x2a3e <u8x8_cad_EndTransfer>
    2d8e:	81 e0       	ldi	r24, 0x01	; 1
    2d90:	01 c0       	rjmp	.+2      	; 0x2d94 <u8x8_d_ssd1306_sh1106_generic+0x104>
    2d92:	80 e0       	ldi	r24, 0x00	; 0
    2d94:	df 91       	pop	r29
    2d96:	cf 91       	pop	r28
    2d98:	1f 91       	pop	r17
    2d9a:	0f 91       	pop	r16
    2d9c:	ff 90       	pop	r15
    2d9e:	ef 90       	pop	r14
    2da0:	08 95       	ret

00002da2 <u8x8_d_sh1106_128x64_noname>:
  /* pixel_width = */ 128,
  /* pixel_height = */ 64
};

uint8_t u8x8_d_sh1106_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2da2:	0f 93       	push	r16
    2da4:	1f 93       	push	r17
    2da6:	cf 93       	push	r28
    2da8:	8c 01       	movw	r16, r24
    2daa:	c6 2f       	mov	r28, r22
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    2dac:	0e 94 48 16 	call	0x2c90	; 0x2c90 <u8x8_d_ssd1306_sh1106_generic>
    2db0:	81 11       	cpse	r24, r1
    2db2:	15 c0       	rjmp	.+42     	; 0x2dde <u8x8_d_sh1106_128x64_noname+0x3c>
    return 1;
  
  switch(msg)
    2db4:	c9 30       	cpi	r28, 0x09	; 9
    2db6:	61 f0       	breq	.+24     	; 0x2dd0 <u8x8_d_sh1106_128x64_noname+0x2e>
    2db8:	ca 30       	cpi	r28, 0x0A	; 10
    2dba:	91 f4       	brne	.+36     	; 0x2de0 <u8x8_d_sh1106_128x64_noname+0x3e>
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
    2dbc:	c8 01       	movw	r24, r16
    2dbe:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <u8x8_d_helper_display_init>
      /* maybe use a better init sequence */
      /* https://www.mikrocontroller.net/topic/431371 */
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
    2dc2:	69 e3       	ldi	r22, 0x39	; 57
    2dc4:	72 e0       	ldi	r23, 0x02	; 2
    2dc6:	c8 01       	movw	r24, r16
    2dc8:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <u8x8_cad_SendSequence>
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
      break;
    default:
      return 0;
  }
  return 1;
    2dcc:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_d_helper_display_init(u8x8);
      /* maybe use a better init sequence */
      /* https://www.mikrocontroller.net/topic/431371 */
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    2dce:	08 c0       	rjmp	.+16     	; 0x2de0 <u8x8_d_sh1106_128x64_noname+0x3e>
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
    2dd0:	69 e0       	ldi	r22, 0x09	; 9
    2dd2:	72 e0       	ldi	r23, 0x02	; 2
    2dd4:	c8 01       	movw	r24, r16
    2dd6:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <u8x8_d_helper_display_setup_memory>
      break;
    default:
      return 0;
  }
  return 1;
    2dda:	81 e0       	ldi	r24, 0x01	; 1
      /* the new sequence is added in the winstar constructor (see below), this is kept untouched */
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_sh1106_128x64_noname_display_info);
      break;
    2ddc:	01 c0       	rjmp	.+2      	; 0x2de0 <u8x8_d_sh1106_128x64_noname+0x3e>
};

uint8_t u8x8_d_sh1106_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
    2dde:	81 e0       	ldi	r24, 0x01	; 1
    default:
      return 0;
  }
  return 1;
    
}
    2de0:	cf 91       	pop	r28
    2de2:	1f 91       	pop	r17
    2de4:	0f 91       	pop	r16
    2de6:	08 95       	ret

00002de8 <u8x8_gpio_call>:
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    2de8:	dc 01       	movw	r26, r24
    2dea:	1a 96       	adiw	r26, 0x0a	; 10
    2dec:	ed 91       	ld	r30, X+
    2dee:	fc 91       	ld	r31, X
    2df0:	1b 97       	sbiw	r26, 0x0b	; 11
    2df2:	20 e0       	ldi	r18, 0x00	; 0
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	09 95       	icall
    2df8:	08 95       	ret

00002dfa <u8x8_dummy_cb>:
      u8x8_d_helper_display_init(u8x8);
      break;
  }
  /* the null device callback will succeed for all messages */
  return 1;
}
    2dfa:	80 e0       	ldi	r24, 0x00	; 0
    2dfc:	08 95       	ret

00002dfe <u8x8_SetupDefaults>:
    Setup u8x8
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    2dfe:	fc 01       	movw	r30, r24
    u8x8->display_info = NULL;
    2e00:	11 82       	std	Z+1, r1	; 0x01
    2e02:	10 82       	st	Z, r1
    u8x8->display_cb = u8x8_dummy_cb;
    2e04:	8d ef       	ldi	r24, 0xFD	; 253
    2e06:	96 e1       	ldi	r25, 0x16	; 22
    2e08:	95 83       	std	Z+5, r25	; 0x05
    2e0a:	84 83       	std	Z+4, r24	; 0x04
    u8x8->cad_cb = u8x8_dummy_cb;
    2e0c:	97 83       	std	Z+7, r25	; 0x07
    2e0e:	86 83       	std	Z+6, r24	; 0x06
    u8x8->byte_cb = u8x8_dummy_cb;
    2e10:	91 87       	std	Z+9, r25	; 0x09
    2e12:	80 87       	std	Z+8, r24	; 0x08
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    2e14:	93 87       	std	Z+11, r25	; 0x0b
    2e16:	82 87       	std	Z+10, r24	; 0x0a
    u8x8->is_font_inverse_mode = 0;
    2e18:	15 8a       	std	Z+21, r1	; 0x15
    //u8x8->device_address = 0;
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    2e1a:	10 8e       	std	Z+24, r1	; 0x18
    u8x8->bus_clock = 0;		/* issue 769 */
    2e1c:	14 86       	std	Z+12, r1	; 0x0c
    2e1e:	15 86       	std	Z+13, r1	; 0x0d
    2e20:	16 86       	std	Z+14, r1	; 0x0e
    2e22:	17 86       	std	Z+15, r1	; 0x0f
    u8x8->i2c_address = 255;
    2e24:	8f ef       	ldi	r24, 0xFF	; 255
    2e26:	86 8b       	std	Z+22, r24	; 0x16
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    2e28:	82 8f       	std	Z+26, r24	; 0x1a
    2e2a:	08 95       	ret

00002e2c <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    2e2c:	af 92       	push	r10
    2e2e:	bf 92       	push	r11
    2e30:	cf 92       	push	r12
    2e32:	df 92       	push	r13
    2e34:	ef 92       	push	r14
    2e36:	ff 92       	push	r15
    2e38:	0f 93       	push	r16
    2e3a:	1f 93       	push	r17
    2e3c:	cf 93       	push	r28
    2e3e:	df 93       	push	r29
    2e40:	ec 01       	movw	r28, r24
    2e42:	5b 01       	movw	r10, r22
    2e44:	6a 01       	movw	r12, r20
    2e46:	79 01       	movw	r14, r18
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    2e48:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    2e4c:	bd 82       	std	Y+5, r11	; 0x05
    2e4e:	ac 82       	std	Y+4, r10	; 0x04
  u8x8->cad_cb = cad_cb;
    2e50:	df 82       	std	Y+7, r13	; 0x07
    2e52:	ce 82       	std	Y+6, r12	; 0x06
  u8x8->byte_cb = byte_cb;
    2e54:	f9 86       	std	Y+9, r15	; 0x09
    2e56:	e8 86       	std	Y+8, r14	; 0x08
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    2e58:	1b 87       	std	Y+11, r17	; 0x0b
    2e5a:	0a 87       	std	Y+10, r16	; 0x0a

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    2e5c:	ce 01       	movw	r24, r28
    2e5e:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <u8x8_SetupMemory>
}
    2e62:	df 91       	pop	r29
    2e64:	cf 91       	pop	r28
    2e66:	1f 91       	pop	r17
    2e68:	0f 91       	pop	r16
    2e6a:	ff 90       	pop	r15
    2e6c:	ef 90       	pop	r14
    2e6e:	df 90       	pop	r13
    2e70:	cf 90       	pop	r12
    2e72:	bf 90       	pop	r11
    2e74:	af 90       	pop	r10
    2e76:	08 95       	ret

00002e78 <u8x8_avr_delay>:

uint8_t u8x8_avr_delay(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
	uint8_t cycles;

	switch(msg)
    2e78:	6a 32       	cpi	r22, 0x2A	; 42
    2e7a:	19 f1       	breq	.+70     	; 0x2ec2 <u8x8_avr_delay+0x4a>
    2e7c:	18 f4       	brcc	.+6      	; 0x2e84 <u8x8_avr_delay+0xc>
    2e7e:	69 32       	cpi	r22, 0x29	; 41
    2e80:	89 f1       	breq	.+98     	; 0x2ee4 <u8x8_avr_delay+0x6c>
    2e82:	04 c0       	rjmp	.+8      	; 0x2e8c <u8x8_avr_delay+0x14>
    2e84:	6b 32       	cpi	r22, 0x2B	; 43
    2e86:	21 f0       	breq	.+8      	; 0x2e90 <u8x8_avr_delay+0x18>
    2e88:	6c 32       	cpi	r22, 0x2C	; 44
    2e8a:	a9 f1       	breq	.+106    	; 0x2ef6 <u8x8_avr_delay+0x7e>
		case U8X8_MSG_DELAY_MILLI:      // delay arg_int * 1 milli second
			for(int i=0 ; i < arg_int ; i++)
				_delay_ms(1);
			break;
		default:
			return 0;
    2e8c:	80 e0       	ldi	r24, 0x00	; 0
    2e8e:	08 95       	ret
#define CALL_CYCLES 26UL
#define CALC_CYCLES 4UL
#define RETURN_CYCLES 4UL
#define CYCLES_PER_LOOP 4UL

			cycles = (100UL * arg_int) / (P_CPU_NS * CYCLES_PER_LOOP);
    2e90:	24 2f       	mov	r18, r20
    2e92:	30 e0       	ldi	r19, 0x00	; 0
    2e94:	a4 e6       	ldi	r26, 0x64	; 100
    2e96:	b0 e0       	ldi	r27, 0x00	; 0
    2e98:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <__umulhisi3>
    2e9c:	24 ef       	ldi	r18, 0xF4	; 244
    2e9e:	31 e0       	ldi	r19, 0x01	; 1
    2ea0:	40 e0       	ldi	r20, 0x00	; 0
    2ea2:	50 e0       	ldi	r21, 0x00	; 0
    2ea4:	0e 94 da 18 	call	0x31b4	; 0x31b4 <__udivmodsi4>

			if(cycles > CALL_CYCLES + RETURN_CYCLES + CALC_CYCLES) 
    2ea8:	23 32       	cpi	r18, 0x23	; 35
    2eaa:	38 f5       	brcc	.+78     	; 0x2efa <u8x8_avr_delay+0x82>
				break;

			__asm__ __volatile__ (
    2eac:	82 2f       	mov	r24, r18
    2eae:	01 97       	sbiw	r24, 0x01	; 1
    2eb0:	f1 f7       	brne	.-4      	; 0x2eae <u8x8_avr_delay+0x36>
				_delay_ms(1);
			break;
		default:
			return 0;
	}
	return 1;
    2eb2:	81 e0       	ldi	r24, 0x01	; 1

			__asm__ __volatile__ (
			"1: sbiw %0,1" "\n\t" // 2 cycles
			"brne 1b" : "=w" (cycles) : "0" (cycles) // 2 cycles
			);
			break;
    2eb4:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2eb6:	2a e1       	ldi	r18, 0x1A	; 26
    2eb8:	2a 95       	dec	r18
    2eba:	f1 f7       	brne	.-4      	; 0x2eb8 <u8x8_avr_delay+0x40>
    2ebc:	00 c0       	rjmp	.+0      	; 0x2ebe <u8x8_avr_delay+0x46>
		case U8X8_MSG_DELAY_10MICRO:    // delay arg_int * 10 micro seconds
			for(int i=0 ; i < arg_int ; i++)
    2ebe:	01 96       	adiw	r24, 0x01	; 1
    2ec0:	02 c0       	rjmp	.+4      	; 0x2ec6 <u8x8_avr_delay+0x4e>

uint8_t u8x8_avr_delay(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
	uint8_t cycles;

	switch(msg)
    2ec2:	80 e0       	ldi	r24, 0x00	; 0
    2ec4:	90 e0       	ldi	r25, 0x00	; 0
			"1: sbiw %0,1" "\n\t" // 2 cycles
			"brne 1b" : "=w" (cycles) : "0" (cycles) // 2 cycles
			);
			break;
		case U8X8_MSG_DELAY_10MICRO:    // delay arg_int * 10 micro seconds
			for(int i=0 ; i < arg_int ; i++)
    2ec6:	24 2f       	mov	r18, r20
    2ec8:	30 e0       	ldi	r19, 0x00	; 0
    2eca:	82 17       	cp	r24, r18
    2ecc:	93 07       	cpc	r25, r19
    2ece:	9c f3       	brlt	.-26     	; 0x2eb6 <u8x8_avr_delay+0x3e>
				_delay_ms(1);
			break;
		default:
			return 0;
	}
	return 1;
    2ed0:	81 e0       	ldi	r24, 0x01	; 1
    2ed2:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2ed4:	ef ec       	ldi	r30, 0xCF	; 207
    2ed6:	f7 e0       	ldi	r31, 0x07	; 7
    2ed8:	31 97       	sbiw	r30, 0x01	; 1
    2eda:	f1 f7       	brne	.-4      	; 0x2ed8 <u8x8_avr_delay+0x60>
    2edc:	00 c0       	rjmp	.+0      	; 0x2ede <u8x8_avr_delay+0x66>
    2ede:	00 00       	nop
		case U8X8_MSG_DELAY_10MICRO:    // delay arg_int * 10 micro seconds
			for(int i=0 ; i < arg_int ; i++)
				_delay_us(10);
			break;
		case U8X8_MSG_DELAY_MILLI:      // delay arg_int * 1 milli second
			for(int i=0 ; i < arg_int ; i++)
    2ee0:	01 96       	adiw	r24, 0x01	; 1
    2ee2:	02 c0       	rjmp	.+4      	; 0x2ee8 <u8x8_avr_delay+0x70>

uint8_t u8x8_avr_delay(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
	uint8_t cycles;

	switch(msg)
    2ee4:	80 e0       	ldi	r24, 0x00	; 0
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
		case U8X8_MSG_DELAY_10MICRO:    // delay arg_int * 10 micro seconds
			for(int i=0 ; i < arg_int ; i++)
				_delay_us(10);
			break;
		case U8X8_MSG_DELAY_MILLI:      // delay arg_int * 1 milli second
			for(int i=0 ; i < arg_int ; i++)
    2ee8:	24 2f       	mov	r18, r20
    2eea:	30 e0       	ldi	r19, 0x00	; 0
    2eec:	82 17       	cp	r24, r18
    2eee:	93 07       	cpc	r25, r19
    2ef0:	8c f3       	brlt	.-30     	; 0x2ed4 <u8x8_avr_delay+0x5c>
				_delay_ms(1);
			break;
		default:
			return 0;
	}
	return 1;
    2ef2:	81 e0       	ldi	r24, 0x01	; 1
    2ef4:	08 95       	ret
    2ef6:	81 e0       	ldi	r24, 0x01	; 1
    2ef8:	08 95       	ret
    2efa:	81 e0       	ldi	r24, 0x01	; 1
}
    2efc:	08 95       	ret

00002efe <u8x8_avr_gpio_and_delay>:


uint8_t u8x8_avr_gpio_and_delay(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2efe:	cf 93       	push	r28
    2f00:	df 93       	push	r29
	// Re-use library for delays

	switch(msg)
    2f02:	61 34       	cpi	r22, 0x41	; 65
    2f04:	41 f1       	breq	.+80     	; 0x2f56 <u8x8_avr_gpio_and_delay+0x58>
    2f06:	28 f4       	brcc	.+10     	; 0x2f12 <u8x8_avr_gpio_and_delay+0x14>
    2f08:	68 32       	cpi	r22, 0x28	; 40
    2f0a:	59 f0       	breq	.+22     	; 0x2f22 <u8x8_avr_gpio_and_delay+0x24>
    2f0c:	60 34       	cpi	r22, 0x40	; 64
    2f0e:	c9 f0       	breq	.+50     	; 0x2f42 <u8x8_avr_gpio_and_delay+0x44>
    2f10:	4a c0       	rjmp	.+148    	; 0x2fa6 <u8x8_avr_gpio_and_delay+0xa8>
    2f12:	6a 34       	cpi	r22, 0x4A	; 74
    2f14:	a1 f1       	breq	.+104    	; 0x2f7e <u8x8_avr_gpio_and_delay+0x80>
    2f16:	6b 34       	cpi	r22, 0x4B	; 75
    2f18:	e1 f1       	breq	.+120    	; 0x2f92 <u8x8_avr_gpio_and_delay+0x94>
    2f1a:	69 34       	cpi	r22, 0x49	; 73
    2f1c:	09 f0       	breq	.+2      	; 0x2f20 <u8x8_avr_gpio_and_delay+0x22>
    2f1e:	43 c0       	rjmp	.+134    	; 0x2fa6 <u8x8_avr_gpio_and_delay+0xa8>
    2f20:	24 c0       	rjmp	.+72     	; 0x2f6a <u8x8_avr_gpio_and_delay+0x6c>
	{
		case U8X8_MSG_GPIO_AND_DELAY_INIT:  // called once during init phase of u8g2/u8x8
			DISPLAY_CLK_DIR |= 1<<DISPLAY_CLK_PIN;
    2f22:	84 b1       	in	r24, 0x04	; 4
    2f24:	80 62       	ori	r24, 0x20	; 32
    2f26:	84 b9       	out	0x04, r24	; 4
			DISPLAY_DATA_DIR |= 1<<DISPLAY_DATA_PIN;
    2f28:	84 b1       	in	r24, 0x04	; 4
    2f2a:	88 60       	ori	r24, 0x08	; 8
    2f2c:	84 b9       	out	0x04, r24	; 4
			DISPLAY_CS_DIR |= 1<<DISPLAY_CS_PIN;
    2f2e:	84 b1       	in	r24, 0x04	; 4
    2f30:	84 60       	ori	r24, 0x04	; 4
    2f32:	84 b9       	out	0x04, r24	; 4
			DISPLAY_DC_DIR |= 1<<DISPLAY_DC_PIN;
    2f34:	84 b1       	in	r24, 0x04	; 4
    2f36:	82 60       	ori	r24, 0x02	; 2
    2f38:	84 b9       	out	0x04, r24	; 4
			DISPLAY_RESET_DIR |= 1<<DISPLAY_RESET_PIN;
    2f3a:	84 b1       	in	r24, 0x04	; 4
    2f3c:	81 60       	ori	r24, 0x01	; 1
    2f3e:	84 b9       	out	0x04, r24	; 4
			break;              // can be used to setup pins
    2f40:	39 c0       	rjmp	.+114    	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
		case U8X8_MSG_GPIO_SPI_CLOCK:        // Clock pin: Output level in arg_int
			if(arg_int)
    2f42:	44 23       	and	r20, r20
    2f44:	21 f0       	breq	.+8      	; 0x2f4e <u8x8_avr_gpio_and_delay+0x50>
				DISPLAY_CLK_PORT |= (1<<DISPLAY_CLK_PIN);
    2f46:	85 b1       	in	r24, 0x05	; 5
    2f48:	80 62       	ori	r24, 0x20	; 32
    2f4a:	85 b9       	out	0x05, r24	; 5
    2f4c:	33 c0       	rjmp	.+102    	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			else
				DISPLAY_CLK_PORT &= ~(1<<DISPLAY_CLK_PIN);
    2f4e:	85 b1       	in	r24, 0x05	; 5
    2f50:	8f 7d       	andi	r24, 0xDF	; 223
    2f52:	85 b9       	out	0x05, r24	; 5
    2f54:	2f c0       	rjmp	.+94     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			break;
		case U8X8_MSG_GPIO_SPI_DATA:        // MOSI pin: Output level in arg_int
			if(arg_int)
    2f56:	44 23       	and	r20, r20
    2f58:	21 f0       	breq	.+8      	; 0x2f62 <u8x8_avr_gpio_and_delay+0x64>
				DISPLAY_DATA_PORT |= (1<<DISPLAY_DATA_PIN);
    2f5a:	85 b1       	in	r24, 0x05	; 5
    2f5c:	88 60       	ori	r24, 0x08	; 8
    2f5e:	85 b9       	out	0x05, r24	; 5
    2f60:	29 c0       	rjmp	.+82     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			else
				DISPLAY_DATA_PORT &= ~(1<<DISPLAY_DATA_PIN);
    2f62:	85 b1       	in	r24, 0x05	; 5
    2f64:	87 7f       	andi	r24, 0xF7	; 247
    2f66:	85 b9       	out	0x05, r24	; 5
    2f68:	25 c0       	rjmp	.+74     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			break;
		case U8X8_MSG_GPIO_CS:        // CS (chip select) pin: Output level in arg_int
			if(arg_int)
    2f6a:	44 23       	and	r20, r20
    2f6c:	21 f0       	breq	.+8      	; 0x2f76 <u8x8_avr_gpio_and_delay+0x78>
				DISPLAY_CS_PORT |= (1<<DISPLAY_CS_PIN);
    2f6e:	85 b1       	in	r24, 0x05	; 5
    2f70:	84 60       	ori	r24, 0x04	; 4
    2f72:	85 b9       	out	0x05, r24	; 5
    2f74:	1f c0       	rjmp	.+62     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			else
				DISPLAY_CS_PORT &= ~(1<<DISPLAY_CS_PIN);
    2f76:	85 b1       	in	r24, 0x05	; 5
    2f78:	8b 7f       	andi	r24, 0xFB	; 251
    2f7a:	85 b9       	out	0x05, r24	; 5
    2f7c:	1b c0       	rjmp	.+54     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			break;
		case U8X8_MSG_GPIO_DC:        // DC (data/cmd, A0, register select) pin: Output level in arg_int
			if(arg_int)
    2f7e:	44 23       	and	r20, r20
    2f80:	21 f0       	breq	.+8      	; 0x2f8a <u8x8_avr_gpio_and_delay+0x8c>
				DISPLAY_DC_PORT |= (1<<DISPLAY_DC_PIN);
    2f82:	85 b1       	in	r24, 0x05	; 5
    2f84:	82 60       	ori	r24, 0x02	; 2
    2f86:	85 b9       	out	0x05, r24	; 5
    2f88:	15 c0       	rjmp	.+42     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			else
				DISPLAY_DC_PORT &= ~(1<<DISPLAY_DC_PIN);
    2f8a:	85 b1       	in	r24, 0x05	; 5
    2f8c:	8d 7f       	andi	r24, 0xFD	; 253
    2f8e:	85 b9       	out	0x05, r24	; 5
    2f90:	11 c0       	rjmp	.+34     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			break;
		
		case U8X8_MSG_GPIO_RESET:     // Reset pin: Output level in arg_int
			if(arg_int)
    2f92:	44 23       	and	r20, r20
    2f94:	21 f0       	breq	.+8      	; 0x2f9e <u8x8_avr_gpio_and_delay+0xa0>
				DISPLAY_RESET_PORT |= (1<<DISPLAY_RESET_PIN);
    2f96:	85 b1       	in	r24, 0x05	; 5
    2f98:	81 60       	ori	r24, 0x01	; 1
    2f9a:	85 b9       	out	0x05, r24	; 5
    2f9c:	0b c0       	rjmp	.+22     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
			else
				DISPLAY_RESET_PORT &= ~(1<<DISPLAY_RESET_PIN);
    2f9e:	85 b1       	in	r24, 0x05	; 5
    2fa0:	8e 7f       	andi	r24, 0xFE	; 254
    2fa2:	85 b9       	out	0x05, r24	; 5
    2fa4:	07 c0       	rjmp	.+14     	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
    2fa6:	ec 01       	movw	r28, r24
			break;
		default:
			if (u8x8_avr_delay(u8x8, msg, arg_int, arg_ptr))	// check for any delay msgs
    2fa8:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <u8x8_avr_delay>
    2fac:	81 11       	cpse	r24, r1
    2fae:	02 c0       	rjmp	.+4      	; 0x2fb4 <u8x8_avr_gpio_and_delay+0xb6>
				return 1;
			u8x8_SetGPIOResult(u8x8, 1);      // default return value
    2fb0:	81 e0       	ldi	r24, 0x01	; 1
    2fb2:	89 8f       	std	Y+25, r24	; 0x19
			break;
	}
	return 1;
}
    2fb4:	81 e0       	ldi	r24, 0x01	; 1
    2fb6:	df 91       	pop	r29
    2fb8:	cf 91       	pop	r28
    2fba:	08 95       	ret

00002fbc <__vector_4>:

volatile int global_iteration_direction = -1;

ISR(PCINT1_vect) {
    2fbc:	1f 92       	push	r1
    2fbe:	0f 92       	push	r0
    2fc0:	0f b6       	in	r0, 0x3f	; 63
    2fc2:	0f 92       	push	r0
    2fc4:	11 24       	eor	r1, r1
    2fc6:	8f 93       	push	r24
    2fc8:	9f 93       	push	r25
	if (!(PINC & 0b00000001)) {
    2fca:	30 99       	sbic	0x06, 0	; 6
    2fcc:	07 c0       	rjmp	.+14     	; 0x2fdc <__vector_4+0x20>
		global_iteration_direction = 1;
    2fce:	81 e0       	ldi	r24, 0x01	; 1
    2fd0:	90 e0       	ldi	r25, 0x00	; 0
    2fd2:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <global_iteration_direction+0x1>
    2fd6:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <global_iteration_direction>
    2fda:	0f c0       	rjmp	.+30     	; 0x2ffa <__vector_4+0x3e>
	}
	else if (!(PINC & 0b00000010)) {
    2fdc:	31 99       	sbic	0x06, 1	; 6
    2fde:	05 c0       	rjmp	.+10     	; 0x2fea <__vector_4+0x2e>
		global_iteration_direction = 0;
    2fe0:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <global_iteration_direction+0x1>
    2fe4:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <global_iteration_direction>
    2fe8:	08 c0       	rjmp	.+16     	; 0x2ffa <__vector_4+0x3e>
	}
	else if (!(PINC & 0b00000100)) {
    2fea:	32 99       	sbic	0x06, 2	; 6
    2fec:	06 c0       	rjmp	.+12     	; 0x2ffa <__vector_4+0x3e>
		global_iteration_direction = -1;
    2fee:	8f ef       	ldi	r24, 0xFF	; 255
    2ff0:	9f ef       	ldi	r25, 0xFF	; 255
    2ff2:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <global_iteration_direction+0x1>
    2ff6:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <global_iteration_direction>
	}
}
    2ffa:	9f 91       	pop	r25
    2ffc:	8f 91       	pop	r24
    2ffe:	0f 90       	pop	r0
    3000:	0f be       	out	0x3f, r0	; 63
    3002:	0f 90       	pop	r0
    3004:	1f 90       	pop	r1
    3006:	18 95       	reti

00003008 <main>:

int main(void)
{
	cli();
    3008:	f8 94       	cli
	DDRC = 0b00001000;
    300a:	88 e0       	ldi	r24, 0x08	; 8
    300c:	87 b9       	out	0x07, r24	; 7
	PORTC = 0b00000111;
    300e:	87 e0       	ldi	r24, 0x07	; 7
    3010:	88 b9       	out	0x08, r24	; 8
	PCMSK1 = 0b00000111;
    3012:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7f806c>
	PCICR = 0b00000010;
    3016:	82 e0       	ldi	r24, 0x02	; 2
    3018:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	sei();
    301c:	78 94       	sei
	
	u8g2_Setup_sh1106_128x64_noname_f(&u8g2, U8G2_R0, u8x8_byte_4wire_sw_spi, u8x8_avr_gpio_and_delay);
    301e:	2f e7       	ldi	r18, 0x7F	; 127
    3020:	37 e1       	ldi	r19, 0x17	; 23
    3022:	46 e5       	ldi	r20, 0x56	; 86
    3024:	54 e1       	ldi	r21, 0x14	; 20
    3026:	63 e0       	ldi	r22, 0x03	; 3
    3028:	72 e0       	ldi	r23, 0x02	; 2
    302a:	8e e6       	ldi	r24, 0x6E	; 110
    302c:	96 e0       	ldi	r25, 0x06	; 6
    302e:	0e 94 c4 0c 	call	0x1988	; 0x1988 <u8g2_Setup_sh1106_128x64_noname_f>
	
	u8g2_InitDisplay(&u8g2);
    3032:	8e e6       	ldi	r24, 0x6E	; 110
    3034:	96 e0       	ldi	r25, 0x06	; 6
    3036:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <u8x8_InitDisplay>
	u8g2_SetPowerSave(&u8g2, 0);
    303a:	60 e0       	ldi	r22, 0x00	; 0
    303c:	8e e6       	ldi	r24, 0x6E	; 110
    303e:	96 e0       	ldi	r25, 0x06	; 6
    3040:	0e 94 32 16 	call	0x2c64	; 0x2c64 <u8x8_SetPowerSave>
	static char train_name[] = "Witkacy";
	static char start_station[] = "Krakow Glowny";
	static char mid_stations[] = "Kalwaria Zebrzydowska Lanckorona - Sucha Beskidzka Zamek - Makow Podhalanski - Chabowka Stadion - Nowy Targ - Poronin";
	static char end_station[] = "Zakopane";
	
	u8g2_SetFont(&u8g2, u8g2_font_crox1hb_tf);
    3044:	6d ec       	ldi	r22, 0xCD	; 205
    3046:	7d e0       	ldi	r23, 0x0D	; 13
    3048:	8e e6       	ldi	r24, 0x6E	; 110
    304a:	96 e0       	ldi	r25, 0x06	; 6
    304c:	0e 94 78 11 	call	0x22f0	; 0x22f0 <u8g2_SetFont>
	int mid_str_width = u8g2_GetStrWidth(&u8g2, mid_stations);
    3050:	6b e8       	ldi	r22, 0x8B	; 139
    3052:	71 e0       	ldi	r23, 0x01	; 1
    3054:	8e e6       	ldi	r24, 0x6E	; 110
    3056:	96 e0       	ldi	r25, 0x06	; 6
    3058:	0e 94 8f 11 	call	0x231e	; 0x231e <u8g2_GetStrWidth>
    305c:	6c 01       	movw	r12, r24
	
			u8g2_ClearBuffer(&u8g2);
    305e:	8e e6       	ldi	r24, 0x6E	; 110
    3060:	96 e0       	ldi	r25, 0x06	; 6
    3062:	0e 94 4e 0c 	call	0x189c	; 0x189c <u8g2_ClearBuffer>
				
			u8g2_SetFont(&u8g2,  u8g2_font_lubBI10_tf);
    3066:	64 eb       	ldi	r22, 0xB4	; 180
    3068:	70 e0       	ldi	r23, 0x00	; 0
    306a:	8e e6       	ldi	r24, 0x6E	; 110
    306c:	96 e0       	ldi	r25, 0x06	; 6
    306e:	0e 94 78 11 	call	0x22f0	; 0x22f0 <u8g2_SetFont>
			u8g2_DrawStr(&u8g2, 70, 11, train_name);
    3072:	23 e8       	ldi	r18, 0x83	; 131
    3074:	31 e0       	ldi	r19, 0x01	; 1
    3076:	4b e0       	ldi	r20, 0x0B	; 11
    3078:	50 e0       	ldi	r21, 0x00	; 0
    307a:	66 e4       	ldi	r22, 0x46	; 70
    307c:	70 e0       	ldi	r23, 0x00	; 0
    307e:	8e e6       	ldi	r24, 0x6E	; 110
    3080:	96 e0       	ldi	r25, 0x06	; 6
    3082:	0e 94 22 11 	call	0x2244	; 0x2244 <u8g2_DrawStr>
				
			u8g2_SetFont(&u8g2, u8g2_font_crox1hb_tf);
    3086:	6d ec       	ldi	r22, 0xCD	; 205
    3088:	7d e0       	ldi	r23, 0x0D	; 13
    308a:	8e e6       	ldi	r24, 0x6E	; 110
    308c:	96 e0       	ldi	r25, 0x06	; 6
    308e:	0e 94 78 11 	call	0x22f0	; 0x22f0 <u8g2_SetFont>
			u8g2_DrawStr(&u8g2, 0, 11, train_number);
    3092:	2b e7       	ldi	r18, 0x7B	; 123
    3094:	31 e0       	ldi	r19, 0x01	; 1
    3096:	4b e0       	ldi	r20, 0x0B	; 11
    3098:	50 e0       	ldi	r21, 0x00	; 0
    309a:	60 e0       	ldi	r22, 0x00	; 0
    309c:	70 e0       	ldi	r23, 0x00	; 0
    309e:	8e e6       	ldi	r24, 0x6E	; 110
    30a0:	96 e0       	ldi	r25, 0x06	; 6
    30a2:	0e 94 22 11 	call	0x2244	; 0x2244 <u8g2_DrawStr>
			u8g2_DrawStr(&u8g2, 0, 28, start_station);
    30a6:	2d e6       	ldi	r18, 0x6D	; 109
    30a8:	31 e0       	ldi	r19, 0x01	; 1
    30aa:	4c e1       	ldi	r20, 0x1C	; 28
    30ac:	50 e0       	ldi	r21, 0x00	; 0
    30ae:	60 e0       	ldi	r22, 0x00	; 0
    30b0:	70 e0       	ldi	r23, 0x00	; 0
    30b2:	8e e6       	ldi	r24, 0x6E	; 110
    30b4:	96 e0       	ldi	r25, 0x06	; 6
    30b6:	0e 94 22 11 	call	0x2244	; 0x2244 <u8g2_DrawStr>
			u8g2_DrawStr(&u8g2, 38, 61, end_station);
    30ba:	24 e6       	ldi	r18, 0x64	; 100
    30bc:	31 e0       	ldi	r19, 0x01	; 1
    30be:	4d e3       	ldi	r20, 0x3D	; 61
    30c0:	50 e0       	ldi	r21, 0x00	; 0
    30c2:	66 e2       	ldi	r22, 0x26	; 38
    30c4:	70 e0       	ldi	r23, 0x00	; 0
    30c6:	8e e6       	ldi	r24, 0x6E	; 110
    30c8:	96 e0       	ldi	r25, 0x06	; 6
    30ca:	0e 94 22 11 	call	0x2244	; 0x2244 <u8g2_DrawStr>
				
			u8g2_DrawXBM(&u8g2, 99, 30, 27, 25, wagon_symbol);
    30ce:	0f 2e       	mov	r0, r31
    30d0:	f0 e0       	ldi	r31, 0x00	; 0
    30d2:	ef 2e       	mov	r14, r31
    30d4:	f1 e0       	ldi	r31, 0x01	; 1
    30d6:	ff 2e       	mov	r15, r31
    30d8:	f0 2d       	mov	r31, r0
    30da:	09 e1       	ldi	r16, 0x19	; 25
    30dc:	10 e0       	ldi	r17, 0x00	; 0
    30de:	2b e1       	ldi	r18, 0x1B	; 27
    30e0:	30 e0       	ldi	r19, 0x00	; 0
    30e2:	4e e1       	ldi	r20, 0x1E	; 30
    30e4:	50 e0       	ldi	r21, 0x00	; 0
    30e6:	63 e6       	ldi	r22, 0x63	; 99
    30e8:	70 e0       	ldi	r23, 0x00	; 0
    30ea:	8e e6       	ldi	r24, 0x6E	; 110
    30ec:	96 e0       	ldi	r25, 0x06	; 6
    30ee:	0e 94 c3 0b 	call	0x1786	; 0x1786 <u8g2_DrawXBM>
				
			u8g2_DrawHLine(&u8g2, 0, 14, 128);
    30f2:	20 e8       	ldi	r18, 0x80	; 128
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	4e e0       	ldi	r20, 0x0E	; 14
    30f8:	50 e0       	ldi	r21, 0x00	; 0
    30fa:	60 e0       	ldi	r22, 0x00	; 0
    30fc:	70 e0       	ldi	r23, 0x00	; 0
    30fe:	8e e6       	ldi	r24, 0x6E	; 110
    3100:	96 e0       	ldi	r25, 0x06	; 6
    3102:	0e 94 71 12 	call	0x24e2	; 0x24e2 <u8g2_DrawHLine>
			u8g2_DrawVLine(&u8g2, 96, 14, 50);
    3106:	22 e3       	ldi	r18, 0x32	; 50
    3108:	30 e0       	ldi	r19, 0x00	; 0
    310a:	4e e0       	ldi	r20, 0x0E	; 14
    310c:	50 e0       	ldi	r21, 0x00	; 0
    310e:	60 e6       	ldi	r22, 0x60	; 96
    3110:	70 e0       	ldi	r23, 0x00	; 0
    3112:	8e e6       	ldi	r24, 0x6E	; 110
    3114:	96 e0       	ldi	r25, 0x06	; 6
    3116:	0e 94 77 12 	call	0x24ee	; 0x24ee <u8g2_DrawVLine>
				
			u8g2_SendBuffer(&u8g2);
    311a:	8e e6       	ldi	r24, 0x6E	; 110
    311c:	96 e0       	ldi	r25, 0x06	; 6
    311e:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <u8g2_SendBuffer>
				
			u8g2_SetFontMode(&u8g2, 1);
    3122:	61 e0       	ldi	r22, 0x01	; 1
    3124:	8e e6       	ldi	r24, 0x6E	; 110
    3126:	96 e0       	ldi	r25, 0x06	; 6
    3128:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <u8g2_SetFontMode>
	
			int start_iterator = 96;
    312c:	0f 2e       	mov	r0, r31
    312e:	f0 e6       	ldi	r31, 0x60	; 96
    3130:	ef 2e       	mov	r14, r31
    3132:	f1 2c       	mov	r15, r1
    3134:	f0 2d       	mov	r31, r0
	while(1)
	{
		if (global_iteration_direction == -1) start_iterator = 95;
    3136:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <global_iteration_direction>
    313a:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <global_iteration_direction+0x1>
    313e:	01 96       	adiw	r24, 0x01	; 1
    3140:	61 f0       	breq	.+24     	; 0x315a <main+0x152>
		else if (global_iteration_direction == 1) start_iterator = -mid_str_width+1;
    3142:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <global_iteration_direction>
    3146:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <global_iteration_direction+0x1>
    314a:	01 97       	sbiw	r24, 0x01	; 1
    314c:	59 f4       	brne	.+22     	; 0x3164 <main+0x15c>
    314e:	81 e0       	ldi	r24, 0x01	; 1
    3150:	90 e0       	ldi	r25, 0x00	; 0
    3152:	7c 01       	movw	r14, r24
    3154:	ec 18       	sub	r14, r12
    3156:	fd 08       	sbc	r15, r13
    3158:	05 c0       	rjmp	.+10     	; 0x3164 <main+0x15c>
			u8g2_SetFontMode(&u8g2, 1);
	
			int start_iterator = 96;
	while(1)
	{
		if (global_iteration_direction == -1) start_iterator = 95;
    315a:	0f 2e       	mov	r0, r31
    315c:	ff e5       	ldi	r31, 0x5F	; 95
    315e:	ef 2e       	mov	r14, r31
    3160:	f1 2c       	mov	r15, r1
    3162:	f0 2d       	mov	r31, r0
		else if (global_iteration_direction == 1) start_iterator = -mid_str_width+1;
		
		for (int i=start_iterator; i>-mid_str_width && i<96; i+=global_iteration_direction)
    3164:	e7 01       	movw	r28, r14
    3166:	1b c0       	rjmp	.+54     	; 0x319e <main+0x196>
		{
			u8g2_ClearBuffer(&u8g2);
    3168:	8e e6       	ldi	r24, 0x6E	; 110
    316a:	96 e0       	ldi	r25, 0x06	; 6
    316c:	0e 94 4e 0c 	call	0x189c	; 0x189c <u8g2_ClearBuffer>
			
			u8g2_DrawStr(&u8g2, i, 45, mid_stations);
    3170:	2b e8       	ldi	r18, 0x8B	; 139
    3172:	31 e0       	ldi	r19, 0x01	; 1
    3174:	4d e2       	ldi	r20, 0x2D	; 45
    3176:	50 e0       	ldi	r21, 0x00	; 0
    3178:	be 01       	movw	r22, r28
    317a:	8e e6       	ldi	r24, 0x6E	; 110
    317c:	96 e0       	ldi	r25, 0x06	; 6
    317e:	0e 94 22 11 	call	0x2244	; 0x2244 <u8g2_DrawStr>
			
			u8g2_UpdateDisplayArea(&u8g2, 0, 4, 12, 2);
    3182:	02 e0       	ldi	r16, 0x02	; 2
    3184:	2c e0       	ldi	r18, 0x0C	; 12
    3186:	44 e0       	ldi	r20, 0x04	; 4
    3188:	60 e0       	ldi	r22, 0x00	; 0
    318a:	8e e6       	ldi	r24, 0x6E	; 110
    318c:	96 e0       	ldi	r25, 0x06	; 6
    318e:	0e 94 6f 0c 	call	0x18de	; 0x18de <u8g2_UpdateDisplayArea>
		}
    3192:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <global_iteration_direction>
    3196:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <global_iteration_direction+0x1>
	while(1)
	{
		if (global_iteration_direction == -1) start_iterator = 95;
		else if (global_iteration_direction == 1) start_iterator = -mid_str_width+1;
		
		for (int i=start_iterator; i>-mid_str_width && i<96; i+=global_iteration_direction)
    319a:	c8 0f       	add	r28, r24
    319c:	d9 1f       	adc	r29, r25
    319e:	88 27       	eor	r24, r24
    31a0:	99 27       	eor	r25, r25
    31a2:	8c 19       	sub	r24, r12
    31a4:	9d 09       	sbc	r25, r13
    31a6:	8c 17       	cp	r24, r28
    31a8:	9d 07       	cpc	r25, r29
    31aa:	2c f6       	brge	.-118    	; 0x3136 <main+0x12e>
    31ac:	c0 36       	cpi	r28, 0x60	; 96
    31ae:	d1 05       	cpc	r29, r1
    31b0:	dc f2       	brlt	.-74     	; 0x3168 <main+0x160>
    31b2:	c1 cf       	rjmp	.-126    	; 0x3136 <main+0x12e>

000031b4 <__udivmodsi4>:
    31b4:	a1 e2       	ldi	r26, 0x21	; 33
    31b6:	1a 2e       	mov	r1, r26
    31b8:	aa 1b       	sub	r26, r26
    31ba:	bb 1b       	sub	r27, r27
    31bc:	fd 01       	movw	r30, r26
    31be:	0d c0       	rjmp	.+26     	; 0x31da <__udivmodsi4_ep>

000031c0 <__udivmodsi4_loop>:
    31c0:	aa 1f       	adc	r26, r26
    31c2:	bb 1f       	adc	r27, r27
    31c4:	ee 1f       	adc	r30, r30
    31c6:	ff 1f       	adc	r31, r31
    31c8:	a2 17       	cp	r26, r18
    31ca:	b3 07       	cpc	r27, r19
    31cc:	e4 07       	cpc	r30, r20
    31ce:	f5 07       	cpc	r31, r21
    31d0:	20 f0       	brcs	.+8      	; 0x31da <__udivmodsi4_ep>
    31d2:	a2 1b       	sub	r26, r18
    31d4:	b3 0b       	sbc	r27, r19
    31d6:	e4 0b       	sbc	r30, r20
    31d8:	f5 0b       	sbc	r31, r21

000031da <__udivmodsi4_ep>:
    31da:	66 1f       	adc	r22, r22
    31dc:	77 1f       	adc	r23, r23
    31de:	88 1f       	adc	r24, r24
    31e0:	99 1f       	adc	r25, r25
    31e2:	1a 94       	dec	r1
    31e4:	69 f7       	brne	.-38     	; 0x31c0 <__udivmodsi4_loop>
    31e6:	60 95       	com	r22
    31e8:	70 95       	com	r23
    31ea:	80 95       	com	r24
    31ec:	90 95       	com	r25
    31ee:	9b 01       	movw	r18, r22
    31f0:	ac 01       	movw	r20, r24
    31f2:	bd 01       	movw	r22, r26
    31f4:	cf 01       	movw	r24, r30
    31f6:	08 95       	ret

000031f8 <__umulhisi3>:
    31f8:	a2 9f       	mul	r26, r18
    31fa:	b0 01       	movw	r22, r0
    31fc:	b3 9f       	mul	r27, r19
    31fe:	c0 01       	movw	r24, r0
    3200:	a3 9f       	mul	r26, r19
    3202:	70 0d       	add	r23, r0
    3204:	81 1d       	adc	r24, r1
    3206:	11 24       	eor	r1, r1
    3208:	91 1d       	adc	r25, r1
    320a:	b2 9f       	mul	r27, r18
    320c:	70 0d       	add	r23, r0
    320e:	81 1d       	adc	r24, r1
    3210:	11 24       	eor	r1, r1
    3212:	91 1d       	adc	r25, r1
    3214:	08 95       	ret

00003216 <memset>:
    3216:	dc 01       	movw	r26, r24
    3218:	01 c0       	rjmp	.+2      	; 0x321c <memset+0x6>
    321a:	6d 93       	st	X+, r22
    321c:	41 50       	subi	r20, 0x01	; 1
    321e:	50 40       	sbci	r21, 0x00	; 0
    3220:	e0 f7       	brcc	.-8      	; 0x321a <memset+0x4>
    3222:	08 95       	ret

00003224 <_exit>:
    3224:	f8 94       	cli

00003226 <__stop_program>:
    3226:	ff cf       	rjmp	.-2      	; 0x3226 <__stop_program>
